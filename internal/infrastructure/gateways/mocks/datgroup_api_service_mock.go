// Code generated by MockGen. DO NOT EDIT.
// Source: datgroup_api_service.go
//
// Generated by this command:
//
//	mockgen -source datgroup_api_service.go -destination mocks/datgroup_api_service_mock.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/DIMO-Network/device-definitions-api/internal/core/models"
	gomock "go.uber.org/mock/gomock"
)

// MockDATGroupAPIService is a mock of DATGroupAPIService interface.
type MockDATGroupAPIService struct {
	ctrl     *gomock.Controller
	recorder *MockDATGroupAPIServiceMockRecorder
	isgomock struct{}
}

// MockDATGroupAPIServiceMockRecorder is the mock recorder for MockDATGroupAPIService.
type MockDATGroupAPIServiceMockRecorder struct {
	mock *MockDATGroupAPIService
}

// NewMockDATGroupAPIService creates a new mock instance.
func NewMockDATGroupAPIService(ctrl *gomock.Controller) *MockDATGroupAPIService {
	mock := &MockDATGroupAPIService{ctrl: ctrl}
	mock.recorder = &MockDATGroupAPIServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDATGroupAPIService) EXPECT() *MockDATGroupAPIServiceMockRecorder {
	return m.recorder
}

// GetVINv2 mocks base method.
func (m *MockDATGroupAPIService) GetVINv2(vin string) (*models.DATGroupInfoResponse, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVINv2", vin)
	ret0, _ := ret[0].(*models.DATGroupInfoResponse)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetVINv2 indicates an expected call of GetVINv2.
func (mr *MockDATGroupAPIServiceMockRecorder) GetVINv2(vin any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVINv2", reflect.TypeOf((*MockDATGroupAPIService)(nil).GetVINv2), vin)
}
