// Code generated by MockGen. DO NOT EDIT.
// Source: japan_17vin_api.go
//
// Generated by this command:
//
//	mockgen -source japan_17vin_api.go -destination mocks/japan_17vin_api_mock.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	models "github.com/DIMO-Network/device-definitions-api/internal/core/models"
	gomock "go.uber.org/mock/gomock"
)

// MockJapan17VINAPI is a mock of Japan17VINAPI interface.
type MockJapan17VINAPI struct {
	ctrl     *gomock.Controller
	recorder *MockJapan17VINAPIMockRecorder
	isgomock struct{}
}

// MockJapan17VINAPIMockRecorder is the mock recorder for MockJapan17VINAPI.
type MockJapan17VINAPIMockRecorder struct {
	mock *MockJapan17VINAPI
}

// NewMockJapan17VINAPI creates a new mock instance.
func NewMockJapan17VINAPI(ctrl *gomock.Controller) *MockJapan17VINAPI {
	mock := &MockJapan17VINAPI{ctrl: ctrl}
	mock.recorder = &MockJapan17VINAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJapan17VINAPI) EXPECT() *MockJapan17VINAPIMockRecorder {
	return m.recorder
}

// GetVINInfo mocks base method.
func (m *MockJapan17VINAPI) GetVINInfo(vin string) (*models.Japan17MMY, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetVINInfo", vin)
	ret0, _ := ret[0].(*models.Japan17MMY)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetVINInfo indicates an expected call of GetVINInfo.
func (mr *MockJapan17VINAPIMockRecorder) GetVINInfo(vin any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetVINInfo", reflect.TypeOf((*MockJapan17VINAPI)(nil).GetVINInfo), vin)
}
