// Code generated by SQLBoiler 4.19.5 (https://github.com/aarondl/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"strconv"

	"github.com/aarondl/sqlboiler/v4/boil"
	"github.com/aarondl/strmangle"
	"github.com/friendsofgo/errors"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("models: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(cols boil.Columns, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	buf.WriteString(strconv.Itoa(cols.Kind))
	for _, w := range cols.Cols {
		buf.WriteString(w)
	}

	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

// Enum values for Powertrain
const (
	PowertrainALL           string = "ALL"
	PowertrainHybridsAndICE string = "HybridsAndICE"
	PowertrainICE           string = "ICE"
	PowertrainHEV           string = "HEV"
	PowertrainPHEV          string = "PHEV"
	PowertrainBEV           string = "BEV"
	PowertrainFCEV          string = "FCEV"
)

func AllPowertrain() []string {
	return []string{
		PowertrainALL,
		PowertrainHybridsAndICE,
		PowertrainICE,
		PowertrainHEV,
		PowertrainPHEV,
		PowertrainBEV,
		PowertrainFCEV,
	}
}

// Enum values for IntegrationType
const (
	IntegrationTypeHardware string = "Hardware"
	IntegrationTypeAPI      string = "API"
)

func AllIntegrationType() []string {
	return []string{
		IntegrationTypeHardware,
		IntegrationTypeAPI,
	}
}

// Enum values for IntegrationStyle
const (
	IntegrationStyleAddon   string = "Addon"
	IntegrationStyleOEM     string = "OEM"
	IntegrationStyleWebhook string = "Webhook"
)

func AllIntegrationStyle() []string {
	return []string{
		IntegrationStyleAddon,
		IntegrationStyleOEM,
		IntegrationStyleWebhook,
	}
}
