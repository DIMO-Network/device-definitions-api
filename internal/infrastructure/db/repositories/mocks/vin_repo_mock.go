// Code generated by MockGen. DO NOT EDIT.
// Source: vin_repo.go
//
// Generated by this command:
//
//	mockgen -source vin_repo.go -destination mocks/vin_repo_mock.go -package mocks
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/DIMO-Network/device-definitions-api/internal/infrastructure/db/models"
	gomock "go.uber.org/mock/gomock"
)

// MockVINRepository is a mock of VINRepository interface.
type MockVINRepository struct {
	ctrl     *gomock.Controller
	recorder *MockVINRepositoryMockRecorder
}

// MockVINRepositoryMockRecorder is the mock recorder for MockVINRepository.
type MockVINRepositoryMockRecorder struct {
	mock *MockVINRepository
}

// NewMockVINRepository creates a new mock instance.
func NewMockVINRepository(ctrl *gomock.Controller) *MockVINRepository {
	mock := &MockVINRepository{ctrl: ctrl}
	mock.recorder = &MockVINRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVINRepository) EXPECT() *MockVINRepositoryMockRecorder {
	return m.recorder
}

// GetOrCreateWMI mocks base method.
func (m *MockVINRepository) GetOrCreateWMI(ctx context.Context, wmi, make string) (*models.Wmi, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrCreateWMI", ctx, wmi, make)
	ret0, _ := ret[0].(*models.Wmi)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrCreateWMI indicates an expected call of GetOrCreateWMI.
func (mr *MockVINRepositoryMockRecorder) GetOrCreateWMI(ctx, wmi, make any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrCreateWMI", reflect.TypeOf((*MockVINRepository)(nil).GetOrCreateWMI), ctx, wmi, make)
}
