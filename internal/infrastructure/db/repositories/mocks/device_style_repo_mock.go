// Code generated by MockGen. DO NOT EDIT.
// Source: device_style_repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/DIMO-Network/device-definitions-api/internal/infrastructure/db/models"
	gomock "github.com/golang/mock/gomock"
)

// MockDeviceStyleRepository is a mock of DeviceStyleRepository interface.
type MockDeviceStyleRepository struct {
	ctrl     *gomock.Controller
	recorder *MockDeviceStyleRepositoryMockRecorder
}

// MockDeviceStyleRepositoryMockRecorder is the mock recorder for MockDeviceStyleRepository.
type MockDeviceStyleRepositoryMockRecorder struct {
	mock *MockDeviceStyleRepository
}

// NewMockDeviceStyleRepository creates a new mock instance.
func NewMockDeviceStyleRepository(ctrl *gomock.Controller) *MockDeviceStyleRepository {
	mock := &MockDeviceStyleRepository{ctrl: ctrl}
	mock.recorder = &MockDeviceStyleRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDeviceStyleRepository) EXPECT() *MockDeviceStyleRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDeviceStyleRepository) Create(ctx context.Context, deviceDefinitionID, name, externalStyleID, source, subModel string) (*models.DeviceStyle, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, deviceDefinitionID, name, externalStyleID, source, subModel)
	ret0, _ := ret[0].(*models.DeviceStyle)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockDeviceStyleRepositoryMockRecorder) Create(ctx, deviceDefinitionID, name, externalStyleID, source, subModel interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDeviceStyleRepository)(nil).Create), ctx, deviceDefinitionID, name, externalStyleID, source, subModel)
}
