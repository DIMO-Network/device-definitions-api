// Code generated by MockGen. DO NOT EDIT.
// Source: device_make_repo.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/DIMO-Network/poc-dimo-api/device-definitions-api/internal/infrastructure/db/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIDeviceMakeRepository is a mock of IDeviceMakeRepository interface.
type MockIDeviceMakeRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIDeviceMakeRepositoryMockRecorder
}

// MockIDeviceMakeRepositoryMockRecorder is the mock recorder for MockIDeviceMakeRepository.
type MockIDeviceMakeRepositoryMockRecorder struct {
	mock *MockIDeviceMakeRepository
}

// NewMockIDeviceMakeRepository creates a new mock instance.
func NewMockIDeviceMakeRepository(ctrl *gomock.Controller) *MockIDeviceMakeRepository {
	mock := &MockIDeviceMakeRepository{ctrl: ctrl}
	mock.recorder = &MockIDeviceMakeRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDeviceMakeRepository) EXPECT() *MockIDeviceMakeRepositoryMockRecorder {
	return m.recorder
}

// GetAll mocks base method.
func (m *MockIDeviceMakeRepository) GetAll(ctx context.Context) ([]*models.DeviceMake, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll", ctx)
	ret0, _ := ret[0].([]*models.DeviceMake)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAll indicates an expected call of GetAll.
func (mr *MockIDeviceMakeRepositoryMockRecorder) GetAll(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockIDeviceMakeRepository)(nil).GetAll), ctx)
}
