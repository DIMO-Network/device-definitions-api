// Code generated by gowsdl DO NOT EDIT.

package datgroup

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AuthenticationMethod string

const (
	AuthenticationMethodJWT AuthenticationMethod = "JWT"

	AuthenticationMethodRENOVATIO AuthenticationMethod = "RENOVATIO"

	AuthenticationMethodSIGNATURE AuthenticationMethod = "SIGNATURE"

	AuthenticationMethodPASSWORD AuthenticationMethod = "PASSWORD"

	AuthenticationMethodDO_LOGIN AuthenticationMethod = "DO_LOGIN"

	AuthenticationMethodNO_INFO AuthenticationMethod = "NO_INFO"
)

type AuthorizationErrorCode string

const (
	AuthorizationErrorCodeAUTHORIZATION_PARAMETERS_ARE_NOT_COMPLETE AuthorizationErrorCode = "AUTHORIZATION_PARAMETERS_ARE_NOT_COMPLETE"

	AuthorizationErrorCodeSESSION_ALREADY_INVALIDATED AuthorizationErrorCode = "SESSION_ALREADY_INVALIDATED"

	AuthorizationErrorCodeSIGNATURE_CHECK_FAILED AuthorizationErrorCode = "SIGNATURE_CHECK_FAILED"

	AuthorizationErrorCodeUSER_MANAGEMENT_SERVER_AUTHORIZATION_FAILED AuthorizationErrorCode = "USER_MANAGEMENT_SERVER_AUTHORIZATION_FAILED"

	AuthorizationErrorCodeUSER_HAS_NO_PERMISSIONS AuthorizationErrorCode = "USER_HAS_NO_PERMISSIONS"

	AuthorizationErrorCodeUNKNOWN_ERROR AuthorizationErrorCode = "UNKNOWN_ERROR"

	AuthorizationErrorCodeCOUNCURRENT_USER_COUNT_EXHAUSTED AuthorizationErrorCode = "COUNCURRENT_USER_COUNT_EXHAUSTED"

	AuthorizationErrorCodeUSER_HAS_NO_VALID_LOGIN AuthorizationErrorCode = "USER_HAS_NO_VALID_LOGIN"

	AuthorizationErrorCodeUSER_LOCKED_TEMPORARILY AuthorizationErrorCode = "USER_LOCKED_TEMPORARILY"

	AuthorizationErrorCodeUSER_LOCKED_PERMANENTLY AuthorizationErrorCode = "USER_LOCKED_PERMANENTLY"

	AuthorizationErrorCodeUSER_NOT_ACTIVE AuthorizationErrorCode = "USER_NOT_ACTIVE"

	AuthorizationErrorCodeUSER_DELETED AuthorizationErrorCode = "USER_DELETED"

	AuthorizationErrorCodeINTERFACE_PARTNER_SIGNATURE_CHECK_FAILED AuthorizationErrorCode = "INTERFACE_PARTNER_SIGNATURE_CHECK_FAILED"

	AuthorizationErrorCodeINTERFACE_PARTNER_HAS_NO_PERMISSION AuthorizationErrorCode = "INTERFACE_PARTNER_HAS_NO_PERMISSION"

	AuthorizationErrorCodeTOKEN_EXPIRED AuthorizationErrorCode = "TOKEN_EXPIRED"

	AuthorizationErrorCodeTOKEN_CHECK_FAILED AuthorizationErrorCode = "TOKEN_CHECK_FAILED"

	AuthorizationErrorCodeUNEXPECTED_AUTHORIZATION_METHOD AuthorizationErrorCode = "UNEXPECTED_AUTHORIZATION_METHOD"
)

type HttpMethodEnum string

const (
	HttpMethodEnumGET HttpMethodEnum = "GET"

	HttpMethodEnumPOST HttpMethodEnum = "POST"

	HttpMethodEnumHEAD HttpMethodEnum = "HEAD"

	HttpMethodEnumPUT HttpMethodEnum = "PUT"

	HttpMethodEnumOPTIONS HttpMethodEnum = "OPTIONS"

	HttpMethodEnumDELETE HttpMethodEnum = "DELETE"

	HttpMethodEnumTRACE HttpMethodEnum = "TRACE"

	HttpMethodEnumCONNECT HttpMethodEnum = "CONNECT"

	HttpMethodEnumMOVE HttpMethodEnum = "MOVE"

	HttpMethodEnumPROXY HttpMethodEnum = "PROXY"

	HttpMethodEnumPRI HttpMethodEnum = "PRI"

	HttpMethodEnumPATCH HttpMethodEnum = "PATCH"

	HttpMethodEnumUNKOWN HttpMethodEnum = "UNKOWN"
)

type InterfaceType string

const (
	InterfaceTypeSOAP InterfaceType = "SOAP"

	InterfaceTypeREST InterfaceType = "REST"

	InterfaceTypeGUI InterfaceType = "GUI"

	InterfaceTypeNO_INFO InterfaceType = "NO_INFO"
)

type AuthenticateUser struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService authenticateUser"`

	Arg0 string `xml:"arg0,omitempty" json:"arg0,omitempty"`

	Arg1 string `xml:"arg1,omitempty" json:"arg1,omitempty"`

	Arg2 string `xml:"arg2,omitempty" json:"arg2,omitempty"`

	Arg3 string `xml:"arg3,omitempty" json:"arg3,omitempty"`
}

type AuthenticateUserResponse struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService authenticateUserResponse"`

	Return_ *DatCredentials `xml:"return,omitempty" json:"return,omitempty"`
}

type DatCredentials struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService datCredentials"`

	AuthType *AuthenticationMethod `xml:"authType,omitempty" json:"authType,omitempty"`

	AuthorizationErrorMessage string `xml:"authorizationErrorMessage,omitempty" json:"authorizationErrorMessage,omitempty"`

	AuthorizationErrorReason *AuthorizationErrorCode `xml:"authorizationErrorReason,omitempty" json:"authorizationErrorReason,omitempty"`

	CustomerNumber string `xml:"customerNumber,omitempty" json:"customerNumber,omitempty"`

	Datrcbkb *Datrcbkb `xml:"datrcbkb,omitempty" json:"datrcbkb,omitempty"`

	FreeProduct bool `xml:"freeProduct,omitempty" json:"freeProduct,omitempty"`

	HttpMethod *HttpMethodEnum `xml:"httpMethod,omitempty" json:"httpMethod,omitempty"`

	InterfacePartnerNumber string `xml:"interfacePartnerNumber,omitempty" json:"interfacePartnerNumber,omitempty"`

	InterfacePartnerType *InterfaceType `xml:"interfacePartnerType,omitempty" json:"interfacePartnerType,omitempty"`

	Password string `xml:"password,omitempty" json:"password,omitempty"`

	UserAgent string `xml:"userAgent,omitempty" json:"userAgent,omitempty"`

	Username string `xml:"username,omitempty" json:"username,omitempty"`

	WsFunctionName string `xml:"wsFunctionName,omitempty" json:"wsFunctionName,omitempty"`
}

type Datrcbkb struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService datrcbkb"`

	*Datrcpda

	BenuBes string `xml:"benuBes,omitempty" json:"benuBes,omitempty"`

	BenuId string `xml:"benuId,omitempty" json:"benuId,omitempty"`

	CbmdLnr int64 `xml:"cbmdLnr,omitempty" json:"cbmdLnr,omitempty"`

	CugrLnr int64 `xml:"cugrLnr,omitempty" json:"cugrLnr,omitempty"`

	CugrName string `xml:"cugrName,omitempty" json:"cugrName,omitempty"`

	CustomerNumber string `xml:"customerNumber,omitempty" json:"customerNumber,omitempty"`

	FremdFr uint16 `xml:"fremdFr,omitempty" json:"fremdFr,omitempty"`

	IdExtern string `xml:"idExtern,omitempty" json:"idExtern,omitempty"`

	KzAktiv uint16 `xml:"kzAktiv,omitempty" json:"kzAktiv,omitempty"`

	LastFailedLogin soap.XSDDateTime `xml:"lastFailedLogin,omitempty" json:"lastFailedLogin,omitempty"`

	Lnr int64 `xml:"lnr,omitempty" json:"lnr,omitempty"`

	NrFailedLogins int32 `xml:"nrFailedLogins,omitempty" json:"nrFailedLogins,omitempty"`

	Passwort string `xml:"passwort,omitempty" json:"passwort,omitempty"`

	Standard uint16 `xml:"standard,omitempty" json:"standard,omitempty"`

	TempLocked uint16 `xml:"tempLocked,omitempty" json:"tempLocked,omitempty"`

	UserStatus bool `xml:"userStatus,omitempty" json:"userStatus,omitempty"`

	ZpLae soap.XSDDateTime `xml:"zpLae,omitempty" json:"zpLae,omitempty"`

	ZpLlog soap.XSDDateTime `xml:"zpLlog,omitempty" json:"zpLlog,omitempty"`
}

type Datrcpda struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService datrcpda"`

	*BaseBusinessObject

	CpdaLnr int64 `xml:"cpdaLnr,omitempty" json:"cpdaLnr,omitempty"`

	DefaultDatrcpkk *Datrcpkk `xml:"defaultDatrcpkk,omitempty" json:"defaultDatrcpkk,omitempty"`
}

type BaseBusinessObject struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService baseBusinessObject"`
}

type Datrcpkk struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService datrcpkk"`

	*BaseBusinessObject

	Agericht string `xml:"agericht,omitempty" json:"agericht,omitempty"`

	Anrede string `xml:"anrede,omitempty" json:"anrede,omitempty"`

	AnredeDru string `xml:"anredeDru,omitempty" json:"anredeDru,omitempty"`

	CpkkLnr int64 `xml:"cpkkLnr,omitempty" json:"cpkkLnr,omitempty"`

	DefaultAddress *Datrcpan `xml:"defaultAddress,omitempty" json:"defaultAddress,omitempty"`

	EMail string `xml:"EMail,omitempty" json:"EMail,omitempty"`

	Firma string `xml:"firma,omitempty" json:"firma,omitempty"`

	Geburt soap.XSDDateTime `xml:"geburt,omitempty" json:"geburt,omitempty"`

	Gfuehrer string `xml:"gfuehrer,omitempty" json:"gfuehrer,omitempty"`

	KzAktiv uint16 `xml:"kzAktiv,omitempty" json:"kzAktiv,omitempty"`

	Lnr int64 `xml:"lnr,omitempty" json:"lnr,omitempty"`

	Name string `xml:"name,omitempty" json:"name,omitempty"`

	Name1 string `xml:"name1,omitempty" json:"name1,omitempty"`

	Name2 string `xml:"name2,omitempty" json:"name2,omitempty"`

	Name3 string `xml:"name3,omitempty" json:"name3,omitempty"`

	NameGeb string `xml:"nameGeb,omitempty" json:"nameGeb,omitempty"`

	NameKurz string `xml:"nameKurz,omitempty" json:"nameKurz,omitempty"`

	NameLang string `xml:"nameLang,omitempty" json:"nameLang,omitempty"`

	OrtGeb string `xml:"ortGeb,omitempty" json:"ortGeb,omitempty"`

	TelFax string `xml:"telFax,omitempty" json:"telFax,omitempty"`

	TelGesch string `xml:"telGesch,omitempty" json:"telGesch,omitempty"`

	TelMobil string `xml:"telMobil,omitempty" json:"telMobil,omitempty"`

	TelPrivat string `xml:"telPrivat,omitempty" json:"telPrivat,omitempty"`

	Typ int32 `xml:"typ,omitempty" json:"typ,omitempty"`

	Vorname string `xml:"vorname,omitempty" json:"vorname,omitempty"`
}

type Datrcpan struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService datrcpan"`

	*BaseBusinessObject

	AdrLkz string `xml:"adrLkz,omitempty" json:"adrLkz,omitempty"`

	Latitude float64 `xml:"latitude,omitempty" json:"latitude,omitempty"`

	Lnr int64 `xml:"lnr,omitempty" json:"lnr,omitempty"`

	Longitude float64 `xml:"longitude,omitempty" json:"longitude,omitempty"`

	Ort string `xml:"ort,omitempty" json:"ort,omitempty"`

	PlzPostf string `xml:"plzPostf,omitempty" json:"plzPostf,omitempty"`

	PlzStr string `xml:"plzStr,omitempty" json:"plzStr,omitempty"`

	Postfach string `xml:"postfach,omitempty" json:"postfach,omitempty"`

	StrNr string `xml:"strNr,omitempty" json:"strNr,omitempty"`

	Strasse string `xml:"strasse,omitempty" json:"strasse,omitempty"`
}

type AuthenticateInterfacePartner struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService authenticateInterfacePartner"`

	Arg0 string `xml:"arg0,omitempty" json:"arg0,omitempty"`

	Arg1 string `xml:"arg1,omitempty" json:"arg1,omitempty"`
}

type AuthenticateInterfacePartnerResponse struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService authenticateInterfacePartnerResponse"`
}

type DoLogout struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService doLogout"`
}

type DoLogoutResponse struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService doLogoutResponse"`

	Result bool `xml:"result,omitempty" json:"result,omitempty"`
}

type GenerateToken struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService generateToken"`

	Request *GenerateTokenRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type GenerateTokenRequest struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService generateTokenRequest"`

	CustomerLogin string `xml:"customerLogin,omitempty" json:"customerLogin,omitempty"`

	CustomerNumber string `xml:"customerNumber,omitempty" json:"customerNumber,omitempty"`

	CustomerPassword string `xml:"customerPassword,omitempty" json:"customerPassword,omitempty"`

	IncludePermissionData bool `xml:"includePermissionData,omitempty" json:"includePermissionData,omitempty"`

	InterfacePartnerNumber string `xml:"interfacePartnerNumber,omitempty" json:"interfacePartnerNumber,omitempty"`

	InterfacePartnerSignature string `xml:"interfacePartnerSignature,omitempty" json:"interfacePartnerSignature,omitempty"`

	ProductVariant *string `xml:"productVariant,omitempty" json:"productVariant,omitempty"`

	Restrictions []*StringStringPair `xml:"restrictions,omitempty" json:"restrictions,omitempty"`
}

type GenerateTokenResponse struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService generateTokenResponse"`

	Token string `xml:"token,omitempty" json:"token,omitempty"`
}

type GetProductVersion struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService getProductVersion"`
}

type GetProductVersionResponse struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService getProductVersionResponse"`

	ProductVersion string `xml:"productVersion,omitempty" json:"productVersion,omitempty"`
}

type DoLogin struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService doLogin"`

	Request *DoLoginRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type DoLoginRequest struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService doLoginRequest"`

	CustomerLogin string `xml:"customerLogin,omitempty" json:"customerLogin,omitempty"`

	CustomerNumber string `xml:"customerNumber,omitempty" json:"customerNumber,omitempty"`

	CustomerSignature string `xml:"customerSignature,omitempty" json:"customerSignature,omitempty"`

	InterfacePartnerNumber string `xml:"interfacePartnerNumber,omitempty" json:"interfacePartnerNumber,omitempty"`

	InterfacePartnerSignature string `xml:"interfacePartnerSignature,omitempty" json:"interfacePartnerSignature,omitempty"`

	ProductVariant *string `xml:"productVariant,omitempty" json:"productVariant,omitempty"`
}

type DoLoginResponse struct {
	XMLName xml.Name `xml:"http://www.dat.eu/myClaim/soap/v2/MyClaimExternalAuthenticationService doLoginResponse"`

	SessionID string `xml:"sessionID,omitempty" json:"sessionID,omitempty"`
}

type MyClaimExternalAuthenticationService interface {
	DoLogout(request *DoLogout) (*DoLogoutResponse, error)

	DoLogoutContext(ctx context.Context, request *DoLogout) (*DoLogoutResponse, error)

	DoLogin(request *DoLogin) (*DoLoginResponse, error)

	DoLoginContext(ctx context.Context, request *DoLogin) (*DoLoginResponse, error)

	GenerateToken(request *GenerateToken) (*GenerateTokenResponse, error)

	GenerateTokenContext(ctx context.Context, request *GenerateToken) (*GenerateTokenResponse, error)

	AuthenticateUser(request *AuthenticateUser) (*AuthenticateUserResponse, error)

	AuthenticateUserContext(ctx context.Context, request *AuthenticateUser) (*AuthenticateUserResponse, error)

	GetProductVersion(request *GetProductVersion) (*GetProductVersionResponse, error)

	GetProductVersionContext(ctx context.Context, request *GetProductVersion) (*GetProductVersionResponse, error)

	AuthenticateInterfacePartner(request *AuthenticateInterfacePartner) (*AuthenticateInterfacePartnerResponse, error)

	AuthenticateInterfacePartnerContext(ctx context.Context, request *AuthenticateInterfacePartner) (*AuthenticateInterfacePartnerResponse, error)
}

type myClaimExternalAuthenticationService struct {
	client *soap.Client
}

func NewMyClaimExternalAuthenticationService(client *soap.Client) MyClaimExternalAuthenticationService {
	return &myClaimExternalAuthenticationService{
		client: client,
	}
}

func (service *myClaimExternalAuthenticationService) DoLogoutContext(ctx context.Context, request *DoLogout) (*DoLogoutResponse, error) {
	response := new(DoLogoutResponse)
	err := service.client.CallContext(ctx, "doLogout", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *myClaimExternalAuthenticationService) DoLogout(request *DoLogout) (*DoLogoutResponse, error) {
	return service.DoLogoutContext(
		context.Background(),
		request,
	)
}

func (service *myClaimExternalAuthenticationService) DoLoginContext(ctx context.Context, request *DoLogin) (*DoLoginResponse, error) {
	response := new(DoLoginResponse)
	err := service.client.CallContext(ctx, "doLogin", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *myClaimExternalAuthenticationService) DoLogin(request *DoLogin) (*DoLoginResponse, error) {
	return service.DoLoginContext(
		context.Background(),
		request,
	)
}

func (service *myClaimExternalAuthenticationService) GenerateTokenContext(ctx context.Context, request *GenerateToken) (*GenerateTokenResponse, error) {
	response := new(GenerateTokenResponse)
	err := service.client.CallContext(ctx, "generateToken", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *myClaimExternalAuthenticationService) GenerateToken(request *GenerateToken) (*GenerateTokenResponse, error) {
	return service.GenerateTokenContext(
		context.Background(),
		request,
	)
}

func (service *myClaimExternalAuthenticationService) AuthenticateUserContext(ctx context.Context, request *AuthenticateUser) (*AuthenticateUserResponse, error) {
	response := new(AuthenticateUserResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *myClaimExternalAuthenticationService) AuthenticateUser(request *AuthenticateUser) (*AuthenticateUserResponse, error) {
	return service.AuthenticateUserContext(
		context.Background(),
		request,
	)
}

func (service *myClaimExternalAuthenticationService) GetProductVersionContext(ctx context.Context, request *GetProductVersion) (*GetProductVersionResponse, error) {
	response := new(GetProductVersionResponse)
	err := service.client.CallContext(ctx, "getProductVersion", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *myClaimExternalAuthenticationService) GetProductVersion(request *GetProductVersion) (*GetProductVersionResponse, error) {
	return service.GetProductVersionContext(
		context.Background(),
		request,
	)
}

func (service *myClaimExternalAuthenticationService) AuthenticateInterfacePartnerContext(ctx context.Context, request *AuthenticateInterfacePartner) (*AuthenticateInterfacePartnerResponse, error) {
	response := new(AuthenticateInterfacePartnerResponse)
	err := service.client.CallContext(ctx, "''", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *myClaimExternalAuthenticationService) AuthenticateInterfacePartner(request *AuthenticateInterfacePartner) (*AuthenticateInterfacePartnerResponse, error) {
	return service.AuthenticateInterfacePartnerContext(
		context.Background(),
		request,
	)
}
