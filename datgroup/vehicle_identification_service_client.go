// Code generated by gowsdl DO NOT EDIT.

package datgroup

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type ActualRepairCost struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ActualRepairCost"`

	InvoiceDate *FieldDate `xml:"InvoiceDate,omitempty" json:"InvoiceDate,omitempty"`

	InvoiceNumber *FieldString `xml:"InvoiceNumber,omitempty" json:"InvoiceNumber,omitempty"`

	Designation *FieldString `xml:"Designation,omitempty" json:"Designation,omitempty"`

	ValueNet *FieldDecimal `xml:"ValueNet,omitempty" json:"ValueNet,omitempty"`

	ValueGross *FieldDecimal `xml:"ValueGross,omitempty" json:"ValueGross,omitempty"`
}

type AdditionalCostsPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs AdditionalCostsPosition"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`

	ManualPosition *FieldBoolean `xml:"ManualPosition,omitempty" json:"ManualPosition,omitempty"`

	ManualAmount *FieldBoolean `xml:"ManualAmount,omitempty" json:"ManualAmount,omitempty"`

	ManualPrice *FieldBoolean `xml:"ManualPrice,omitempty" json:"ManualPrice,omitempty"`

	ValuePerUnit *FieldDecimal `xml:"ValuePerUnit,omitempty" json:"ValuePerUnit,omitempty"`

	Amount *FieldDecimal `xml:"Amount,omitempty" json:"Amount,omitempty"`

	QuantityUnit *FieldString `xml:"QuantityUnit,omitempty" json:"QuantityUnit,omitempty"`

	PartNumber *FieldString `xml:"PartNumber,omitempty" json:"PartNumber,omitempty"`

	PartNumberOrigin *FieldString `xml:"PartNumberOrigin,omitempty" json:"PartNumberOrigin,omitempty"`

	DATPartNumber *FieldString `xml:"DATPartNumber,omitempty" json:"DATPartNumber,omitempty"`

	RequiredByProcessId *FieldInteger `xml:"RequiredByProcessId,omitempty" json:"RequiredByProcessId,omitempty"`

	IsSpecific *FieldBoolean `xml:"IsSpecific,omitempty" json:"IsSpecific,omitempty"`

	IncludedPositions *IncludedPositions `xml:"IncludedPositions,omitempty" json:"IncludedPositions,omitempty"`

	AdditionalCostsPositionPriceState *FieldString `xml:"AdditionalCostsPositionPriceState,omitempty" json:"AdditionalCostsPositionPriceState,omitempty"`

	ExternalId *FieldString `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`
}

type AdditionalData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs AdditionalData"`

	Partner string `xml:"partner,omitempty" json:"partner,omitempty"`

	ForeignBrand bool `xml:"foreignBrand,omitempty" json:"foreignBrand,omitempty"`

	CalculationWages *CalculationWages `xml:"CalculationWages,omitempty" json:"CalculationWages,omitempty"`

	MetaPositions *MetaPositions `xml:"MetaPositions,omitempty" json:"MetaPositions,omitempty"`
}

type AdditionalInsuranceData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs AdditionalInsuranceData"`

	InsuranceReferenceNumber *FieldString `xml:"InsuranceReferenceNumber,omitempty" json:"InsuranceReferenceNumber,omitempty"`

	Email *Email `xml:"Email,omitempty" json:"Email,omitempty"`
}

type AdditionalService struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs AdditionalService"`

	Selected *FieldBoolean `xml:"Selected,omitempty" json:"Selected,omitempty"`

	ServiceType *FieldString `xml:"ServiceType,omitempty" json:"ServiceType,omitempty"`

	CostOwner *FieldString `xml:"CostOwner,omitempty" json:"CostOwner,omitempty"`

	Price *FieldDecimal `xml:"Price,omitempty" json:"Price,omitempty"`

	PricePerDay *FieldDecimal `xml:"PricePerDay,omitempty" json:"PricePerDay,omitempty"`

	NbDays *FieldDecimal `xml:"NbDays,omitempty" json:"NbDays,omitempty"`

	UsedSince *FieldDateTime `xml:"UsedSince,omitempty" json:"UsedSince,omitempty"`

	UsedUntil *FieldDateTime `xml:"UsedUntil,omitempty" json:"UsedUntil,omitempty"`

	RentalCarGroup *FieldInteger `xml:"RentalCarGroup,omitempty" json:"RentalCarGroup,omitempty"`
}

type AdditionalServices struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs AdditionalServices"`

	AdditionalService []*AdditionalService `xml:"AdditionalService,omitempty" json:"AdditionalService,omitempty"`

	TotalAdditionalServicePrice *FieldDecimal `xml:"TotalAdditionalServicePrice,omitempty" json:"TotalAdditionalServicePrice,omitempty"`
}

type AdditionalVehicle struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs AdditionalVehicle"`

	Name *FieldString `xml:"Name,omitempty" json:"Name,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	ExternalId *FieldString `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	IdSD2 *FieldString12 `xml:"IdSD2,omitempty" json:"IdSD2,omitempty"`

	IdSDo *FieldInteger `xml:"IdSDo,omitempty" json:"IdSDo,omitempty"`

	IdExtern *FieldString40 `xml:"IdExtern,omitempty" json:"IdExtern,omitempty"`

	Country *FieldString3 `xml:"Country,omitempty" json:"Country,omitempty"`

	Language *FieldString5 `xml:"Language,omitempty" json:"Language,omitempty"`

	Currency *FieldString3 `xml:"Currency,omitempty" json:"Currency,omitempty"`

	UsageType *FieldString `xml:"UsageType,omitempty" json:"UsageType,omitempty"`

	CDYear *FieldInteger `xml:"CDYear,omitempty" json:"CDYear,omitempty"`

	CDMonth *FieldInteger `xml:"CDMonth,omitempty" json:"CDMonth,omitempty"`

	Vehicle *Vehicle `xml:"Vehicle,omitempty" json:"Vehicle,omitempty"`

	Images *Images `xml:"Images,omitempty" json:"Images,omitempty"`

	VAT *VAT `xml:"VAT,omitempty" json:"VAT,omitempty"`

	Management AnyType `xml:"Management,omitempty" json:"Management,omitempty"`

	TradingData *TradingData `xml:"TradingData,omitempty" json:"TradingData,omitempty"`

	Valuation *Valuation `xml:"Valuation,omitempty" json:"Valuation,omitempty"`

	RepairCalculation *RepairCalculation `xml:"RepairCalculation,omitempty" json:"RepairCalculation,omitempty"`

	RepairOrder *RepairOrder `xml:"RepairOrder,omitempty" json:"RepairOrder,omitempty"`

	SparePartPositions *SparePartPositions `xml:"SparePartPositions,omitempty" json:"SparePartPositions,omitempty"`

	MaintenanceIntervals *MaintenanceIntervals `xml:"MaintenanceIntervals,omitempty" json:"MaintenanceIntervals,omitempty"`

	Comments *Comments `xml:"Comments,omitempty" json:"Comments,omitempty"`

	Attachments *Attachments `xml:"Attachments,omitempty" json:"Attachments,omitempty"`
}

type AdditionalVehicles struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs AdditionalVehicles"`

	AdditionalVehicle []*AdditionalVehicle `xml:"AdditionalVehicle,omitempty" json:"AdditionalVehicle,omitempty"`
}

type Addon struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Addon"`

	Value string `xml:",chardata" json:"-,"`

	Name string `xml:"name,attr,omitempty" json:"name,omitempty"`
}

type AddonList struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs AddonList"`

	Addon []*Addon `xml:"Addon,omitempty" json:"Addon,omitempty"`
}

type Admission struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Admission"`

	CustomerId *FieldString10 `xml:"CustomerId,omitempty" json:"CustomerId,omitempty"`

	BuyerId *FieldString10 `xml:"BuyerId,omitempty" json:"BuyerId,omitempty"`

	VehicleGroup *FieldString `xml:"VehicleGroup,omitempty" json:"VehicleGroup,omitempty"`

	AdmissionDate *FieldDateTime `xml:"AdmissionDate,omitempty" json:"AdmissionDate,omitempty"`

	AdmissionPriceNet *FieldDecimal `xml:"AdmissionPriceNet,omitempty" json:"AdmissionPriceNet,omitempty"`

	AdmissionPriceGross *FieldDecimal `xml:"AdmissionPriceGross,omitempty" json:"AdmissionPriceGross,omitempty"`

	PurchasePriceNet *FieldDecimal `xml:"PurchasePriceNet,omitempty" json:"PurchasePriceNet,omitempty"`

	PurchasePriceGross *FieldDecimal `xml:"PurchasePriceGross,omitempty" json:"PurchasePriceGross,omitempty"`

	TaxationType *FieldString `xml:"TaxationType,omitempty" json:"TaxationType,omitempty"`

	AcceptanceDate *FieldDateTime `xml:"AcceptanceDate,omitempty" json:"AcceptanceDate,omitempty"`

	AcceptanceDetails *FieldString `xml:"AcceptanceDetails,omitempty" json:"AcceptanceDetails,omitempty"`

	MileageVehicle *FieldDecimal `xml:"MileageVehicle,omitempty" json:"MileageVehicle,omitempty"`

	MileageOdometer *FieldDecimal `xml:"MileageOdometer,omitempty" json:"MileageOdometer,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	DeregistrationDate *FieldDateTime `xml:"DeregistrationDate,omitempty" json:"DeregistrationDate,omitempty"`

	ResidualWarrantyType *FieldString `xml:"ResidualWarrantyType,omitempty" json:"ResidualWarrantyType,omitempty"`

	ResidualWarrantyUntil *FieldDateTime `xml:"ResidualWarrantyUntil,omitempty" json:"ResidualWarrantyUntil,omitempty"`

	ResidualWarrantyValueNet *FieldDecimal `xml:"ResidualWarrantyValueNet,omitempty" json:"ResidualWarrantyValueNet,omitempty"`

	ResidualWarrantyValueGross *FieldDecimal `xml:"ResidualWarrantyValueGross,omitempty" json:"ResidualWarrantyValueGross,omitempty"`

	PaymentAgreements *FieldString `xml:"PaymentAgreements,omitempty" json:"PaymentAgreements,omitempty"`

	OtherAgreements *FieldString `xml:"OtherAgreements,omitempty" json:"OtherAgreements,omitempty"`

	BusinessType *FieldString `xml:"BusinessType,omitempty" json:"BusinessType,omitempty"`

	AcceptanceInfo *FieldString `xml:"AcceptanceInfo,omitempty" json:"AcceptanceInfo,omitempty"`

	Buyer *FieldString `xml:"Buyer,omitempty" json:"Buyer,omitempty"`

	ProvisionOn *FieldDateTime `xml:"ProvisionOn,omitempty" json:"ProvisionOn,omitempty"`

	FollowUpBusiness *FollowUpBusiness `xml:"FollowUpBusiness,omitempty" json:"FollowUpBusiness,omitempty"`

	Labelling *Labelling `xml:"Labelling,omitempty" json:"Labelling,omitempty"`
}

type AgreementOnDeviationItem struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs AgreementOnDeviationItem"`

	AgreementPosition *FieldInteger `xml:"AgreementPosition,omitempty" json:"AgreementPosition,omitempty"`

	Feature *FieldString `xml:"Feature,omitempty" json:"Feature,omitempty"`

	State *FieldString `xml:"State,omitempty" json:"State,omitempty"`
}

type Attachment struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Attachment"`

	AttachmentType *FieldString `xml:"AttachmentType,omitempty" json:"AttachmentType,omitempty"`

	FolderId *FieldString `xml:"FolderId,omitempty" json:"FolderId,omitempty"`

	Source *FieldString `xml:"Source,omitempty" json:"Source,omitempty"`

	Suffix *FieldString `xml:"suffix,omitempty" json:"suffix,omitempty"`

	Version *FieldString `xml:"version,omitempty" json:"version,omitempty"`

	Filename *FieldString `xml:"filename,omitempty" json:"filename,omitempty"`

	FilenameShort *FieldString `xml:"filenameShort,omitempty" json:"filenameShort,omitempty"`

	Offset *FieldInteger `xml:"offset,omitempty" json:"offset,omitempty"`

	Length *FieldInteger `xml:"length,omitempty" json:"length,omitempty"`

	Description *FieldString `xml:"description,omitempty" json:"description,omitempty"`

	B64Data *FieldString `xml:"b64Data,omitempty" json:"b64Data,omitempty"`

	FileDate *FieldDateTime `xml:"FileDate,omitempty" json:"FileDate,omitempty"`

	Name *FieldString20 `xml:"Name,omitempty" json:"Name,omitempty"`

	Number *FieldInteger `xml:"Number,omitempty" json:"Number,omitempty"`

	Thumbnail *FieldBinary `xml:"Thumbnail,omitempty" json:"Thumbnail,omitempty"`

	Usage *FieldString5 `xml:"Usage,omitempty" json:"Usage,omitempty"`

	DATProcessIdList *DATProcessIdList `xml:"DATProcessIdList,omitempty" json:"DATProcessIdList,omitempty"`
}

type Attachments struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Attachments"`

	Attachment []*Attachment `xml:"Attachment,omitempty" json:"Attachment,omitempty"`
}

type Axle struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Axle"`

	AxleNo *FieldInteger `xml:"AxleNo,omitempty" json:"AxleNo,omitempty"`

	TireId *FieldInteger `xml:"TireId,omitempty" json:"TireId,omitempty"`

	TireState *FieldString `xml:"TireState,omitempty" json:"TireState,omitempty"`

	NrOfTires *FieldInteger `xml:"NrOfTires,omitempty" json:"NrOfTires,omitempty"`

	TireType *FieldString `xml:"TireType,omitempty" json:"TireType,omitempty"`

	TireTypeTextId *FieldString `xml:"TireTypeTextId,omitempty" json:"TireTypeTextId,omitempty"`

	TireOriginalPrice *FieldDecimal `xml:"TireOriginalPrice,omitempty" json:"TireOriginalPrice,omitempty"`

	TireSpeedIndex *FieldString `xml:"TireSpeedIndex,omitempty" json:"TireSpeedIndex,omitempty"`

	TireSize *FieldString `xml:"TireSize,omitempty" json:"TireSize,omitempty"`

	TireSafetySystem *FieldString `xml:"TireSafetySystem,omitempty" json:"TireSafetySystem,omitempty"`

	TireManufacturer *FieldInteger `xml:"TireManufacturer,omitempty" json:"TireManufacturer,omitempty"`

	TireManufacturerName *FieldString `xml:"TireManufacturerName,omitempty" json:"TireManufacturerName,omitempty"`

	PrintLoadCapacityIdx *FieldBoolean `xml:"PrintLoadCapacityIdx,omitempty" json:"PrintLoadCapacityIdx,omitempty"`

	TireOriginalTreadDepth *FieldInteger `xml:"TireOriginalTreadDepth,omitempty" json:"TireOriginalTreadDepth,omitempty"`

	TireOriginalTreadDepthUser *FieldInteger `xml:"TireOriginalTreadDepthUser,omitempty" json:"TireOriginalTreadDepthUser,omitempty"`

	TireOriginalTreadDepthN *FieldDecimal `xml:"TireOriginalTreadDepthN,omitempty" json:"TireOriginalTreadDepthN,omitempty"`

	TireOriginalTreadDepthNUser *FieldDecimal `xml:"TireOriginalTreadDepthNUser,omitempty" json:"TireOriginalTreadDepthNUser,omitempty"`

	TireLoadCapacityIndex *FieldInteger `xml:"TireLoadCapacityIndex,omitempty" json:"TireLoadCapacityIndex,omitempty"`

	TireLoadCapacityIndex2 *FieldInteger `xml:"TireLoadCapacityIndex2,omitempty" json:"TireLoadCapacityIndex2,omitempty"`

	TreadDepthLeftOuterPerc *FieldDecimal `xml:"TreadDepthLeftOuterPerc,omitempty" json:"TreadDepthLeftOuterPerc,omitempty"`

	TreadDepthLeftInnerPerc *FieldDecimal `xml:"TreadDepthLeftInnerPerc,omitempty" json:"TreadDepthLeftInnerPerc,omitempty"`

	TreadDepthRightInnerPerc *FieldDecimal `xml:"TreadDepthRightInnerPerc,omitempty" json:"TreadDepthRightInnerPerc,omitempty"`

	TreadDepthRightOuterPerc *FieldDecimal `xml:"TreadDepthRightOuterPerc,omitempty" json:"TreadDepthRightOuterPerc,omitempty"`

	TreadDepthLeftOuterMm *FieldDecimal `xml:"TreadDepthLeftOuterMm,omitempty" json:"TreadDepthLeftOuterMm,omitempty"`

	TreadDepthLeftInnerMm *FieldDecimal `xml:"TreadDepthLeftInnerMm,omitempty" json:"TreadDepthLeftInnerMm,omitempty"`

	TreadDepthRightInnerMm *FieldDecimal `xml:"TreadDepthRightInnerMm,omitempty" json:"TreadDepthRightInnerMm,omitempty"`

	TreadDepthRightOuterMm *FieldDecimal `xml:"TreadDepthRightOuterMm,omitempty" json:"TreadDepthRightOuterMm,omitempty"`

	ManualEntry *FieldBoolean `xml:"ManualEntry,omitempty" json:"ManualEntry,omitempty"`

	RetreadedLeftOuter *FieldBoolean `xml:"RetreadedLeftOuter,omitempty" json:"RetreadedLeftOuter,omitempty"`

	RetreadedLeftInner *FieldBoolean `xml:"RetreadedLeftInner,omitempty" json:"RetreadedLeftInner,omitempty"`

	RetreadedRightInner *FieldBoolean `xml:"RetreadedRightInner,omitempty" json:"RetreadedRightInner,omitempty"`

	RetreadedRightOuter *FieldBoolean `xml:"RetreadedRightOuter,omitempty" json:"RetreadedRightOuter,omitempty"`

	TireAveragePriceUser *FieldDecimal `xml:"TireAveragePriceUser,omitempty" json:"TireAveragePriceUser,omitempty"`

	TireBrandPrice *FieldDecimal `xml:"TireBrandPrice,omitempty" json:"TireBrandPrice,omitempty"`

	TireBrandPriceUser *FieldDecimal `xml:"TireBrandPriceUser,omitempty" json:"TireBrandPriceUser,omitempty"`

	TireManufacturerId *FieldInteger `xml:"TireManufacturerId,omitempty" json:"TireManufacturerId,omitempty"`

	TireManufacturerTextId *FieldInteger `xml:"TireManufacturerTextId,omitempty" json:"TireManufacturerTextId,omitempty"`

	TireBrandId *FieldInteger `xml:"TireBrandId,omitempty" json:"TireBrandId,omitempty"`

	TireBrandName *FieldString `xml:"TireBrandName,omitempty" json:"TireBrandName,omitempty"`

	TireBrandTextId *FieldInteger `xml:"TireBrandTextId,omitempty" json:"TireBrandTextId,omitempty"`

	TireBrandEanCode *FieldString40 `xml:"TireBrandEanCode,omitempty" json:"TireBrandEanCode,omitempty"`

	ProductCodeNumber *FieldInteger `xml:"ProductCodeNumber,omitempty" json:"ProductCodeNumber,omitempty"`
}

type BaseSummaryItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs BaseSummaryItaly"`

	WorkTimeReplace *FieldDecimal `xml:"WorkTimeReplace,omitempty" json:"WorkTimeReplace,omitempty"`

	WorkTimeOverhaul *FieldDecimal `xml:"WorkTimeOverhaul,omitempty" json:"WorkTimeOverhaul,omitempty"`

	WorkTimeMechanic *FieldDecimal `xml:"WorkTimeMechanic,omitempty" json:"WorkTimeMechanic,omitempty"`

	WorkTimeLacquer *FieldDecimal `xml:"WorkTimeLacquer,omitempty" json:"WorkTimeLacquer,omitempty"`

	ValueParts *FieldDecimal `xml:"ValueParts,omitempty" json:"ValueParts,omitempty"`
}

type BlanketCalculation struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs BlanketCalculation"`

	LacquerCosts *FieldDecimal `xml:"LacquerCosts,omitempty" json:"LacquerCosts,omitempty"`

	LabourCosts *FieldDecimal `xml:"LabourCosts,omitempty" json:"LabourCosts,omitempty"`

	SparePartsCosts *FieldDecimal `xml:"SparePartsCosts,omitempty" json:"SparePartsCosts,omitempty"`

	Total *FieldDecimal `xml:"Total,omitempty" json:"Total,omitempty"`

	TotalWithVAT *FieldDecimal `xml:"TotalWithVAT,omitempty" json:"TotalWithVAT,omitempty"`
}

type CalcResultsHistory struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs CalcResultsHistory"`

	CalcResultHistory []*CalcResult `xml:"CalcResultHistory,omitempty" json:"CalcResultHistory,omitempty"`
}

type CalculationWage struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs CalculationWage"`

	Type string `xml:"type,attr,omitempty" json:"type,omitempty"`

	Value float64 `xml:"value,attr,omitempty" json:"value,omitempty"`
}

type CalculationWages struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs CalculationWages"`

	CalculationWage []*CalculationWage `xml:"CalculationWage,omitempty" json:"CalculationWage,omitempty"`
}

type Capacity struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Capacity"`

	Type int32 `xml:"type,attr,omitempty" json:"type,omitempty"`

	Desc string `xml:"desc,attr,omitempty" json:"desc,omitempty"`

	Min float64 `xml:"min,attr,omitempty" json:"min,omitempty"`

	Max float64 `xml:"max,attr,omitempty" json:"max,omitempty"`

	Unit string `xml:"unit,attr,omitempty" json:"unit,omitempty"`

	Condition string `xml:"condition,attr,omitempty" json:"condition,omitempty"`
}

type ClientContactAddresses struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ClientContactAddresses"`

	ClientContactAddress []*Address `xml:"ClientContactAddress,omitempty" json:"ClientContactAddress,omitempty"`
}

type Comment struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Comment"`

	CommentType *FieldString `xml:"CommentType,omitempty" json:"CommentType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Text *FieldString `xml:"Text,omitempty" json:"Text,omitempty"`

	Comment1 *FieldString `xml:"comment1,omitempty" json:"comment1,omitempty"`

	Comment2 *FieldString `xml:"comment2,omitempty" json:"comment2,omitempty"`

	Kz *FieldInteger `xml:"kz,omitempty" json:"kz,omitempty"`
}

type Comments struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Comments"`

	Comment []*Comment `xml:"Comment,omitempty" json:"Comment,omitempty"`
}

type Compare struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Compare"`

	MandatorId *FieldString `xml:"MandatorId,omitempty" json:"MandatorId,omitempty"`

	International *FieldString `xml:"International,omitempty" json:"International,omitempty"`

	NameMandatory *FieldBoolean `xml:"NameMandatory,omitempty" json:"NameMandatory,omitempty"`

	ConfigurationHidden *FieldBoolean `xml:"ConfigurationHidden,omitempty" json:"ConfigurationHidden,omitempty"`

	BaseType *FieldString `xml:"BaseType,omitempty" json:"BaseType,omitempty"`

	IncludeVat *FieldBoolean `xml:"IncludeVat,omitempty" json:"IncludeVat,omitempty"`

	PriceType *FieldString `xml:"PriceType,omitempty" json:"PriceType,omitempty"`

	RasterType *FieldString `xml:"RasterType,omitempty" json:"RasterType,omitempty"`

	MilageType *FieldString `xml:"MilageType,omitempty" json:"MilageType,omitempty"`

	Tracking *FieldString `xml:"Tracking,omitempty" json:"Tracking,omitempty"`

	FlatEquipmentValueFlag *FieldBoolean `xml:"FlatEquipmentValueFlag,omitempty" json:"FlatEquipmentValueFlag,omitempty"`

	FlatEquipmentValueType *FieldString `xml:"FlatEquipmentValueType,omitempty" json:"FlatEquipmentValueType,omitempty"`

	FlatEquipmentValue *FieldDecimal `xml:"FlatEquipmentValue,omitempty" json:"FlatEquipmentValue,omitempty"`

	CountryCode *FieldString `xml:"CountryCode,omitempty" json:"CountryCode,omitempty"`

	CompareFlatEquipments struct {
		CompareFlatEquipment []*CompareFlatEquipment `xml:"CompareFlatEquipment,omitempty" json:"CompareFlatEquipment,omitempty"`
	} `xml:"CompareFlatEquipments,omitempty" json:"CompareFlatEquipments,omitempty"`

	CompareParameters struct {
		CompareParameter []*CompareParameter `xml:"CompareParameter,omitempty" json:"CompareParameter,omitempty"`
	} `xml:"CompareParameters,omitempty" json:"CompareParameters,omitempty"`
}

type CompareFlatEquipment struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs CompareFlatEquipment"`

	OriginalPricePercentage *FieldDecimal `xml:"OriginalPricePercentage,omitempty" json:"OriginalPricePercentage,omitempty"`

	DecreaseType *FieldString `xml:"DecreaseType,omitempty" json:"DecreaseType,omitempty"`

	OriginalPrice *FieldDecimal `xml:"OriginalPrice,omitempty" json:"OriginalPrice,omitempty"`

	Value *FieldDecimal `xml:"Value,omitempty" json:"Value,omitempty"`
}

type CompareParameter struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs CompareParameter"`

	Type *FieldString `xml:"Type,omitempty" json:"Type,omitempty"`

	Position *FieldInteger `xml:"Position,omitempty" json:"Position,omitempty"`

	Milage *FieldInteger `xml:"Milage,omitempty" json:"Milage,omitempty"`

	Age *FieldInteger `xml:"Age,omitempty" json:"Age,omitempty"`
}

type Condition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Condition"`

	OwnerCorrectionPerc *FieldDecimal `xml:"OwnerCorrectionPerc,omitempty" json:"OwnerCorrectionPerc,omitempty"`

	DatOwnerCorrectionPerc *FieldDecimal `xml:"DatOwnerCorrectionPerc,omitempty" json:"DatOwnerCorrectionPerc,omitempty"`

	OwnerCorrectionAmount *FieldDecimal `xml:"OwnerCorrectionAmount,omitempty" json:"OwnerCorrectionAmount,omitempty"`

	OwnerCorrectionAmountGross *FieldDecimal `xml:"OwnerCorrectionAmountGross,omitempty" json:"OwnerCorrectionAmountGross,omitempty"`

	ConditionCorrectionFactorPerc *FieldDecimal `xml:"ConditionCorrectionFactorPerc,omitempty" json:"ConditionCorrectionFactorPerc,omitempty"`

	DatConditionCorrectionFactorPerc *FieldDecimal `xml:"DatConditionCorrectionFactorPerc,omitempty" json:"DatConditionCorrectionFactorPerc,omitempty"`

	ConditionCorrectionAmount *FieldDecimal `xml:"ConditionCorrectionAmount,omitempty" json:"ConditionCorrectionAmount,omitempty"`

	ConditionCorrectionAmountGross *FieldDecimal `xml:"ConditionCorrectionAmountGross,omitempty" json:"ConditionCorrectionAmountGross,omitempty"`

	ConditionCorrectionDescription *FieldString40 `xml:"ConditionCorrectionDescription,omitempty" json:"ConditionCorrectionDescription,omitempty"`

	NumberOfOwners *FieldInteger `xml:"NumberOfOwners,omitempty" json:"NumberOfOwners,omitempty"`

	NumberOfOwnersN *FieldString `xml:"NumberOfOwnersN,omitempty" json:"NumberOfOwnersN,omitempty"`

	NumberOfProprietors *FieldString `xml:"NumberOfProprietors,omitempty" json:"NumberOfProprietors,omitempty"`

	AccidentDamage *FieldString `xml:"AccidentDamage,omitempty" json:"AccidentDamage,omitempty"`

	IncreaseInValue *FieldDecimal `xml:"IncreaseInValue,omitempty" json:"IncreaseInValue,omitempty"`

	DatIncreaseInValue *FieldDecimal `xml:"DatIncreaseInValue,omitempty" json:"DatIncreaseInValue,omitempty"`

	IncreaseInValueGross *FieldDecimal `xml:"IncreaseInValueGross,omitempty" json:"IncreaseInValueGross,omitempty"`

	DatIncreaseInValueGross *FieldDecimal `xml:"DatIncreaseInValueGross,omitempty" json:"DatIncreaseInValueGross,omitempty"`

	CommentIncreaseInValue *FieldString `xml:"CommentIncreaseInValue,omitempty" json:"CommentIncreaseInValue,omitempty"`

	DecreaseInValue *FieldDecimal `xml:"DecreaseInValue,omitempty" json:"DecreaseInValue,omitempty"`

	DatDecreaseInValue *FieldDecimal `xml:"DatDecreaseInValue,omitempty" json:"DatDecreaseInValue,omitempty"`

	DecreaseInValueGross *FieldDecimal `xml:"DecreaseInValueGross,omitempty" json:"DecreaseInValueGross,omitempty"`

	DatDecreaseInValueGross *FieldDecimal `xml:"DatDecreaseInValueGross,omitempty" json:"DatDecreaseInValueGross,omitempty"`

	CommentDecreaseInValue *FieldString `xml:"CommentDecreaseInValue,omitempty" json:"CommentDecreaseInValue,omitempty"`

	TiresMountedValue *FieldDecimal `xml:"TiresMountedValue,omitempty" json:"TiresMountedValue,omitempty"`

	DatTiresMountedValue *FieldDecimal `xml:"DatTiresMountedValue,omitempty" json:"DatTiresMountedValue,omitempty"`

	TiresMountedValueGross *FieldDecimal `xml:"TiresMountedValueGross,omitempty" json:"TiresMountedValueGross,omitempty"`

	DatTiresMountedValueGross *FieldDecimal `xml:"DatTiresMountedValueGross,omitempty" json:"DatTiresMountedValueGross,omitempty"`

	TiresUnmountedValue *FieldDecimal `xml:"TiresUnmountedValue,omitempty" json:"TiresUnmountedValue,omitempty"`

	DatTiresUnmountedValue *FieldDecimal `xml:"DatTiresUnmountedValue,omitempty" json:"DatTiresUnmountedValue,omitempty"`

	TiresUnmountedValueGross *FieldDecimal `xml:"TiresUnmountedValueGross,omitempty" json:"TiresUnmountedValueGross,omitempty"`

	DatTiresUnmountedValueGross *FieldDecimal `xml:"DatTiresUnmountedValueGross,omitempty" json:"DatTiresUnmountedValueGross,omitempty"`

	RepairCosts *FieldDecimal `xml:"RepairCosts,omitempty" json:"RepairCosts,omitempty"`

	DatRepairCosts *FieldDecimal `xml:"DatRepairCosts,omitempty" json:"DatRepairCosts,omitempty"`

	RepairCostsGross *FieldDecimal `xml:"RepairCostsGross,omitempty" json:"RepairCostsGross,omitempty"`

	DatRepairCostsGross *FieldDecimal `xml:"DatRepairCostsGross,omitempty" json:"DatRepairCostsGross,omitempty"`

	ConditionSubTotal1 *FieldDecimal `xml:"ConditionSubTotal1,omitempty" json:"ConditionSubTotal1,omitempty"`

	ConditionSubTotal1Gross *FieldDecimal `xml:"ConditionSubTotal1Gross,omitempty" json:"ConditionSubTotal1Gross,omitempty"`

	ConditionSubTotal2 *FieldDecimal `xml:"ConditionSubTotal2,omitempty" json:"ConditionSubTotal2,omitempty"`

	ConditionSubTotal2Gross *FieldDecimal `xml:"ConditionSubTotal2Gross,omitempty" json:"ConditionSubTotal2Gross,omitempty"`

	ConditionDataAvailable *FieldBoolean `xml:"ConditionDataAvailable,omitempty" json:"ConditionDataAvailable,omitempty"`

	NextGeneralInspection *FieldDate `xml:"NextGeneralInspection,omitempty" json:"NextGeneralInspection,omitempty"`

	NextExhaustInspection *FieldDate `xml:"NextExhaustInspection,omitempty" json:"NextExhaustInspection,omitempty"`

	NextServiceDate *FieldDate `xml:"NextServiceDate,omitempty" json:"NextServiceDate,omitempty"`

	LastServiceDate *FieldDate `xml:"LastServiceDate,omitempty" json:"LastServiceDate,omitempty"`

	NextServiceMileage *FieldInteger `xml:"NextServiceMileage,omitempty" json:"NextServiceMileage,omitempty"`

	LastServiceMileage *FieldInteger `xml:"LastServiceMileage,omitempty" json:"LastServiceMileage,omitempty"`

	RepairCostsInTradeMargin *FieldBoolean `xml:"RepairCostsInTradeMargin,omitempty" json:"RepairCostsInTradeMargin,omitempty"`

	ConditionComment *FieldString `xml:"ConditionComment,omitempty" json:"ConditionComment,omitempty"`

	DamageAmount *FieldDecimal `xml:"DamageAmount,omitempty" json:"DamageAmount,omitempty"`

	Damage *FieldString `xml:"Damage,omitempty" json:"Damage,omitempty"`

	DamageExtent *FieldDecimal `xml:"DamageExtent,omitempty" json:"DamageExtent,omitempty"`

	ConditionRegistrationDate *FieldDate `xml:"ConditionRegistrationDate,omitempty" json:"ConditionRegistrationDate,omitempty"`

	ConditionDeregistrationDate *FieldDate `xml:"ConditionDeregistrationDate,omitempty" json:"ConditionDeregistrationDate,omitempty"`

	IdentificationProcedureStateOfHealth *FieldString `xml:"IdentificationProcedureStateOfHealth,omitempty" json:"IdentificationProcedureStateOfHealth,omitempty"`

	DatBatteryStateOfHealth *FieldDecimal `xml:"DatBatteryStateOfHealth,omitempty" json:"DatBatteryStateOfHealth,omitempty"`

	BatteryStateOfHealth *FieldDecimal `xml:"BatteryStateOfHealth,omitempty" json:"BatteryStateOfHealth,omitempty"`

	DatBatteryCorr *FieldDecimal `xml:"DatBatteryCorr,omitempty" json:"DatBatteryCorr,omitempty"`

	DatBatteryCorrGross *FieldDecimal `xml:"DatBatteryCorrGross,omitempty" json:"DatBatteryCorrGross,omitempty"`

	BatteryCorr *FieldDecimal `xml:"BatteryCorr,omitempty" json:"BatteryCorr,omitempty"`

	BatteryCorrGross *FieldDecimal `xml:"BatteryCorrGross,omitempty" json:"BatteryCorrGross,omitempty"`
}

type ContractData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ContractData"`

	ContractNumber *FieldString `xml:"ContractNumber,omitempty" json:"ContractNumber,omitempty"`

	CustomerNumber *FieldString `xml:"CustomerNumber,omitempty" json:"CustomerNumber,omitempty"`

	ContractStartingDate *FieldDate `xml:"ContractStartingDate,omitempty" json:"ContractStartingDate,omitempty"`

	MileageAtContractBegin *FieldInteger `xml:"MileageAtContractBegin,omitempty" json:"MileageAtContractBegin,omitempty"`

	ContractDurationInMonths *FieldInteger `xml:"ContractDurationInMonths,omitempty" json:"ContractDurationInMonths,omitempty"`

	ContractMileage *FieldInteger `xml:"ContractMileage,omitempty" json:"ContractMileage,omitempty"`

	ContractEndDate *FieldDate `xml:"ContractEndDate,omitempty" json:"ContractEndDate,omitempty"`

	MileageAtContractEnd *FieldInteger `xml:"MileageAtContractEnd,omitempty" json:"MileageAtContractEnd,omitempty"`
}

type CoolingUnit struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs CoolingUnit"`

	Manufacturer *FieldInteger `xml:"Manufacturer,omitempty" json:"Manufacturer,omitempty"`

	ManufacturerName *FieldString `xml:"ManufacturerName,omitempty" json:"ManufacturerName,omitempty"`

	MainModel *FieldInteger `xml:"MainModel,omitempty" json:"MainModel,omitempty"`

	MainModelName *FieldString `xml:"MainModelName,omitempty" json:"MainModelName,omitempty"`

	InitialRegistration *FieldDate `xml:"InitialRegistration,omitempty" json:"InitialRegistration,omitempty"`

	OriginalPrice *FieldDecimal `xml:"OriginalPrice,omitempty" json:"OriginalPrice,omitempty"`

	DatOriginalPrice *FieldDecimal `xml:"DatOriginalPrice,omitempty" json:"DatOriginalPrice,omitempty"`

	OriginalPriceGross *FieldDecimal `xml:"OriginalPriceGross,omitempty" json:"OriginalPriceGross,omitempty"`

	DatOriginalPriceGross *FieldDecimal `xml:"DatOriginalPriceGross,omitempty" json:"DatOriginalPriceGross,omitempty"`

	GeneralCondition *FieldDecimal `xml:"GeneralCondition,omitempty" json:"GeneralCondition,omitempty"`

	DatGeneralCondition *FieldDecimal `xml:"DatGeneralCondition,omitempty" json:"DatGeneralCondition,omitempty"`

	SalesPrice *FieldDecimal `xml:"SalesPrice,omitempty" json:"SalesPrice,omitempty"`

	DatSalesPrice *FieldDecimal `xml:"DatSalesPrice,omitempty" json:"DatSalesPrice,omitempty"`

	SalesPriceGross *FieldDecimal `xml:"SalesPriceGross,omitempty" json:"SalesPriceGross,omitempty"`

	DatSalesPriceGross *FieldDecimal `xml:"DatSalesPriceGross,omitempty" json:"DatSalesPriceGross,omitempty"`

	DriveType *FieldString `xml:"DriveType,omitempty" json:"DriveType,omitempty"`

	Usage *FieldString `xml:"Usage,omitempty" json:"Usage,omitempty"`

	MinRecommendedBodyLength *FieldInteger `xml:"MinRecommendedBodyLength,omitempty" json:"MinRecommendedBodyLength,omitempty"`

	DatMinRecommendedBodyLength *FieldInteger `xml:"DatMinRecommendedBodyLength,omitempty" json:"DatMinRecommendedBodyLength,omitempty"`

	MaxRecommendedBodyLength *FieldInteger `xml:"MaxRecommendedBodyLength,omitempty" json:"MaxRecommendedBodyLength,omitempty"`

	DatMaxRecommendedBodyLength *FieldInteger `xml:"DatMaxRecommendedBodyLength,omitempty" json:"DatMaxRecommendedBodyLength,omitempty"`
}

type CustomData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs CustomData"`

	Value string `xml:",chardata" json:"-,"`

	Name string `xml:"name,attr,omitempty" json:"name,omitempty"`
}

type CustomDataList struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs CustomDataList"`

	CustomData []*CustomData `xml:"CustomData,omitempty" json:"CustomData,omitempty"`

	Source string `xml:"source,attr,omitempty" json:"source,omitempty"`
}

type DATProcessIdComment struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DATProcessIdComment"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Comment string `xml:"Comment,omitempty" json:"Comment,omitempty"`
}

type DATProcessIdCommentList struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DATProcessIdCommentList"`

	DATProcessIdComment []*DATProcessIdComment `xml:"DATProcessIdComment,omitempty" json:"DATProcessIdComment,omitempty"`
}

type DATProcessIdList struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DATProcessIdList"`

	DATProcessIdRef []*DATProcessIdRef `xml:"DATProcessIdRef,omitempty" json:"DATProcessIdRef,omitempty"`
}

type DATProcessIdRef struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DATProcessIdRef"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`
}

type DamageDetail struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DamageDetail"`

	TotalLoss *FieldBoolean `xml:"TotalLoss,omitempty" json:"TotalLoss,omitempty"`

	TotalLossNet *FieldDecimal `xml:"TotalLossNet,omitempty" json:"TotalLossNet,omitempty"`

	FireDamage *FieldBoolean `xml:"FireDamage,omitempty" json:"FireDamage,omitempty"`

	RepairDuration int32 `xml:"RepairDuration,omitempty" json:"RepairDuration,omitempty"`

	DamagedGlassType *FieldString `xml:"DamagedGlassType,omitempty" json:"DamagedGlassType,omitempty"`

	DamageFrontMiddle *FieldBoolean `xml:"DamageFrontMiddle,omitempty" json:"DamageFrontMiddle,omitempty"`

	DamageFrontRight *FieldBoolean `xml:"DamageFrontRight,omitempty" json:"DamageFrontRight,omitempty"`

	DamageMiddleRight *FieldBoolean `xml:"DamageMiddleRight,omitempty" json:"DamageMiddleRight,omitempty"`

	DamageBehindRight *FieldBoolean `xml:"DamageBehindRight,omitempty" json:"DamageBehindRight,omitempty"`

	DamageBehindMiddle *FieldBoolean `xml:"DamageBehindMiddle,omitempty" json:"DamageBehindMiddle,omitempty"`

	DamageBehindLeft *FieldBoolean `xml:"DamageBehindLeft,omitempty" json:"DamageBehindLeft,omitempty"`

	DamageMiddleLeft *FieldBoolean `xml:"DamageMiddleLeft,omitempty" json:"DamageMiddleLeft,omitempty"`

	DamageFrontLeft *FieldBoolean `xml:"DamageFrontLeft,omitempty" json:"DamageFrontLeft,omitempty"`

	DamageAllRound *FieldBoolean `xml:"DamageAllRound,omitempty" json:"DamageAllRound,omitempty"`

	DamageTopAndBottom *FieldBoolean `xml:"DamageTopAndBottom,omitempty" json:"DamageTopAndBottom,omitempty"`

	DamageOnlyTop *FieldBoolean `xml:"DamageOnlyTop,omitempty" json:"DamageOnlyTop,omitempty"`

	DamageOnlyBottom *FieldBoolean `xml:"DamageOnlyBottom,omitempty" json:"DamageOnlyBottom,omitempty"`

	EstimatedRepairPrice *FieldDecimal `xml:"EstimatedRepairPrice,omitempty" json:"EstimatedRepairPrice,omitempty"`
}

type DamageManagement struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DamageManagement"`

	DamageProcess *DamageProcess `xml:"DamageProcess,omitempty" json:"DamageProcess,omitempty"`

	DamageDetail *DamageDetail `xml:"DamageDetail,omitempty" json:"DamageDetail,omitempty"`
}

type DamageProcess struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DamageProcess"`

	RepairDeclarationAvailable *FieldBoolean `xml:"RepairDeclarationAvailable,omitempty" json:"RepairDeclarationAvailable,omitempty"`

	SecurityAssignmentAvailable *FieldBoolean `xml:"SecurityAssignmentAvailable,omitempty" json:"SecurityAssignmentAvailable,omitempty"`

	RepairIntentDeclared *FieldBoolean `xml:"RepairIntentDeclared,omitempty" json:"RepairIntentDeclared,omitempty"`

	RepairOrderIssued *FieldBoolean `xml:"RepairOrderIssued,omitempty" json:"RepairOrderIssued,omitempty"`

	RegulationAlreadyDone *FieldBoolean `xml:"RegulationAlreadyDone,omitempty" json:"RegulationAlreadyDone,omitempty"`

	RepairAlreadyDone *FieldBoolean `xml:"RepairAlreadyDone,omitempty" json:"RepairAlreadyDone,omitempty"`

	RegulatedByIntermediaries *FieldBoolean `xml:"RegulatedByIntermediaries,omitempty" json:"RegulatedByIntermediaries,omitempty"`

	ClaimsManagementDesired *FieldBoolean `xml:"ClaimsManagementDesired,omitempty" json:"ClaimsManagementDesired,omitempty"`

	FictitiousBillingDesired *FieldBoolean `xml:"FictitiousBillingDesired,omitempty" json:"FictitiousBillingDesired,omitempty"`

	AgreementsMade *FieldBoolean `xml:"AgreementsMade,omitempty" json:"AgreementsMade,omitempty"`

	AgreementDescription *FieldString `xml:"AgreementDescription,omitempty" json:"AgreementDescription,omitempty"`

	DamageAlreadyVisited *FieldBoolean `xml:"DamageAlreadyVisited,omitempty" json:"DamageAlreadyVisited,omitempty"`

	InspectionRequired *FieldBoolean `xml:"InspectionRequired,omitempty" json:"InspectionRequired,omitempty"`

	InspectionComment *FieldString `xml:"InspectionComment,omitempty" json:"InspectionComment,omitempty"`

	SubstituteVehicleKind *FieldString `xml:"SubstituteVehicleKind,omitempty" json:"SubstituteVehicleKind,omitempty"`

	VehicleRetrievalRequired *FieldBoolean `xml:"VehicleRetrievalRequired,omitempty" json:"VehicleRetrievalRequired,omitempty"`

	VehicleRetrievalDate *FieldDateTime `xml:"VehicleRetrievalDate,omitempty" json:"VehicleRetrievalDate,omitempty"`

	VehicleRetrievalComment *FieldString `xml:"VehicleRetrievalComment,omitempty" json:"VehicleRetrievalComment,omitempty"`

	ExpertRequired *FieldBoolean `xml:"ExpertRequired,omitempty" json:"ExpertRequired,omitempty"`

	TarifFeature *FieldString `xml:"TarifFeature,omitempty" json:"TarifFeature,omitempty"`

	GdvReferenceNumber *FieldString `xml:"GdvReferenceNumber,omitempty" json:"GdvReferenceNumber,omitempty"`
}

type DamageSegment struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DamageSegment"`

	DamageNumber *FieldInteger `xml:"DamageNumber,omitempty" json:"DamageNumber,omitempty"`

	DamageName *FieldString `xml:"DamageName,omitempty" json:"DamageName,omitempty"`

	CalcResult *CalcResult `xml:"calcResult,omitempty" json:"calcResult,omitempty"`
}

type DamageSegmentation struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DamageSegmentation"`

	DamageSegment []*DamageSegment `xml:"DamageSegment,omitempty" json:"DamageSegment,omitempty"`
}

type DeductiblePartsPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DeductiblePartsPosition"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	PartNumber *FieldString `xml:"PartNumber,omitempty" json:"PartNumber,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	DeductionType *FieldString `xml:"DeductionType,omitempty" json:"DeductionType,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`

	CorrPerc *FieldDecimal `xml:"CorrPerc,omitempty" json:"CorrPerc,omitempty"`

	ValueTotalCorrected *FieldDecimal `xml:"ValueTotalCorrected,omitempty" json:"ValueTotalCorrected,omitempty"`
}

type DeductiblePartsPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DeductiblePartsPositions"`

	DeductiblePartsPosition []*DeductiblePartsPosition `xml:"DeductiblePartsPosition,omitempty" json:"DeductiblePartsPosition,omitempty"`
}

type DeductionsPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DeductionsPositions"`

	DeductiblePartsPosition []*DeductiblePartsPosition `xml:"DeductiblePartsPosition,omitempty" json:"DeductiblePartsPosition,omitempty"`
}

type DentPositionsProtocol struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DentPositionsProtocol"`

	DentPositionsProtocolEntry []*DentPositionsProtocolEntry `xml:"DentPositionsProtocolEntry,omitempty" json:"DentPositionsProtocolEntry,omitempty"`
}

type DentPositionsProtocolEntry struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DentPositionsProtocolEntry"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	CalculationMethod *FieldString `xml:"CalculationMethod,omitempty" json:"CalculationMethod,omitempty"`

	CalculationMethodDescription *FieldString `xml:"CalculationMethodDescription,omitempty" json:"CalculationMethodDescription,omitempty"`

	DentsCount *FieldString `xml:"DentsCount,omitempty" json:"DentsCount,omitempty"`

	DentsSize *FieldString `xml:"DentsSize,omitempty" json:"DentsSize,omitempty"`
}

type DiscountPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DiscountPosition"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	BaseValue *FieldDecimal `xml:"BaseValue,omitempty" json:"BaseValue,omitempty"`

	CorrectionPercentage *FieldDecimal `xml:"CorrectionPercentage,omitempty" json:"CorrectionPercentage,omitempty"`

	CorrectionValue *FieldDecimal `xml:"CorrectionValue,omitempty" json:"CorrectionValue,omitempty"`

	DiscountKind *FieldString `xml:"DiscountKind,omitempty" json:"DiscountKind,omitempty"`

	Note *FieldString `xml:"Note,omitempty" json:"Note,omitempty"`
}

type DiscountPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DiscountPositions"`

	DiscountPosition []*DiscountPosition `xml:"DiscountPosition,omitempty" json:"DiscountPosition,omitempty"`
}

type DomusAggregate struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DomusAggregate"`

	DomusProcessId *FieldString `xml:"DomusProcessId,omitempty" json:"DomusProcessId,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	WorkTimeReplace *FieldDecimal `xml:"WorkTimeReplace,omitempty" json:"WorkTimeReplace,omitempty"`

	WorkTimeOverhaul *FieldDecimal `xml:"WorkTimeOverhaul,omitempty" json:"WorkTimeOverhaul,omitempty"`

	WorkTimeLacquer *FieldDecimal `xml:"WorkTimeLacquer,omitempty" json:"WorkTimeLacquer,omitempty"`

	WorkAmountReplace *FieldDecimal `xml:"WorkAmountReplace,omitempty" json:"WorkAmountReplace,omitempty"`

	WorkAmountOverhaul *FieldDecimal `xml:"WorkAmountOverhaul,omitempty" json:"WorkAmountOverhaul,omitempty"`

	WorkAmountLacquer *FieldDecimal `xml:"WorkAmountLacquer,omitempty" json:"WorkAmountLacquer,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`

	DomusAggregateComponents *DomusAggregateComponents `xml:"DomusAggregateComponents,omitempty" json:"DomusAggregateComponents,omitempty"`
}

type DomusAggregateComponent struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DomusAggregateComponent"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	Amount *FieldDecimal `xml:"Amount,omitempty" json:"Amount,omitempty"`

	DomusProcessId *FieldString `xml:"DomusProcessId,omitempty" json:"DomusProcessId,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	PartPrice *FieldDecimal `xml:"PartPrice,omitempty" json:"PartPrice,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`

	Rc *FieldString `xml:"Rc,omitempty" json:"Rc,omitempty"`

	PartNo *FieldString `xml:"PartNo,omitempty" json:"PartNo,omitempty"`
}

type DomusAggregateComponents struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DomusAggregateComponents"`

	DomusAggregateComponent []*DomusAggregateComponent `xml:"DomusAggregateComponent,omitempty" json:"DomusAggregateComponent,omitempty"`
}

type DomusAggregates struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DomusAggregates"`

	DomusAggregate []*DomusAggregate `xml:"DomusAggregate,omitempty" json:"DomusAggregate,omitempty"`
}

type DomusExtraCharge struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DomusExtraCharge"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Duration *FieldDecimal `xml:"Duration,omitempty" json:"Duration,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`
}

type DomusExtraCharges struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DomusExtraCharges"`

	DomusExtraCharge []*DomusExtraCharge `xml:"DomusExtraCharge,omitempty" json:"DomusExtraCharge,omitempty"`
}

type DomusLacquerExtraCharge struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DomusLacquerExtraCharge"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Duration *FieldDecimal `xml:"Duration,omitempty" json:"Duration,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`
}

type DomusLacquerExtraCharges struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DomusLacquerExtraCharges"`

	DomusLacquerExtraCharge []*DomusLacquerExtraCharge `xml:"DomusLacquerExtraCharge,omitempty" json:"DomusLacquerExtraCharge,omitempty"`
}

type DomusVehicleData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs DomusVehicleData"`

	DomusVehicleType *FieldString `xml:"DomusVehicleType,omitempty" json:"DomusVehicleType,omitempty"`

	DomusManufacturer *FieldString `xml:"DomusManufacturer,omitempty" json:"DomusManufacturer,omitempty"`

	DomusBaseModel *FieldString `xml:"DomusBaseModel,omitempty" json:"DomusBaseModel,omitempty"`

	DomusSubModel *FieldString `xml:"DomusSubModel,omitempty" json:"DomusSubModel,omitempty"`

	DomusVehicleTypeName *FieldString `xml:"DomusVehicleTypeName,omitempty" json:"DomusVehicleTypeName,omitempty"`

	DomusManufacturerName *FieldString `xml:"DomusManufacturerName,omitempty" json:"DomusManufacturerName,omitempty"`

	DomusBaseModelName *FieldString `xml:"DomusBaseModelName,omitempty" json:"DomusBaseModelName,omitempty"`

	DomusSubModelName *FieldString `xml:"DomusSubModelName,omitempty" json:"DomusSubModelName,omitempty"`
}

type Dossier struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Dossier"`

	Name *FieldString `xml:"Name,omitempty" json:"Name,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	UUID *FieldString `xml:"UUID,omitempty" json:"UUID,omitempty"`

	ExternalId *FieldString `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	IdSD2 *FieldString12 `xml:"IdSD2,omitempty" json:"IdSD2,omitempty"`

	IdSDo *FieldInteger `xml:"IdSDo,omitempty" json:"IdSDo,omitempty"`

	IdSD3Local *FieldInteger `xml:"IdSD3Local,omitempty" json:"IdSD3Local,omitempty"`

	DossierId *FieldInteger `xml:"DossierId,omitempty" json:"DossierId,omitempty"`

	IdSD3Network *FieldInteger `xml:"IdSD3Network,omitempty" json:"IdSD3Network,omitempty"`

	IdExtern *FieldString40 `xml:"IdExtern,omitempty" json:"IdExtern,omitempty"`

	Country *FieldString3 `xml:"Country,omitempty" json:"Country,omitempty"`

	Language *FieldString5 `xml:"Language,omitempty" json:"Language,omitempty"`

	DataVersion *FieldDecimal `xml:"DataVersion,omitempty" json:"DataVersion,omitempty"`

	Currency *FieldString3 `xml:"Currency,omitempty" json:"Currency,omitempty"`

	DatCustomerId *FieldString10 `xml:"DatCustomerId,omitempty" json:"DatCustomerId,omitempty"`

	MerchandId *FieldDecimal `xml:"MerchandId,omitempty" json:"MerchandId,omitempty"`

	DossierType *FieldString `xml:"DossierType,omitempty" json:"DossierType,omitempty"`

	DossierOrigin *FieldString `xml:"DossierOrigin,omitempty" json:"DossierOrigin,omitempty"`

	CreateDate *FieldDateTime `xml:"CreateDate,omitempty" json:"CreateDate,omitempty"`

	CreateUser *FieldString `xml:"CreateUser,omitempty" json:"CreateUser,omitempty"`

	ChangeDate *FieldDateTime `xml:"ChangeDate,omitempty" json:"ChangeDate,omitempty"`

	ChangeUser *FieldString `xml:"ChangeUser,omitempty" json:"ChangeUser,omitempty"`

	CDYear *FieldInteger `xml:"CDYear,omitempty" json:"CDYear,omitempty"`

	CDMonth *FieldInteger `xml:"CDMonth,omitempty" json:"CDMonth,omitempty"`

	ProcedureType *FieldString `xml:"ProcedureType,omitempty" json:"ProcedureType,omitempty"`

	DatCustomerAddress *Address `xml:"DatCustomerAddress,omitempty" json:"DatCustomerAddress,omitempty"`

	Vehicle *Vehicle `xml:"Vehicle,omitempty" json:"Vehicle,omitempty"`

	Images *Images `xml:"Images,omitempty" json:"Images,omitempty"`

	ImageList *ImageList `xml:"ImageList,omitempty" json:"ImageList,omitempty"`

	VAT *VAT `xml:"VAT,omitempty" json:"VAT,omitempty"`

	Management AnyType `xml:"Management,omitempty" json:"Management,omitempty"`

	TradingData *TradingData `xml:"TradingData,omitempty" json:"TradingData,omitempty"`

	Labelling *Labelling `xml:"Labelling,omitempty" json:"Labelling,omitempty"`

	ContractData *ContractData `xml:"ContractData,omitempty" json:"ContractData,omitempty"`

	Valuation *Valuation `xml:"Valuation,omitempty" json:"Valuation,omitempty"`

	Compare *Compare `xml:"Compare,omitempty" json:"Compare,omitempty"`

	RepairCalculation *RepairCalculation `xml:"RepairCalculation,omitempty" json:"RepairCalculation,omitempty"`

	RepairOrder *RepairOrder `xml:"RepairOrder,omitempty" json:"RepairOrder,omitempty"`

	SparePartPositions *SparePartPositions `xml:"SparePartPositions,omitempty" json:"SparePartPositions,omitempty"`

	MaintenanceIntervals *MaintenanceIntervals `xml:"MaintenanceIntervals,omitempty" json:"MaintenanceIntervals,omitempty"`

	Comments *Comments `xml:"Comments,omitempty" json:"Comments,omitempty"`

	Attachments *Attachments `xml:"Attachments,omitempty" json:"Attachments,omitempty"`

	AdditionalVehicles *AdditionalVehicles `xml:"AdditionalVehicles,omitempty" json:"AdditionalVehicles,omitempty"`

	ChangeUserId *FieldInteger `xml:"ChangeUserId,omitempty" json:"ChangeUserId,omitempty"`

	CreateUserId *FieldInteger `xml:"CreateUserId,omitempty" json:"CreateUserId,omitempty"`

	WearCalculation *FieldBoolean `xml:"WearCalculation,omitempty" json:"WearCalculation,omitempty"`

	InsuranceClaim *FieldBoolean `xml:"InsuranceClaim,omitempty" json:"InsuranceClaim,omitempty"`

	AdditionalServices *AdditionalServices `xml:"AdditionalServices,omitempty" json:"AdditionalServices,omitempty"`

	ProcessManagement *ProcessManagement `xml:"ProcessManagement,omitempty" json:"ProcessManagement,omitempty"`

	TradingActivity *TradingActivity `xml:"TradingActivity,omitempty" json:"TradingActivity,omitempty"`

	TradingAdditional *TradingAdditional `xml:"TradingAdditional,omitempty" json:"TradingAdditional,omitempty"`

	MetaPositions *MetaPositions `xml:"MetaPositions,omitempty" json:"MetaPositions,omitempty"`

	TelematicData *TelematicData `xml:"TelematicData,omitempty" json:"TelematicData,omitempty"`

	Overwrite bool `xml:"overwrite,attr,omitempty" json:"overwrite,omitempty"`
}

type Dossiers struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Dossiers"`

	Dossier []*Dossier `xml:"Dossier,omitempty" json:"Dossier,omitempty"`

	Source string `xml:"source,attr,omitempty" json:"source,omitempty"`

	Type string `xml:"type,attr,omitempty" json:"type,omitempty"`
}

type Email struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Email"`

	Subject *FieldString `xml:"Subject,omitempty" json:"Subject,omitempty"`

	From *FieldString `xml:"From,omitempty" json:"From,omitempty"`

	To *FieldString `xml:"To,omitempty" json:"To,omitempty"`

	Body *FieldString `xml:"Body,omitempty" json:"Body,omitempty"`

	EmailAttachments []*EmailAttachments `xml:"EmailAttachments,omitempty" json:"EmailAttachments,omitempty"`
}

type EmailAttachments struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs EmailAttachments"`

	Filename *FieldString `xml:"Filename,omitempty" json:"Filename,omitempty"`

	Data []byte `xml:"Data,omitempty" json:"Data,omitempty"`

	MimeType *FieldString `xml:"MimeType,omitempty" json:"MimeType,omitempty"`

	Inline bool `xml:"inline,omitempty" json:"inline,omitempty"`
}

type EmissionClassItemN struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs EmissionClassItemN"`

	Type string `xml:"type,attr,omitempty" json:"type,omitempty"`

	Description string `xml:"description,attr,omitempty" json:"description,omitempty"`

	Obd bool `xml:"obd,attr,omitempty" json:"obd,omitempty"`
}

type EmissionClassN struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs EmissionClassN"`

	EmissionClassItemN []*EmissionClassItemN `xml:"EmissionClassItemN,omitempty" json:"EmissionClassItemN,omitempty"`
}

type Engine struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Engine"`

	EngingeType *FieldString30 `xml:"EngingeType,omitempty" json:"EngingeType,omitempty"`

	EngineType *FieldString30 `xml:"EngineType,omitempty" json:"EngineType,omitempty"`

	CatalyticConverterType *FieldString30 `xml:"CatalyticConverterType,omitempty" json:"CatalyticConverterType,omitempty"`

	GearType *FieldString2 `xml:"GearType,omitempty" json:"GearType,omitempty"`

	FuelMethod *FieldString `xml:"FuelMethod,omitempty" json:"FuelMethod,omitempty"`

	DatFuelMethod *FieldString `xml:"DatFuelMethod,omitempty" json:"DatFuelMethod,omitempty"`

	EnginePowerKw *FieldInteger `xml:"EnginePowerKw,omitempty" json:"EnginePowerKw,omitempty"`

	DatEnginePowerKw *FieldInteger `xml:"DatEnginePowerKw,omitempty" json:"DatEnginePowerKw,omitempty"`

	EnginePowerHp *FieldInteger `xml:"EnginePowerHp,omitempty" json:"EnginePowerHp,omitempty"`

	DatEnginePowerHp *FieldInteger `xml:"DatEnginePowerHp,omitempty" json:"DatEnginePowerHp,omitempty"`

	Cylinders *FieldInteger `xml:"Cylinders,omitempty" json:"Cylinders,omitempty"`

	DatCylinders *FieldInteger `xml:"DatCylinders,omitempty" json:"DatCylinders,omitempty"`

	Capacity *FieldInteger `xml:"Capacity,omitempty" json:"Capacity,omitempty"`

	DatCapacity *FieldInteger `xml:"DatCapacity,omitempty" json:"DatCapacity,omitempty"`

	PollutionClass *FieldString `xml:"PollutionClass,omitempty" json:"PollutionClass,omitempty"`

	Consumption *FieldDecimal `xml:"Consumption,omitempty" json:"Consumption,omitempty"`

	ConsumptionInTown *FieldDecimal `xml:"ConsumptionInTown,omitempty" json:"ConsumptionInTown,omitempty"`

	ConsumptionOutOfTown *FieldDecimal `xml:"ConsumptionOutOfTown,omitempty" json:"ConsumptionOutOfTown,omitempty"`

	Co2Emission *FieldDecimal `xml:"Co2Emission,omitempty" json:"Co2Emission,omitempty"`

	DirectInjection *FieldString `xml:"DirectInjection,omitempty" json:"DirectInjection,omitempty"`

	EngineClass *FieldString `xml:"EngineClass,omitempty" json:"EngineClass,omitempty"`

	EnginePowerHpManufacturerInformation *FieldDecimal `xml:"EnginePowerHpManufacturerInformation,omitempty" json:"EnginePowerHpManufacturerInformation,omitempty"`

	PowerKwPsManual *FieldString `xml:"PowerKwPsManual,omitempty" json:"PowerKwPsManual,omitempty"`
}

type Equipment struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Equipment"`

	ColorType *FieldString `xml:"ColorType,omitempty" json:"ColorType,omitempty"`

	DatColorType *FieldString `xml:"DatColorType,omitempty" json:"DatColorType,omitempty"`

	Color *FieldString `xml:"Color,omitempty" json:"Color,omitempty"`

	DatColor *FieldString `xml:"DatColor,omitempty" json:"DatColor,omitempty"`

	ColorCodeFromVin *FieldString `xml:"ColorCodeFromVin,omitempty" json:"ColorCodeFromVin,omitempty"`

	ColorVariant *FieldString `xml:"ColorVariant,omitempty" json:"ColorVariant,omitempty"`

	DatColorVariant *FieldString `xml:"DatColorVariant,omitempty" json:"DatColorVariant,omitempty"`

	LacquerType *FieldString `xml:"LacquerType,omitempty" json:"LacquerType,omitempty"`

	DatLacquerType *FieldString `xml:"DatLacquerType,omitempty" json:"DatLacquerType,omitempty"`

	CushionType *FieldString `xml:"CushionType,omitempty" json:"CushionType,omitempty"`

	DatCushionType *FieldString `xml:"DatCushionType,omitempty" json:"DatCushionType,omitempty"`

	CushionTypeName *FieldString `xml:"CushionTypeName,omitempty" json:"CushionTypeName,omitempty"`

	DatCushionTypeName *FieldString `xml:"DatCushionTypeName,omitempty" json:"DatCushionTypeName,omitempty"`

	CushionColorType *FieldString `xml:"CushionColorType,omitempty" json:"CushionColorType,omitempty"`

	DatCushionColorType *FieldString `xml:"DatCushionColorType,omitempty" json:"DatCushionColorType,omitempty"`

	CushionColor *FieldString `xml:"CushionColor,omitempty" json:"CushionColor,omitempty"`

	DatCushionColor *FieldString `xml:"DatCushionColor,omitempty" json:"DatCushionColor,omitempty"`

	EquipmentValue *FieldDecimal `xml:"EquipmentValue,omitempty" json:"EquipmentValue,omitempty"`

	EquipmentValueGross *FieldDecimal `xml:"EquipmentValueGross,omitempty" json:"EquipmentValueGross,omitempty"`

	DatEquipmentValue *FieldDecimal `xml:"DatEquipmentValue,omitempty" json:"DatEquipmentValue,omitempty"`

	DatEquipmentValueGross *FieldDecimal `xml:"DatEquipmentValueGross,omitempty" json:"DatEquipmentValueGross,omitempty"`

	OriginalEquipmentValue *FieldDecimal `xml:"OriginalEquipmentValue,omitempty" json:"OriginalEquipmentValue,omitempty"`

	OriginalEquipmentValueGross *FieldDecimal `xml:"OriginalEquipmentValueGross,omitempty" json:"OriginalEquipmentValueGross,omitempty"`

	DatOriginalEquipmentValue *FieldDecimal `xml:"DatOriginalEquipmentValue,omitempty" json:"DatOriginalEquipmentValue,omitempty"`

	DatOriginalEquipmentValueGross *FieldDecimal `xml:"DatOriginalEquipmentValueGross,omitempty" json:"DatOriginalEquipmentValueGross,omitempty"`

	EquipmentValueType *FieldString `xml:"EquipmentValueType,omitempty" json:"EquipmentValueType,omitempty"`

	SpecialEditionPackageId *FieldInteger `xml:"SpecialEditionPackageId,omitempty" json:"SpecialEditionPackageId,omitempty"`

	SpecialEditionPackageName *FieldString30 `xml:"SpecialEditionPackageName,omitempty" json:"SpecialEditionPackageName,omitempty"`

	SpecialEditionPackageNameN *FieldString200 `xml:"SpecialEditionPackageNameN,omitempty" json:"SpecialEditionPackageNameN,omitempty"`

	SpecialEditionPackageDetails1 *FieldString4000 `xml:"SpecialEditionPackageDetails1,omitempty" json:"SpecialEditionPackageDetails1,omitempty"`

	SpecialEditionPackageDetails2 *FieldString4000 `xml:"SpecialEditionPackageDetails2,omitempty" json:"SpecialEditionPackageDetails2,omitempty"`

	SeriesEquipment *EquipSequence `xml:"SeriesEquipment,omitempty" json:"SeriesEquipment,omitempty"`

	DeselectedSeriesEquipment *EquipSequence `xml:"DeselectedSeriesEquipment,omitempty" json:"DeselectedSeriesEquipment,omitempty"`

	SpecialModelEquipment *EquipSequence `xml:"SpecialModelEquipment,omitempty" json:"SpecialModelEquipment,omitempty"`

	SpecialEquipment *EquipSequence `xml:"SpecialEquipment,omitempty" json:"SpecialEquipment,omitempty"`

	SeriesOrSpecialEquipment *EquipSequence `xml:"SeriesOrSpecialEquipment,omitempty" json:"SeriesOrSpecialEquipment,omitempty"`

	FreeSpecialEquipment *EquipSequence `xml:"FreeSpecialEquipment,omitempty" json:"FreeSpecialEquipment,omitempty"`

	AdditionalEquipment *EquipSequence `xml:"AdditionalEquipment,omitempty" json:"AdditionalEquipment,omitempty"`

	FlatRateEquipment *EquipSequence `xml:"FlatRateEquipment,omitempty" json:"FlatRateEquipment,omitempty"`

	DenialCaseEquipment *EquipSequence `xml:"DenialCaseEquipment,omitempty" json:"DenialCaseEquipment,omitempty"`
}

type EquipmentGroupItem struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs EquipmentGroupItem"`

	MasterDataGroupId *FieldInteger `xml:"MasterDataGroupId,omitempty" json:"MasterDataGroupId,omitempty"`

	GroupDescription *FieldString `xml:"GroupDescription,omitempty" json:"GroupDescription,omitempty"`

	EquipmentList *EquipmentList `xml:"EquipmentList,omitempty" json:"EquipmentList,omitempty"`
}

type EquipmentItem struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs EquipmentItem"`

	EquipmentId *FieldString `xml:"EquipmentId,omitempty" json:"EquipmentId,omitempty"`

	EquipmentDescription *FieldInteger `xml:"EquipmentDescription,omitempty" json:"EquipmentDescription,omitempty"`

	EquipmentOrderNumber *FieldInteger `xml:"EquipmentOrderNumber,omitempty" json:"EquipmentOrderNumber,omitempty"`
}

type EquipmentItemN struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs EquipmentItemN"`

	EquipmentId *FieldInteger `xml:"EquipmentId,omitempty" json:"EquipmentId,omitempty"`

	EquipmentDescription *FieldString `xml:"EquipmentDescription,omitempty" json:"EquipmentDescription,omitempty"`

	EquipmentOrderNumber *FieldInteger `xml:"EquipmentOrderNumber,omitempty" json:"EquipmentOrderNumber,omitempty"`
}

type EquipmentList struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs EquipmentList"`

	EquipmentItem []*EquipmentItem `xml:"EquipmentItem,omitempty" json:"EquipmentItem,omitempty"`

	EquipmentItemN []*EquipmentItemN `xml:"EquipmentItemN,omitempty" json:"EquipmentItemN,omitempty"`
}

type EquipmentPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs EquipmentPosition"`

	InstallDate *FieldDate `xml:"InstallDate,omitempty" json:"InstallDate,omitempty"`

	AgeInMonths *FieldInteger `xml:"AgeInMonths,omitempty" json:"AgeInMonths,omitempty"`

	DatAgeInMonths *FieldInteger `xml:"DatAgeInMonths,omitempty" json:"DatAgeInMonths,omitempty"`

	Deselected *FieldBoolean `xml:"Deselected,omitempty" json:"Deselected,omitempty"`

	DatEquipmentId *FieldInteger `xml:"DatEquipmentId,omitempty" json:"DatEquipmentId,omitempty"`

	ManufacturerEquipmentId *FieldString `xml:"ManufacturerEquipmentId,omitempty" json:"ManufacturerEquipmentId,omitempty"`

	ManufacturerDescription *FieldString `xml:"ManufacturerDescription,omitempty" json:"ManufacturerDescription,omitempty"`

	ValuationControlType *FieldString `xml:"ValuationControlType,omitempty" json:"ValuationControlType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	LongDescription *FieldString `xml:"LongDescription,omitempty" json:"LongDescription,omitempty"`

	FootnoteType *FieldString `xml:"FootnoteType,omitempty" json:"FootnoteType,omitempty"`

	FootnotePerc *FieldDecimal `xml:"FootnotePerc,omitempty" json:"FootnotePerc,omitempty"`

	DatFootnotePerc *FieldDecimal `xml:"DatFootnotePerc,omitempty" json:"DatFootnotePerc,omitempty"`

	DecreaseType *FieldString `xml:"DecreaseType,omitempty" json:"DecreaseType,omitempty"`

	DatDecreaseType *FieldString `xml:"DatDecreaseType,omitempty" json:"DatDecreaseType,omitempty"`

	PercentageOfBasePrice *FieldInteger `xml:"PercentageOfBasePrice,omitempty" json:"PercentageOfBasePrice,omitempty"`

	OriginalPrice *FieldDecimal `xml:"OriginalPrice,omitempty" json:"OriginalPrice,omitempty"`

	OriginalPriceGross *FieldDecimal `xml:"OriginalPriceGross,omitempty" json:"OriginalPriceGross,omitempty"`

	OriginalPriceUser *FieldDecimal `xml:"OriginalPriceUser,omitempty" json:"OriginalPriceUser,omitempty"`

	OriginalPriceGrossUser *FieldDecimal `xml:"OriginalPriceGrossUser,omitempty" json:"OriginalPriceGrossUser,omitempty"`

	DatResidualValue *FieldDecimal `xml:"DatResidualValue,omitempty" json:"DatResidualValue,omitempty"`

	DatResidualValueGross *FieldDecimal `xml:"DatResidualValueGross,omitempty" json:"DatResidualValueGross,omitempty"`

	ResidualValue *FieldDecimal `xml:"ResidualValue,omitempty" json:"ResidualValue,omitempty"`

	ResidualValueGross *FieldDecimal `xml:"ResidualValueGross,omitempty" json:"ResidualValueGross,omitempty"`

	Amount *FieldInteger `xml:"Amount,omitempty" json:"Amount,omitempty"`

	EquipmentGroup *FieldString `xml:"EquipmentGroup,omitempty" json:"EquipmentGroup,omitempty"`

	EquipmentType *FieldString `xml:"EquipmentType,omitempty" json:"EquipmentType,omitempty"`

	Category *FieldString `xml:"Category,omitempty" json:"Category,omitempty"`

	ManualEntry *FieldBoolean `xml:"ManualEntry,omitempty" json:"ManualEntry,omitempty"`

	ManualAgeEntry *FieldBoolean `xml:"ManualAgeEntry,omitempty" json:"ManualAgeEntry,omitempty"`

	EquipmentClass *FieldInteger `xml:"EquipmentClass,omitempty" json:"EquipmentClass,omitempty"`

	ConstructionTimeFrom *FieldInteger `xml:"ConstructionTimeFrom,omitempty" json:"ConstructionTimeFrom,omitempty"`

	EquipmentOrigin *FieldCharacter `xml:"EquipmentOrigin,omitempty" json:"EquipmentOrigin,omitempty"`

	SeriesEquipmentMissing *FieldBoolean `xml:"SeriesEquipmentMissing,omitempty" json:"SeriesEquipmentMissing,omitempty"`

	PackageEquipmentId *FieldInteger `xml:"PackageEquipmentId,omitempty" json:"PackageEquipmentId,omitempty"`

	GearBoxType *FieldString `xml:"GearBoxType,omitempty" json:"GearBoxType,omitempty"`

	NrOfGears *FieldString `xml:"NrOfGears,omitempty" json:"NrOfGears,omitempty"`

	AddedByLogikCheck *FieldBoolean `xml:"AddedByLogikCheck,omitempty" json:"AddedByLogikCheck,omitempty"`

	ContainedEquipmentPositions struct {
		EquipmentPosition []*EquipmentPosition `xml:"EquipmentPosition,omitempty" json:"EquipmentPosition,omitempty"`
	} `xml:"ContainedEquipmentPositions,omitempty" json:"ContainedEquipmentPositions,omitempty"`

	DatEquipmentIdReason *FieldInteger `xml:"DatEquipmentIdReason,omitempty" json:"DatEquipmentIdReason,omitempty"`

	DatEquipmentIdReason2 *FieldInteger `xml:"DatEquipmentIdReason2,omitempty" json:"DatEquipmentIdReason2,omitempty"`

	EquipmentClassification *FieldInteger `xml:"EquipmentClassification,omitempty" json:"EquipmentClassification,omitempty"`

	ManualDecreaseType *FieldString `xml:"ManualDecreaseType,omitempty" json:"ManualDecreaseType,omitempty"`

	VersionAccording1 *FieldInteger `xml:"VersionAccording1,omitempty" json:"VersionAccording1,omitempty"`

	VersionAccording2 *FieldInteger `xml:"VersionAccording2,omitempty" json:"VersionAccording2,omitempty"`

	VersionAccording3 *FieldInteger `xml:"VersionAccording3,omitempty" json:"VersionAccording3,omitempty"`

	VersionAccording4 *FieldInteger `xml:"VersionAccording4,omitempty" json:"VersionAccording4,omitempty"`

	VersionAccording5 *FieldInteger `xml:"VersionAccording5,omitempty" json:"VersionAccording5,omitempty"`
}

type ExtensionPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ExtensionPosition"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	PartsSum *FieldDecimal `xml:"PartsSum,omitempty" json:"PartsSum,omitempty"`

	LabourTime *FieldDecimal `xml:"LabourTime,omitempty" json:"LabourTime,omitempty"`

	LabourSum *FieldDecimal `xml:"LabourSum,omitempty" json:"LabourSum,omitempty"`

	LacquerTime *FieldDecimal `xml:"LacquerTime,omitempty" json:"LacquerTime,omitempty"`

	LacquerSum *FieldDecimal `xml:"LacquerSum,omitempty" json:"LacquerSum,omitempty"`

	LacquerWageSum *FieldDecimal `xml:"LacquerWageSum,omitempty" json:"LacquerWageSum,omitempty"`

	LacquerMaterialSum *FieldDecimal `xml:"LacquerMaterialSum,omitempty" json:"LacquerMaterialSum,omitempty"`

	TotalSum *FieldDecimal `xml:"TotalSum,omitempty" json:"TotalSum,omitempty"`
}

type ExtensionPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ExtensionPositions"`

	ExtensionPosition []*ExtensionPosition `xml:"ExtensionPosition,omitempty" json:"ExtensionPosition,omitempty"`
}

type FeatureList struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs FeatureList"`

	FeatureName string `xml:"FeatureName,omitempty" json:"FeatureName,omitempty"`

	TargetMarketplaceFeatureItem []*TargetMarketplaceFeatureItem `xml:"TargetMarketplaceFeatureItem,omitempty" json:"TargetMarketplaceFeatureItem,omitempty"`
}

type FillingQuantities struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs FillingQuantities"`

	Fluid []*Fluid `xml:"Fluid,omitempty" json:"Fluid,omitempty"`
}

type Fluid struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Fluid"`

	Capacity []*Capacity `xml:"Capacity,omitempty" json:"Capacity,omitempty"`

	Recommendation []*Recommendation `xml:"Recommendation,omitempty" json:"Recommendation,omitempty"`

	Type int32 `xml:"type,attr,omitempty" json:"type,omitempty"`

	Desc string `xml:"desc,attr,omitempty" json:"desc,omitempty"`

	Code string `xml:"code,attr,omitempty" json:"code,omitempty"`
}

type FollowUpBusiness struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs FollowUpBusiness"`

	FollowUpBusinessType *FieldString `xml:"FollowUpBusinessType,omitempty" json:"FollowUpBusinessType,omitempty"`

	BusinessType *FieldString `xml:"BusinessType,omitempty" json:"BusinessType,omitempty"`

	VehicleNo *FieldString `xml:"VehicleNo,omitempty" json:"VehicleNo,omitempty"`

	VehicleIdentNo *FieldString `xml:"VehicleIdentNo,omitempty" json:"VehicleIdentNo,omitempty"`

	KbaKey *FieldString `xml:"KbaKey,omitempty" json:"KbaKey,omitempty"`

	Details *FieldString `xml:"Details,omitempty" json:"Details,omitempty"`
}

type Forecast struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Forecast"`

	ForecastType *FieldString `xml:"ForecastType,omitempty" json:"ForecastType,omitempty"`

	PriceType *FieldString `xml:"PriceType,omitempty" json:"PriceType,omitempty"`

	IncludeVat *FieldBoolean `xml:"IncludeVat,omitempty" json:"IncludeVat,omitempty"`

	CurveType *FieldString `xml:"CurveType,omitempty" json:"CurveType,omitempty"`

	DecreaseType *FieldString `xml:"DecreaseType,omitempty" json:"DecreaseType,omitempty"`

	StartType *FieldString `xml:"StartType,omitempty" json:"StartType,omitempty"`

	ValueType *FieldString `xml:"ValueType,omitempty" json:"ValueType,omitempty"`

	MileageType *FieldString `xml:"MileageType,omitempty" json:"MileageType,omitempty"`

	ConsiderCurrentCondition *FieldBoolean `xml:"ConsiderCurrentCondition,omitempty" json:"ConsiderCurrentCondition,omitempty"`

	ForecastItems struct {
		ForecastItem []*ForecastItem `xml:"ForecastItem,omitempty" json:"ForecastItem,omitempty"`
	} `xml:"ForecastItems,omitempty" json:"ForecastItems,omitempty"`
}

type ForecastItem struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ForecastItem"`

	Row *FieldInteger `xml:"Row,omitempty" json:"Row,omitempty"`

	Months *FieldInteger `xml:"Months,omitempty" json:"Months,omitempty"`

	MileagePerYear *FieldInteger `xml:"MileagePerYear,omitempty" json:"MileagePerYear,omitempty"`

	MileageTotal *FieldInteger `xml:"MileageTotal,omitempty" json:"MileageTotal,omitempty"`

	Value *FieldDecimal `xml:"Value,omitempty" json:"Value,omitempty"`

	ValueGross *FieldDecimal `xml:"ValueGross,omitempty" json:"ValueGross,omitempty"`

	Percentage *FieldDecimal `xml:"Percentage,omitempty" json:"Percentage,omitempty"`

	PercentageNet *FieldDecimal `xml:"PercentageNet,omitempty" json:"PercentageNet,omitempty"`

	PercentageGross *FieldDecimal `xml:"PercentageGross,omitempty" json:"PercentageGross,omitempty"`

	Error *FieldString `xml:"Error,omitempty" json:"Error,omitempty"`
}

type Forecasts struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Forecasts"`

	Forecast []*Forecast `xml:"Forecast,omitempty" json:"Forecast,omitempty"`
}

type Image struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Image"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	DefaultImage *FieldBoolean `xml:"DefaultImage,omitempty" json:"DefaultImage,omitempty"`

	Image *FieldBinary `xml:"Image,omitempty" json:"Image,omitempty"`

	ForValuation *FieldBoolean `xml:"ForValuation,omitempty" json:"ForValuation,omitempty"`

	ForRepairCalculation *FieldBoolean `xml:"ForRepairCalculation,omitempty" json:"ForRepairCalculation,omitempty"`

	ForMarketplace *FieldBoolean `xml:"ForMarketplace,omitempty" json:"ForMarketplace,omitempty"`

	ListLabelVariable *FieldString `xml:"ListLabelVariable,omitempty" json:"ListLabelVariable,omitempty"`

	ImageType *FieldString `xml:"ImageType,omitempty" json:"ImageType,omitempty"`

	Origin *FieldString `xml:"Origin,omitempty" json:"Origin,omitempty"`

	LastModification *FieldDateTime `xml:"LastModification,omitempty" json:"LastModification,omitempty"`

	AssignedApplication *FieldString4 `xml:"AssignedApplication,omitempty" json:"AssignedApplication,omitempty"`

	BitIndicatorImageAlteration *FieldString8 `xml:"BitIndicatorImageAlteration,omitempty" json:"BitIndicatorImageAlteration,omitempty"`

	ImageNumber *FieldInteger `xml:"ImageNumber,omitempty" json:"ImageNumber,omitempty"`

	Height *FieldInteger `xml:"Height,omitempty" json:"Height,omitempty"`

	Width *FieldInteger `xml:"Width,omitempty" json:"Width,omitempty"`

	RealFilename *FieldString `xml:"RealFilename,omitempty" json:"RealFilename,omitempty"`

	ImageId *FieldString `xml:"ImageId,omitempty" json:"ImageId,omitempty"`

	RelativePath *FieldString `xml:"RelativePath,omitempty" json:"RelativePath,omitempty"`
}

type ImageList struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ImageList"`

	Image []*Image `xml:"Image,omitempty" json:"Image,omitempty"`
}

type ImageReference struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ImageReference"`

	ImageId *FieldString `xml:"ImageId,omitempty" json:"ImageId,omitempty"`

	OrderNumber *FieldInteger `xml:"OrderNumber,omitempty" json:"OrderNumber,omitempty"`

	Image *FieldString `xml:"Image,omitempty" json:"Image,omitempty"`
}

type Images struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Images"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	DefaultImage *FieldBoolean `xml:"DefaultImage,omitempty" json:"DefaultImage,omitempty"`

	Image *FieldBinary `xml:"Image,omitempty" json:"Image,omitempty"`

	ForValuation *FieldBoolean `xml:"ForValuation,omitempty" json:"ForValuation,omitempty"`

	ForRepairCalculation *FieldBoolean `xml:"ForRepairCalculation,omitempty" json:"ForRepairCalculation,omitempty"`

	ForMarketplace *FieldBoolean `xml:"ForMarketplace,omitempty" json:"ForMarketplace,omitempty"`

	ListLabelVariable *FieldString `xml:"ListLabelVariable,omitempty" json:"ListLabelVariable,omitempty"`

	ImageType *FieldString `xml:"ImageType,omitempty" json:"ImageType,omitempty"`

	Origin *FieldString `xml:"Origin,omitempty" json:"Origin,omitempty"`

	LastModification *FieldDateTime `xml:"LastModification,omitempty" json:"LastModification,omitempty"`

	AssignedApplication *FieldString4 `xml:"AssignedApplication,omitempty" json:"AssignedApplication,omitempty"`

	BitIndicatorImageAlteration *FieldString8 `xml:"BitIndicatorImageAlteration,omitempty" json:"BitIndicatorImageAlteration,omitempty"`

	ImageNumber *FieldInteger `xml:"ImageNumber,omitempty" json:"ImageNumber,omitempty"`
}

type IncludedPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs IncludedPosition"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`
}

type IncludedPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs IncludedPositions"`

	IncludedPosition []*IncludedPosition `xml:"IncludedPosition,omitempty" json:"IncludedPosition,omitempty"`
}

type InspectionPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs InspectionPosition"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	ValuePerUnit *FieldDecimal `xml:"ValuePerUnit,omitempty" json:"ValuePerUnit,omitempty"`

	Amount *FieldDecimal `xml:"Amount,omitempty" json:"Amount,omitempty"`

	QuantityUnit *FieldString `xml:"QuantityUnit,omitempty" json:"QuantityUnit,omitempty"`

	PartNumber *FieldString `xml:"PartNumber,omitempty" json:"PartNumber,omitempty"`

	TaxNeutral *FieldBoolean `xml:"TaxNeutral,omitempty" json:"TaxNeutral,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	WorkNumber *FieldString `xml:"WorkNumber,omitempty" json:"WorkNumber,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	WageType *FieldString `xml:"WageType,omitempty" json:"WageType,omitempty"`

	WageLevel *FieldInteger `xml:"WageLevel,omitempty" json:"WageLevel,omitempty"`

	Duration *FieldDecimal `xml:"Duration,omitempty" json:"Duration,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`
}

type Interval struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Interval"`

	Value string `xml:",chardata" json:"-,"`

	Type int32 `xml:"type,attr,omitempty" json:"type,omitempty"`
}

type InvoiceDetail struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs InvoiceDetail"`

	SourceOfInvoice *FieldString `xml:"SourceOfInvoice,omitempty" json:"SourceOfInvoice,omitempty"`
}

type Labelling struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Labelling"`

	OriginalPricewithEquipmentNet *FieldDecimal `xml:"OriginalPricewithEquipmentNet,omitempty" json:"OriginalPricewithEquipmentNet,omitempty"`

	OriginalPricewithEquipmentGross *FieldDecimal `xml:"OriginalPricewithEquipmentGross,omitempty" json:"OriginalPricewithEquipmentGross,omitempty"`

	SalesDiscountPerc *FieldDecimal `xml:"SalesDiscountPerc,omitempty" json:"SalesDiscountPerc,omitempty"`

	SalesDiscountNet *FieldDecimal `xml:"SalesDiscountNet,omitempty" json:"SalesDiscountNet,omitempty"`

	SalesDiscountGross *FieldDecimal `xml:"SalesDiscountGross,omitempty" json:"SalesDiscountGross,omitempty"`

	SubtotalNet *FieldDecimal `xml:"SubtotalNet,omitempty" json:"SubtotalNet,omitempty"`

	SubtotalGross *FieldDecimal `xml:"SubtotalGross,omitempty" json:"SubtotalGross,omitempty"`

	AdditionalEquipmentValueNet *FieldDecimal `xml:"AdditionalEquipmentValueNet,omitempty" json:"AdditionalEquipmentValueNet,omitempty"`

	AdditionalEquipmentValueGross *FieldDecimal `xml:"AdditionalEquipmentValueGross,omitempty" json:"AdditionalEquipmentValueGross,omitempty"`

	TransferCostsNet *FieldDecimal `xml:"TransferCostsNet,omitempty" json:"TransferCostsNet,omitempty"`

	TransferCostsGross *FieldDecimal `xml:"TransferCostsGross,omitempty" json:"TransferCostsGross,omitempty"`

	IncludingTransferCosts *FieldBoolean `xml:"IncludingTransferCosts,omitempty" json:"IncludingTransferCosts,omitempty"`

	IncidentalCostsNet *FieldDecimal `xml:"IncidentalCostsNet,omitempty" json:"IncidentalCostsNet,omitempty"`

	IncidentalCostsGross *FieldDecimal `xml:"IncidentalCostsGross,omitempty" json:"IncidentalCostsGross,omitempty"`

	IncludingIncidentalCosts *FieldBoolean `xml:"IncludingIncidentalCosts,omitempty" json:"IncludingIncidentalCosts,omitempty"`

	SalesPriceNet *FieldDecimal `xml:"SalesPriceNet,omitempty" json:"SalesPriceNet,omitempty"`

	SalesPriceGross *FieldDecimal `xml:"SalesPriceGross,omitempty" json:"SalesPriceGross,omitempty"`

	DisplayPriceNet *FieldDecimal `xml:"DisplayPriceNet,omitempty" json:"DisplayPriceNet,omitempty"`

	DisplayPriceGross *FieldDecimal `xml:"DisplayPriceGross,omitempty" json:"DisplayPriceGross,omitempty"`

	DeviatingMarketPlacePrice *FieldBoolean `xml:"DeviatingMarketPlacePrice,omitempty" json:"DeviatingMarketPlacePrice,omitempty"`

	MinimumSalesPriceNet *FieldDecimal `xml:"MinimumSalesPriceNet,omitempty" json:"MinimumSalesPriceNet,omitempty"`

	MinimumSalesPriceGross *FieldDecimal `xml:"MinimumSalesPriceGross,omitempty" json:"MinimumSalesPriceGross,omitempty"`

	ResellerPriceNet *FieldDecimal `xml:"ResellerPriceNet,omitempty" json:"ResellerPriceNet,omitempty"`

	ResellerPriceGross *FieldDecimal `xml:"ResellerPriceGross,omitempty" json:"ResellerPriceGross,omitempty"`

	DisplayPriceMarketPlaceNet *FieldDecimal `xml:"DisplayPriceMarketPlaceNet,omitempty" json:"DisplayPriceMarketPlaceNet,omitempty"`

	DisplayPriceMarketPlaceGross *FieldDecimal `xml:"DisplayPriceMarketPlaceGross,omitempty" json:"DisplayPriceMarketPlaceGross,omitempty"`
}

type LacquerAdjustment struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs LacquerAdjustment"`

	Identifier *FieldString `xml:"Identifier,omitempty" json:"Identifier,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`
}

type LacquerAdjustments struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs LacquerAdjustments"`

	LacquerAdjustment []*LacquerAdjustment `xml:"LacquerAdjustment,omitempty" json:"LacquerAdjustment,omitempty"`
}

type LacquerConstant struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs LacquerConstant"`

	Id *FieldString `xml:"Id,omitempty" json:"Id,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Price *FieldDecimal `xml:"Price,omitempty" json:"Price,omitempty"`

	Parameter *FieldString `xml:"Parameter,omitempty" json:"Parameter,omitempty"`

	Unit *FieldString `xml:"Unit,omitempty" json:"Unit,omitempty"`

	ConstantType *FieldInteger `xml:"ConstantType,omitempty" json:"ConstantType,omitempty"`

	ValueInPositions *FieldBoolean `xml:"ValueInPositions,omitempty" json:"ValueInPositions,omitempty"`

	ValueForInformation *FieldBoolean `xml:"ValueForInformation,omitempty" json:"ValueForInformation,omitempty"`
}

type LacquerMaterialGroupSummary struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs LacquerMaterialGroupSummary"`

	Name string `xml:"Name,omitempty" json:"Name,omitempty"`

	Units *FieldDecimal `xml:"Units,omitempty" json:"Units,omitempty"`

	PricePerUnit *FieldDecimal `xml:"PricePerUnit,omitempty" json:"PricePerUnit,omitempty"`

	Price *FieldDecimal `xml:"Price,omitempty" json:"Price,omitempty"`
}

type LacquerPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs LacquerPositions"`

	LacquerPosition []*LacquerPosition `xml:"LacquerPosition,omitempty" json:"LacquerPosition,omitempty"`

	LacquerWithPrepressPosition []*LacquerPosition `xml:"LacquerWithPrepressPosition,omitempty" json:"LacquerWithPrepressPosition,omitempty"`

	DentCivdPosition []*LacquerPosition `xml:"DentCivdPosition,omitempty" json:"DentCivdPosition,omitempty"`

	SpotRepairPositions *SpotRepairPositions `xml:"SpotRepairPositions,omitempty" json:"SpotRepairPositions,omitempty"`

	OpelGoodwillLacquerPosition []*LacquerPosition `xml:"OpelGoodwillLacquerPosition,omitempty" json:"OpelGoodwillLacquerPosition,omitempty"`
}

type LacquerSummaryItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs LacquerSummaryItaly"`

	LacquerSummaryItemItaly []*LacquerSummaryItemItaly `xml:"LacquerSummaryItemItaly,omitempty" json:"LacquerSummaryItemItaly,omitempty"`
}

type LacquerSummaryItemItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs LacquerSummaryItemItaly"`

	Identifier *FieldString `xml:"Identifier,omitempty" json:"Identifier,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Percentage *FieldDecimal `xml:"Percentage,omitempty" json:"Percentage,omitempty"`

	Hours *FieldDecimal `xml:"Hours,omitempty" json:"Hours,omitempty"`
}

type Maintenance struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Maintenance"`

	LastServiceKilometer *FieldInteger `xml:"LastServiceKilometer,omitempty" json:"LastServiceKilometer,omitempty"`

	LastServiceDate *FieldDate `xml:"LastServiceDate,omitempty" json:"LastServiceDate,omitempty"`

	NextServiceKilometer *FieldInteger `xml:"NextServiceKilometer,omitempty" json:"NextServiceKilometer,omitempty"`

	NextServiceDate *FieldDate `xml:"NextServiceDate,omitempty" json:"NextServiceDate,omitempty"`

	NextEmissionCheck *FieldDate `xml:"NextEmissionCheck,omitempty" json:"NextEmissionCheck,omitempty"`

	NextVehicleInspection *FieldDate `xml:"NextVehicleInspection,omitempty" json:"NextVehicleInspection,omitempty"`

	NextSecurityCheck *FieldDate `xml:"NextSecurityCheck,omitempty" json:"NextSecurityCheck,omitempty"`
}

type MaintenanceInterval struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MaintenanceInterval"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	Hint *FieldString `xml:"Hint,omitempty" json:"Hint,omitempty"`

	MaintenancePositions []*MaintenancePositions `xml:"MaintenancePositions,omitempty" json:"MaintenancePositions,omitempty"`
}

type MaintenanceIntervals struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MaintenanceIntervals"`

	MaintenanceInterval []*MaintenanceInterval `xml:"MaintenanceInterval,omitempty" json:"MaintenanceInterval,omitempty"`

	Dummy string `xml:"dummy,attr,omitempty" json:"dummy,omitempty"`
}

type MaintenancePosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MaintenancePosition"`

	Order *FieldDecimal `xml:"Order,omitempty" json:"Order,omitempty"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	FootNote *FieldString `xml:"FootNote,omitempty" json:"FootNote,omitempty"`

	PositionType *FieldString `xml:"PositionType,omitempty" json:"PositionType,omitempty"`

	MaterialPositions *MaterialPositions `xml:"MaterialPositions,omitempty" json:"MaterialPositions,omitempty"`
}

type MaintenancePositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MaintenancePositions"`

	MaintenancePosition []*MaintenancePosition `xml:"MaintenancePosition,omitempty" json:"MaintenancePosition,omitempty"`

	Dummy string `xml:"dummy,attr,omitempty" json:"dummy,omitempty"`
}

type MarketplaceEquipmentFlag struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MarketplaceEquipmentFlag"`

	Value string `xml:",chardata" json:"-,"`

	Mobile bool `xml:"mobile,attr,omitempty" json:"mobile,omitempty"`

	Autoscout24 bool `xml:"autoscout24,attr,omitempty" json:"autoscout24,omitempty"`
}

type MarketplaceImageList struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MarketplaceImageList"`

	ImageReference []*ImageReference `xml:"ImageReference,omitempty" json:"ImageReference,omitempty"`
}

type MarketplacePreparation struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MarketplacePreparation"`

	VehicleNumber *FieldString `xml:"VehicleNumber,omitempty" json:"VehicleNumber,omitempty"`

	ExportFlag *FieldBoolean `xml:"ExportFlag,omitempty" json:"ExportFlag,omitempty"`

	MarketplaceVehicleType *FieldString `xml:"MarketplaceVehicleType,omitempty" json:"MarketplaceVehicleType,omitempty"`

	MarketplaceAreaList struct {
		AreaItem []string `xml:"AreaItem,omitempty" json:"AreaItem,omitempty"`
	} `xml:"MarketplaceAreaList,omitempty" json:"MarketplaceAreaList,omitempty"`

	MarketplaceManufacturerList struct {
		ManufacturerItem []string `xml:"ManufacturerItem,omitempty" json:"ManufacturerItem,omitempty"`
	} `xml:"MarketplaceManufacturerList,omitempty" json:"MarketplaceManufacturerList,omitempty"`

	MarketplaceModelGroupList struct {
		ModelGroupItem []string `xml:"ModelGroupItem,omitempty" json:"ModelGroupItem,omitempty"`
	} `xml:"MarketplaceModelGroupList,omitempty" json:"MarketplaceModelGroupList,omitempty"`

	MarketplaceModelList struct {
		ModelItem []string `xml:"ModelItem,omitempty" json:"ModelItem,omitempty"`
	} `xml:"MarketplaceModelList,omitempty" json:"MarketplaceModelList,omitempty"`

	MarketplaceVehicleSectionList struct {
		VehicleSelectionItem []string `xml:"VehicleSelectionItem,omitempty" json:"VehicleSelectionItem,omitempty"`
	} `xml:"MarketplaceVehicleSectionList,omitempty" json:"MarketplaceVehicleSectionList,omitempty"`

	MarketplaceTypeLineList struct {
		TypeLineItem []string `xml:"TypeLineItem,omitempty" json:"TypeLineItem,omitempty"`
	} `xml:"MarketplaceTypeLineList,omitempty" json:"MarketplaceTypeLineList,omitempty"`

	MarketplaceFuelConsumptionDataList struct {
		FuelConsumptionDataItem []string `xml:"FuelConsumptionDataItem,omitempty" json:"FuelConsumptionDataItem,omitempty"`
	} `xml:"MarketplaceFuelConsumptionDataList,omitempty" json:"MarketplaceFuelConsumptionDataList,omitempty"`

	MarketplaceFuelAccordingEnVkVList struct {
		FuelAccordingEnVkVItem []string `xml:"FuelAccordingEnVkVItem,omitempty" json:"FuelAccordingEnVkVItem,omitempty"`
	} `xml:"MarketplaceFuelAccordingEnVkVList,omitempty" json:"MarketplaceFuelAccordingEnVkVList,omitempty"`

	MarketplaceFuelAccordingEnVkVCust *FieldString `xml:"MarketplaceFuelAccordingEnVkVCust,omitempty" json:"MarketplaceFuelAccordingEnVkVCust,omitempty"`

	MarketplaceColorInteriorFittingsList struct {
		ColorInteriorFittingsItem []string `xml:"ColorInteriorFittingsItem,omitempty" json:"ColorInteriorFittingsItem,omitempty"`
	} `xml:"MarketplaceColorInteriorFittingsList,omitempty" json:"MarketplaceColorInteriorFittingsList,omitempty"`

	GeneralInspection *FieldString `xml:"GeneralInspection,omitempty" json:"GeneralInspection,omitempty"`

	GeneralInspectionNewFlag *FieldBoolean `xml:"GeneralInspectionNewFlag,omitempty" json:"GeneralInspectionNewFlag,omitempty"`

	WithFullServiceHistoryFlag *FieldBoolean `xml:"WithFullServiceHistoryFlag,omitempty" json:"WithFullServiceHistoryFlag,omitempty"`

	MarketplaceAccidentalDamageList struct {
		AccidentalDamageItem []string `xml:"AccidentalDamageItem,omitempty" json:"AccidentalDamageItem,omitempty"`
	} `xml:"MarketplaceAccidentalDamageList,omitempty" json:"MarketplaceAccidentalDamageList,omitempty"`

	DescriptionAccidentalDamage *FieldString `xml:"DescriptionAccidentalDamage,omitempty" json:"DescriptionAccidentalDamage,omitempty"`

	DealerCarFlag *FieldBoolean `xml:"DealerCarFlag,omitempty" json:"DealerCarFlag,omitempty"`

	NonSmokerCarFlag *FieldBoolean `xml:"NonSmokerCarFlag,omitempty" json:"NonSmokerCarFlag,omitempty"`

	MarketplaceProductionCountryVersion *FieldString `xml:"MarketplaceProductionCountryVersion,omitempty" json:"MarketplaceProductionCountryVersion,omitempty"`

	PeriodOfDelivery *FieldString `xml:"PeriodOfDelivery,omitempty" json:"PeriodOfDelivery,omitempty"`

	PeriodOfDeliverySpecificList struct {
		PeriodOfDeliveryItem []string `xml:"PeriodOfDeliveryItem,omitempty" json:"PeriodOfDeliveryItem,omitempty"`
	} `xml:"PeriodOfDeliverySpecificList,omitempty" json:"PeriodOfDeliverySpecificList,omitempty"`

	PlannedDeliveryDateCustomer *FieldDate `xml:"PlannedDeliveryDateCustomer,omitempty" json:"PlannedDeliveryDateCustomer,omitempty"`

	TaxiFlag *FieldBoolean `xml:"TaxiFlag,omitempty" json:"TaxiFlag,omitempty"`

	E10SuitableFlag *FieldBoolean `xml:"E10SuitableFlag,omitempty" json:"E10SuitableFlag,omitempty"`

	BiodieselSuitableFlag *FieldBoolean `xml:"BiodieselSuitableFlag,omitempty" json:"BiodieselSuitableFlag,omitempty"`

	VegetableOilSuitableFlag *FieldBoolean `xml:"VegetableOilSuitableFlag,omitempty" json:"VegetableOilSuitableFlag,omitempty"`

	AccessiblyDesignedFlag *FieldBoolean `xml:"AccessiblyDesignedFlag,omitempty" json:"AccessiblyDesignedFlag,omitempty"`

	MarketplaceWarrantyList struct {
		WarrantyItem []string `xml:"WarrantyItem,omitempty" json:"WarrantyItem,omitempty"`
	} `xml:"MarketplaceWarrantyList,omitempty" json:"MarketplaceWarrantyList,omitempty"`

	EquipmentFormat *FieldString `xml:"EquipmentFormat,omitempty" json:"EquipmentFormat,omitempty"`

	EquipmentSorting *FieldString `xml:"EquipmentSorting,omitempty" json:"EquipmentSorting,omitempty"`

	MarketplaceEquipmentGroupList struct {
		EquipmentGroupItem *EquipmentGroupItem `xml:"EquipmentGroupItem,omitempty" json:"EquipmentGroupItem,omitempty"`
	} `xml:"MarketplaceEquipmentGroupList,omitempty" json:"MarketplaceEquipmentGroupList,omitempty"`

	MarketplaceEquipmentGroupListN struct {
		EquipmentGroupItem []*EquipmentGroupItem `xml:"EquipmentGroupItem,omitempty" json:"EquipmentGroupItem,omitempty"`
	} `xml:"MarketplaceEquipmentGroupListN,omitempty" json:"MarketplaceEquipmentGroupListN,omitempty"`

	IntroductionText *FieldString `xml:"IntroductionText,omitempty" json:"IntroductionText,omitempty"`

	FinalText *FieldString `xml:"FinalText,omitempty" json:"FinalText,omitempty"`

	MPConfigIntroText *FieldString `xml:"MPConfigIntroText,omitempty" json:"MPConfigIntroText,omitempty"`

	MPConfigFinalText *FieldString `xml:"MPConfigFinalText,omitempty" json:"MPConfigFinalText,omitempty"`

	MPConfigIntroTextList struct {
		TextItem []*TextItem `xml:"TextItem,omitempty" json:"TextItem,omitempty"`
	} `xml:"MPConfigIntroTextList,omitempty" json:"MPConfigIntroTextList,omitempty"`

	MPConfigFinalTextList struct {
		TextItem []*TextItem `xml:"TextItem,omitempty" json:"TextItem,omitempty"`
	} `xml:"MPConfigFinalTextList,omitempty" json:"MPConfigFinalTextList,omitempty"`

	AdvertisementFeatures struct {
		FeatureList []*FeatureList `xml:"FeatureList,omitempty" json:"FeatureList,omitempty"`
	} `xml:"AdvertisementFeatures,omitempty" json:"AdvertisementFeatures,omitempty"`

	MarketplaceEquipmentFlagList struct {
		MarketplaceEquipmentFlag []*MarketplaceEquipmentFlag `xml:"MarketplaceEquipmentFlag,omitempty" json:"MarketplaceEquipmentFlag,omitempty"`
	} `xml:"MarketplaceEquipmentFlagList,omitempty" json:"MarketplaceEquipmentFlagList,omitempty"`
}

type MaterialPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MaterialPosition"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	DomusProcessId *FieldString `xml:"DomusProcessId,omitempty" json:"DomusProcessId,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	PartNumber *FieldString `xml:"PartNumber,omitempty" json:"PartNumber,omitempty"`

	PartNumberOrigin *FieldString `xml:"PartNumberOrigin,omitempty" json:"PartNumberOrigin,omitempty"`

	DATPartNumber *FieldString `xml:"DATPartNumber,omitempty" json:"DATPartNumber,omitempty"`

	PartState *FieldString `xml:"PartState,omitempty" json:"PartState,omitempty"`

	PartPriceState *FieldString `xml:"PartPriceState,omitempty" json:"PartPriceState,omitempty"`

	PartUnitPriceState *FieldString `xml:"PartUnitPriceState,omitempty" json:"PartUnitPriceState,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Amount *FieldDecimal `xml:"Amount,omitempty" json:"Amount,omitempty"`

	AmountState *FieldString `xml:"AmountState,omitempty" json:"AmountState,omitempty"`

	ValuePerUnit *FieldDecimal `xml:"ValuePerUnit,omitempty" json:"ValuePerUnit,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`

	ManualPosition *FieldBoolean `xml:"ManualPosition,omitempty" json:"ManualPosition,omitempty"`

	ManualAmount *FieldBoolean `xml:"ManualAmount,omitempty" json:"ManualAmount,omitempty"`

	ManualPrice *FieldBoolean `xml:"ManualPrice,omitempty" json:"ManualPrice,omitempty"`

	PartNoValidForOrder *FieldBoolean `xml:"PartNoValidForOrder,omitempty" json:"PartNoValidForOrder,omitempty"`

	PartValiditySuspect *FieldDecimal `xml:"PartValiditySuspect,omitempty" json:"PartValiditySuspect,omitempty"`

	PriceDerived *FieldBoolean `xml:"PriceDerived,omitempty" json:"PriceDerived,omitempty"`

	UsedPart *FieldBoolean `xml:"UsedPart,omitempty" json:"UsedPart,omitempty"`

	LastUPE *FieldBoolean `xml:"LastUPE,omitempty" json:"LastUPE,omitempty"`

	Includes *FieldString `xml:"Includes,omitempty" json:"Includes,omitempty"`

	AdditionalDesc *FieldString `xml:"AdditionalDesc,omitempty" json:"AdditionalDesc,omitempty"`

	AmountDesc *FieldString `xml:"AmountDesc,omitempty" json:"AmountDesc,omitempty"`

	CorrPerc *FieldDecimal `xml:"CorrPerc,omitempty" json:"CorrPerc,omitempty"`

	ValueTotalCorrected *FieldDecimal `xml:"ValueTotalCorrected,omitempty" json:"ValueTotalCorrected,omitempty"`

	FootNote *FieldString `xml:"FootNote,omitempty" json:"FootNote,omitempty"`

	ManualPriceRequired *FieldBoolean `xml:"ManualPriceRequired,omitempty" json:"ManualPriceRequired,omitempty"`

	IsRepairSet *FieldBoolean `xml:"IsRepairSet,omitempty" json:"IsRepairSet,omitempty"`

	RepairSetProcessId *FieldInteger `xml:"RepairSetProcessId,omitempty" json:"RepairSetProcessId,omitempty"`

	RequiredByProcessId *FieldInteger `xml:"RequiredByProcessId,omitempty" json:"RequiredByProcessId,omitempty"`

	IsSpecific *FieldBoolean `xml:"IsSpecific,omitempty" json:"IsSpecific,omitempty"`

	IncludedPositions *IncludedPositions `xml:"IncludedPositions,omitempty" json:"IncludedPositions,omitempty"`

	Extended *FieldBoolean `xml:"Extended,omitempty" json:"Extended,omitempty"`

	IncludedInCalculation *FieldBoolean `xml:"IncludedInCalculation,omitempty" json:"IncludedInCalculation,omitempty"`

	MaterialUnit *FieldString `xml:"MaterialUnit,omitempty" json:"MaterialUnit,omitempty"`

	MaterialUnitAbbr *FieldString `xml:"MaterialUnitAbbr,omitempty" json:"MaterialUnitAbbr,omitempty"`

	MaterialUnitMultiplier *FieldDecimal `xml:"MaterialUnitMultiplier,omitempty" json:"MaterialUnitMultiplier,omitempty"`

	OptionalPositionIncluded *FieldBoolean `xml:"optionalPositionIncluded,omitempty" json:"optionalPositionIncluded,omitempty"`

	PriceOrigin *FieldString `xml:"PriceOrigin,omitempty" json:"PriceOrigin,omitempty"`

	TimeOrigin *FieldString `xml:"TimeOrigin,omitempty" json:"TimeOrigin,omitempty"`

	SparePartHistoryPositions *SpHistPositionsSeq `xml:"SparePartHistoryPositions,omitempty" json:"SparePartHistoryPositions,omitempty"`

	PartOrigin *FieldString `xml:"PartOrigin,omitempty" json:"PartOrigin,omitempty"`

	FlagOrigin *FieldString `xml:"FlagOrigin,omitempty" json:"FlagOrigin,omitempty"`

	SpoTmpDescription *FieldString `xml:"spoTmpDescription,omitempty" json:"spoTmpDescription,omitempty"`

	SpoTmpItemNumber *FieldString `xml:"spoTmpItemNumber,omitempty" json:"spoTmpItemNumber,omitempty"`

	SpoDatItemNumber *FieldString `xml:"spoDatItemNumber,omitempty" json:"spoDatItemNumber,omitempty"`

	SpoTmpPrice *FieldDecimal `xml:"spoTmpPrice,omitempty" json:"spoTmpPrice,omitempty"`

	SpoTmpManualPartNumber *FieldBoolean `xml:"spoTmpManualPartNumber,omitempty" json:"spoTmpManualPartNumber,omitempty"`

	Length *FieldDecimal `xml:"Length,omitempty" json:"Length,omitempty"`

	Width *FieldDecimal `xml:"Width,omitempty" json:"Width,omitempty"`

	SparePartSubPositions struct {
		MaterialPosition []*MaterialPosition `xml:"MaterialPosition,omitempty" json:"MaterialPosition,omitempty"`
	} `xml:"SparePartSubPositions,omitempty" json:"SparePartSubPositions,omitempty"`

	WearRus *MTPLWearRus `xml:"WearRus,omitempty" json:"WearRus,omitempty"`

	Predefined *FieldBoolean `xml:"Predefined,omitempty" json:"Predefined,omitempty"`

	Manufacturer *FieldString `xml:"Manufacturer,omitempty" json:"Manufacturer,omitempty"`

	Dimension *FieldString `xml:"Dimension,omitempty" json:"Dimension,omitempty"`

	ExternalId *FieldString `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`
}

type MetaPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MetaPosition"`

	Key string `xml:"key,attr,omitempty" json:"key,omitempty"`

	Value string `xml:"value,attr,omitempty" json:"value,omitempty"`
}

type MetaPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs MetaPositions"`

	MetaPosition []*MetaPosition `xml:"MetaPosition,omitempty" json:"MetaPosition,omitempty"`
}

type OriginalPriceInfo struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs OriginalPriceInfo"`

	OriginalPriceNet *FieldDecimal `xml:"OriginalPriceNet,omitempty" json:"OriginalPriceNet,omitempty"`

	OriginalPriceVATRate *FieldDecimal `xml:"OriginalPriceVATRate,omitempty" json:"OriginalPriceVATRate,omitempty"`

	OriginalPriceNoVA *FieldDecimal `xml:"OriginalPriceNoVA,omitempty" json:"OriginalPriceNoVA,omitempty"`

	OriginalPriceNoVARate *FieldDecimal `xml:"OriginalPriceNoVARate,omitempty" json:"OriginalPriceNoVARate,omitempty"`

	DatOriginalPriceNoVARate *FieldDecimal `xml:"DatOriginalPriceNoVARate,omitempty" json:"DatOriginalPriceNoVARate,omitempty"`

	OriginalPriceBonus *FieldDecimal `xml:"OriginalPriceBonus,omitempty" json:"OriginalPriceBonus,omitempty"`

	OriginalPriceMalus *FieldDecimal `xml:"OriginalPriceMalus,omitempty" json:"OriginalPriceMalus,omitempty"`

	RegistrationTaxRate *FieldDecimal `xml:"RegistrationTaxRate,omitempty" json:"RegistrationTaxRate,omitempty"`

	RegistrationTax *FieldDecimal `xml:"RegistrationTax,omitempty" json:"RegistrationTax,omitempty"`

	TransportationCosts *FieldDecimal `xml:"TransportationCosts,omitempty" json:"TransportationCosts,omitempty"`

	OriginalPriceGross *FieldDecimal `xml:"OriginalPriceGross,omitempty" json:"OriginalPriceGross,omitempty"`
}

type Parameters struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Parameters"`

	DaysOnLot *FieldInteger `xml:"DaysOnLot,omitempty" json:"DaysOnLot,omitempty"`

	DatDaysOnLot *FieldInteger `xml:"DatDaysOnLot,omitempty" json:"DatDaysOnLot,omitempty"`

	TonnageClass *FieldString2 `xml:"TonnageClass,omitempty" json:"TonnageClass,omitempty"`

	DatTonnageClass *FieldString2 `xml:"DatTonnageClass,omitempty" json:"DatTonnageClass,omitempty"`

	ValueInfluencingFactors struct {
		ValueInfluencingFactor []*ValueInfluencingFactor `xml:"ValueInfluencingFactor,omitempty" json:"ValueInfluencingFactor,omitempty"`
	} `xml:"ValueInfluencingFactors,omitempty" json:"ValueInfluencingFactors,omitempty"`
}

type PlanData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PlanData"`

	ProjectedAcceptanceDate *FieldDate `xml:"ProjectedAcceptanceDate,omitempty" json:"ProjectedAcceptanceDate,omitempty"`

	ProjectedSalesDate *FieldDate `xml:"ProjectedSalesDate,omitempty" json:"ProjectedSalesDate,omitempty"`

	WorkshopInDate *FieldDate `xml:"WorkshopInDate,omitempty" json:"WorkshopInDate,omitempty"`

	ActualAcceptanceDate *FieldDate `xml:"ActualAcceptanceDate,omitempty" json:"ActualAcceptanceDate,omitempty"`

	ActualSalesDate *FieldDate `xml:"ActualSalesDate,omitempty" json:"ActualSalesDate,omitempty"`

	WorkshopOutDate *FieldDate `xml:"WorkshopOutDate,omitempty" json:"WorkshopOutDate,omitempty"`

	RepairCostType *FieldString `xml:"RepairCostType,omitempty" json:"RepairCostType,omitempty"`

	SalesPreparationDate *FieldDate `xml:"SalesPreparationDate,omitempty" json:"SalesPreparationDate,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	OwnType *FieldString `xml:"OwnType,omitempty" json:"OwnType,omitempty"`

	ActualRepairCostList struct {
		ActualRepairCost []*ActualRepairCost `xml:"ActualRepairCost,omitempty" json:"ActualRepairCost,omitempty"`
	} `xml:"ActualRepairCostList,omitempty" json:"ActualRepairCostList,omitempty"`
}

type PositionItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PositionItaly"`

	Type *FieldString `xml:"Type,omitempty" json:"Type,omitempty"`

	Position *FieldInteger `xml:"Position,omitempty" json:"Position,omitempty"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	PartCodeItaly *FieldString `xml:"PartCodeItaly,omitempty" json:"PartCodeItaly,omitempty"`

	PartNumber *FieldString `xml:"PartNumber,omitempty" json:"PartNumber,omitempty"`

	Amount *FieldDecimal `xml:"Amount,omitempty" json:"Amount,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	WorkTimeReplace *FieldDecimal `xml:"WorkTimeReplace,omitempty" json:"WorkTimeReplace,omitempty"`

	WorkTimeOverhaul *FieldDecimal `xml:"WorkTimeOverhaul,omitempty" json:"WorkTimeOverhaul,omitempty"`

	WorkTimeMechanic *FieldDecimal `xml:"WorkTimeMechanic,omitempty" json:"WorkTimeMechanic,omitempty"`

	WorkTimeLacquer *FieldDecimal `xml:"WorkTimeLacquer,omitempty" json:"WorkTimeLacquer,omitempty"`

	WorkLevelReplace *FieldString `xml:"WorkLevelReplace,omitempty" json:"WorkLevelReplace,omitempty"`

	WorkLevelOverhaul *FieldString `xml:"WorkLevelOverhaul,omitempty" json:"WorkLevelOverhaul,omitempty"`

	WorkLevelMechanic *FieldString `xml:"WorkLevelMechanic,omitempty" json:"WorkLevelMechanic,omitempty"`

	WorkLevelLacquer *FieldString `xml:"WorkLevelLacquer,omitempty" json:"WorkLevelLacquer,omitempty"`

	WorkLevelReplace2 *FieldString `xml:"WorkLevelReplace2,omitempty" json:"WorkLevelReplace2,omitempty"`

	WorkLevelOverhaul2 *FieldString `xml:"WorkLevelOverhaul2,omitempty" json:"WorkLevelOverhaul2,omitempty"`

	WorkLevelLacquer2 *FieldString `xml:"WorkLevelLacquer2,omitempty" json:"WorkLevelLacquer2,omitempty"`

	FlagValueParts *FieldString `xml:"FlagValueParts,omitempty" json:"FlagValueParts,omitempty"`

	ValueParts *FieldDecimal `xml:"ValueParts,omitempty" json:"ValueParts,omitempty"`

	PartDiscountPerc *FieldDecimal `xml:"PartDiscountPerc,omitempty" json:"PartDiscountPerc,omitempty"`

	PartDiscountValue *FieldDecimal `xml:"PartDiscountValue,omitempty" json:"PartDiscountValue,omitempty"`

	PartDiscountType *FieldCharacter `xml:"PartDiscountType,omitempty" json:"PartDiscountType,omitempty"`

	PartDiscountAsterisk *FieldCharacter `xml:"PartDiscountAsterisk,omitempty" json:"PartDiscountAsterisk,omitempty"`

	ValuePartsCorrected *FieldDecimal `xml:"ValuePartsCorrected,omitempty" json:"ValuePartsCorrected,omitempty"`

	ParentPosition *FieldInteger `xml:"ParentPosition,omitempty" json:"ParentPosition,omitempty"`
}

type PositionsItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PositionsItaly"`

	PositionItaly []*PositionItaly `xml:"PositionItaly,omitempty" json:"PositionItaly,omitempty"`
}

type PositionsWithMeasuresProtocol struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PositionsWithMeasuresProtocol"`

	PositionsWithMeasuresProtocolEntry []*PositionsWithMeasuresProtocolEntry `xml:"PositionsWithMeasuresProtocolEntry,omitempty" json:"PositionsWithMeasuresProtocolEntry,omitempty"`
}

type PositionsWithMeasuresProtocolEntry struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PositionsWithMeasuresProtocolEntry"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Length *FieldDecimal `xml:"Length,omitempty" json:"Length,omitempty"`

	With *FieldDecimal `xml:"With,omitempty" json:"With,omitempty"`

	MeasurementUnit *FieldString `xml:"MeasurementUnit,omitempty" json:"MeasurementUnit,omitempty"`
}

type PriceCalculation struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PriceCalculation"`

	SalesPriceNet *FieldDecimal `xml:"SalesPriceNet,omitempty" json:"SalesPriceNet,omitempty"`

	SalesPriceGross *FieldDecimal `xml:"SalesPriceGross,omitempty" json:"SalesPriceGross,omitempty"`

	PurchasePriceNet *FieldDecimal `xml:"PurchasePriceNet,omitempty" json:"PurchasePriceNet,omitempty"`

	PurchasePriceGross *FieldDecimal `xml:"PurchasePriceGross,omitempty" json:"PurchasePriceGross,omitempty"`

	VehicleNewPriceNet *FieldDecimal `xml:"VehicleNewPriceNet,omitempty" json:"VehicleNewPriceNet,omitempty"`

	VehicleNewPriceGross *FieldDecimal `xml:"VehicleNewPriceGross,omitempty" json:"VehicleNewPriceGross,omitempty"`

	ActualRepairCosts *FieldDecimal `xml:"ActualRepairCosts,omitempty" json:"ActualRepairCosts,omitempty"`

	DifferenceRepairCosts *FieldDecimal `xml:"DifferenceRepairCosts,omitempty" json:"DifferenceRepairCosts,omitempty"`

	LabelPriceNet *FieldDecimal `xml:"LabelPriceNet,omitempty" json:"LabelPriceNet,omitempty"`

	LabelPriceGross *FieldDecimal `xml:"LabelPriceGross,omitempty" json:"LabelPriceGross,omitempty"`

	SalesPriceMinimumNet *FieldDecimal `xml:"SalesPriceMinimumNet,omitempty" json:"SalesPriceMinimumNet,omitempty"`

	SalesPriceMinimumGross *FieldDecimal `xml:"SalesPriceMinimumGross,omitempty" json:"SalesPriceMinimumGross,omitempty"`

	ResellerSalesPriceNet *FieldDecimal `xml:"ResellerSalesPriceNet,omitempty" json:"ResellerSalesPriceNet,omitempty"`

	ResellerSalesPriceGross *FieldDecimal `xml:"ResellerSalesPriceGross,omitempty" json:"ResellerSalesPriceGross,omitempty"`

	NominalDaysOnLot *FieldDecimal `xml:"NominalDaysOnLot,omitempty" json:"NominalDaysOnLot,omitempty"`

	DatNominalDaysOnLot *FieldDecimal `xml:"DatNominalDaysOnLot,omitempty" json:"DatNominalDaysOnLot,omitempty"`
}

type PriceCorrectionsProtocol struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PriceCorrectionsProtocol"`

	PriceCorrectionsProtocolEntry []*PriceCorrectionsProtocolEntry `xml:"PriceCorrectionsProtocolEntry,omitempty" json:"PriceCorrectionsProtocolEntry,omitempty"`
}

type PriceCorrectionsProtocolEntry struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PriceCorrectionsProtocolEntry"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	PriceCorrection *FieldDecimal `xml:"PriceCorrection,omitempty" json:"PriceCorrection,omitempty"`
}

type PrivatePolicy struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PrivatePolicy"`

	Address *FieldString `xml:"Address,omitempty" json:"Address,omitempty"`

	PolicyDate *FieldDate `xml:"PolicyDate,omitempty" json:"PolicyDate,omitempty"`

	EMail *FieldString `xml:"EMail,omitempty" json:"EMail,omitempty"`

	PhoneBusiness *FieldString `xml:"PhoneBusiness,omitempty" json:"PhoneBusiness,omitempty"`

	PhoneMobile *FieldString `xml:"PhoneMobile,omitempty" json:"PhoneMobile,omitempty"`

	PhonePrivate *FieldString `xml:"PhonePrivate,omitempty" json:"PhonePrivate,omitempty"`

	Time *FieldDateTime `xml:"Time,omitempty" json:"Time,omitempty"`

	User *FieldString `xml:"User,omitempty" json:"User,omitempty"`

	UserNumber *FieldInteger `xml:"UserNumber,omitempty" json:"UserNumber,omitempty"`

	UserShort *FieldString `xml:"UserShort,omitempty" json:"UserShort,omitempty"`
}

type ProcedureRelatedParameter struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ProcedureRelatedParameter"`

	Value string `xml:",chardata" json:"-,"`

	Factor string `xml:"factor,attr,omitempty" json:"factor,omitempty"`

	Attribute string `xml:"attribute,attr,omitempty" json:"attribute,omitempty"`

	Type string `xml:"type,attr,omitempty" json:"type,omitempty"`

	Mode string `xml:"mode,attr,omitempty" json:"mode,omitempty"`

	Default string `xml:"default,attr,omitempty" json:"default,omitempty"`

	Description string `xml:"description,attr,omitempty" json:"description,omitempty"`
}

type ProcedureRelatedParameters struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ProcedureRelatedParameters"`

	ProcedureRelatedParameter []*ProcedureRelatedParameter `xml:"ProcedureRelatedParameter,omitempty" json:"ProcedureRelatedParameter,omitempty"`
}

type ProcessManagement struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ProcessManagement"`

	CustomDataList *CustomDataList `xml:"CustomDataList,omitempty" json:"CustomDataList,omitempty"`

	DamageManagement *DamageManagement `xml:"DamageManagement,omitempty" json:"DamageManagement,omitempty"`

	InvoiceDetail *InvoiceDetail `xml:"InvoiceDetail,omitempty" json:"InvoiceDetail,omitempty"`

	AdditionalInsuranceData *AdditionalInsuranceData `xml:"AdditionalInsuranceData,omitempty" json:"AdditionalInsuranceData,omitempty"`
}

type Prospects struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Prospects"`

	Prospect []*Address `xml:"Prospect,omitempty" json:"Prospect,omitempty"`
}

type ProtocolEntry struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ProtocolEntry"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	LacquerLevel *FieldInteger `xml:"LacquerLevel,omitempty" json:"LacquerLevel,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Logic *FieldString `xml:"Logic,omitempty" json:"Logic,omitempty"`
}

type ProtocolEntryWithRemoval struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ProtocolEntryWithRemoval"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	LacquerLevel *FieldInteger `xml:"LacquerLevel,omitempty" json:"LacquerLevel,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	ContainedInDATProcessId *FieldInteger `xml:"ContainedInDATProcessId,omitempty" json:"ContainedInDATProcessId,omitempty"`

	ContainedInRepairType *FieldString `xml:"ContainedInRepairType,omitempty" json:"ContainedInRepairType,omitempty"`

	ContainedInLacquerLevel *FieldInteger `xml:"ContainedInLacquerLevel,omitempty" json:"ContainedInLacquerLevel,omitempty"`

	Logic *FieldString `xml:"Logic,omitempty" json:"Logic,omitempty"`
}

type ProtocolHint struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ProtocolHint"`

	Identifier *FieldString `xml:"Identifier,omitempty" json:"Identifier,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`
}

type ProtocolHints struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ProtocolHints"`

	ProtocolHint []*ProtocolHint `xml:"ProtocolHint,omitempty" json:"ProtocolHint,omitempty"`
}

type Purchase struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Purchase"`

	CustomerId *FieldString10 `xml:"CustomerId,omitempty" json:"CustomerId,omitempty"`

	BuyerId *FieldString10 `xml:"BuyerId,omitempty" json:"BuyerId,omitempty"`

	VehicleGroup *FieldString `xml:"VehicleGroup,omitempty" json:"VehicleGroup,omitempty"`

	PurchaseDate *FieldDateTime `xml:"PurchaseDate,omitempty" json:"PurchaseDate,omitempty"`

	PurchasePriceNet *FieldDecimal `xml:"PurchasePriceNet,omitempty" json:"PurchasePriceNet,omitempty"`

	PurchasePriceGross *FieldDecimal `xml:"PurchasePriceGross,omitempty" json:"PurchasePriceGross,omitempty"`

	TaxationType *FieldString `xml:"TaxationType,omitempty" json:"TaxationType,omitempty"`

	AcceptanceDate *FieldDateTime `xml:"AcceptanceDate,omitempty" json:"AcceptanceDate,omitempty"`

	AcceptanceDetails *FieldString `xml:"AcceptanceDetails,omitempty" json:"AcceptanceDetails,omitempty"`

	MileageExpected *FieldInteger `xml:"MileageExpected,omitempty" json:"MileageExpected,omitempty"`

	DeregistrationDate *FieldDateTime `xml:"DeregistrationDate,omitempty" json:"DeregistrationDate,omitempty"`

	ResidualWarrantyType *FieldString `xml:"ResidualWarrantyType,omitempty" json:"ResidualWarrantyType,omitempty"`

	ResidualWarrantyUntil *FieldDateTime `xml:"ResidualWarrantyUntil,omitempty" json:"ResidualWarrantyUntil,omitempty"`

	ResidualWarrantyValueNet *FieldDecimal `xml:"ResidualWarrantyValueNet,omitempty" json:"ResidualWarrantyValueNet,omitempty"`

	ResidualWarrantyValueGross *FieldDecimal `xml:"ResidualWarrantyValueGross,omitempty" json:"ResidualWarrantyValueGross,omitempty"`

	PaymentAgreements *FieldString `xml:"PaymentAgreements,omitempty" json:"PaymentAgreements,omitempty"`

	OtherAgreements *FieldString `xml:"OtherAgreements,omitempty" json:"OtherAgreements,omitempty"`

	ProvisionOn *FieldDateTime `xml:"ProvisionOn,omitempty" json:"ProvisionOn,omitempty"`

	UserId *FieldInteger `xml:"UserId,omitempty" json:"UserId,omitempty"`

	AcceptanceType *FieldString `xml:"AcceptanceType,omitempty" json:"AcceptanceType,omitempty"`
}

type PurchaseOffer struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs PurchaseOffer"`

	PurchasePriceNet *FieldDecimal `xml:"PurchasePriceNet,omitempty" json:"PurchasePriceNet,omitempty"`

	PurchasePriceGross *FieldDecimal `xml:"PurchasePriceGross,omitempty" json:"PurchasePriceGross,omitempty"`

	PurchaseOfferNumber *FieldString `xml:"PurchaseOfferNumber,omitempty" json:"PurchaseOfferNumber,omitempty"`

	OfferDate *FieldDate `xml:"OfferDate,omitempty" json:"OfferDate,omitempty"`

	ResubmissionDate *FieldDate `xml:"ResubmissionDate,omitempty" json:"ResubmissionDate,omitempty"`

	OfferedBy *FieldString `xml:"OfferedBy,omitempty" json:"OfferedBy,omitempty"`

	Titles *FieldString `xml:"Titles,omitempty" json:"Titles,omitempty"`

	Comments *FieldString `xml:"Comments,omitempty" json:"Comments,omitempty"`
}

type Recommendation struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Recommendation"`

	Usage []*Usage `xml:"Usage,omitempty" json:"Usage,omitempty"`

	Interval []*Interval `xml:"Interval,omitempty" json:"Interval,omitempty"`

	Product []string `xml:"Product,omitempty" json:"Product,omitempty"`
}

type RegistrationData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs RegistrationData"`

	KbaCode *FieldString8 `xml:"KbaCode,omitempty" json:"KbaCode,omitempty"`

	KbaStructurePollution *FieldString30 `xml:"KbaStructurePollution,omitempty" json:"KbaStructurePollution,omitempty"`

	KbaEngineType *FieldString2 `xml:"KbaEngineType,omitempty" json:"KbaEngineType,omitempty"`

	LicenseNumber *FieldString30 `xml:"LicenseNumber,omitempty" json:"LicenseNumber,omitempty"`

	BaseNumber *FieldString9 `xml:"BaseNumber,omitempty" json:"BaseNumber,omitempty"`

	TypeNoteNumber *FieldString6 `xml:"TypeNoteNumber,omitempty" json:"TypeNoteNumber,omitempty"`

	NationalCodeAustria *FieldString6 `xml:"NationalCodeAustria,omitempty" json:"NationalCodeAustria,omitempty"`

	OpponentLicenseNumber *FieldString30 `xml:"OpponentLicenseNumber,omitempty" json:"OpponentLicenseNumber,omitempty"`

	LicenseNumberSale *FieldString `xml:"LicenseNumberSale,omitempty" json:"LicenseNumberSale,omitempty"`

	RegistrationNumber *FieldString30 `xml:"RegistrationNumber,omitempty" json:"RegistrationNumber,omitempty"`

	SuspensionDate *FieldDate `xml:"SuspensionDate,omitempty" json:"SuspensionDate,omitempty"`

	CNIT *FieldString `xml:"CNIT,omitempty" json:"CNIT,omitempty"`

	LicenseNumberAccident *FieldString `xml:"LicenseNumberAccident,omitempty" json:"LicenseNumberAccident,omitempty"`

	ManufacturerName *FieldString30 `xml:"ManufacturerName,omitempty" json:"ManufacturerName,omitempty"`

	MotorIndicator *FieldString6 `xml:"MotorIndicator,omitempty" json:"MotorIndicator,omitempty"`

	RegistrationDocumentNumber *FieldString30 `xml:"RegistrationDocumentNumber,omitempty" json:"RegistrationDocumentNumber,omitempty"`

	LicenseNumberType *FieldString80 `xml:"LicenseNumberType,omitempty" json:"LicenseNumberType,omitempty"`

	SeasonalLicensePlateMonthFrom *FieldInteger `xml:"SeasonalLicensePlateMonthFrom,omitempty" json:"SeasonalLicensePlateMonthFrom,omitempty"`

	SeasonalLicensePlateMonthTo *FieldInteger `xml:"SeasonalLicensePlateMonthTo,omitempty" json:"SeasonalLicensePlateMonthTo,omitempty"`
}

type RepairCalculation struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs RepairCalculation"`

	Comment *FieldString `xml:"Comment,omitempty" json:"Comment,omitempty"`

	ExternalId *FieldString `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	Vehicle *Vehicle `xml:"Vehicle,omitempty" json:"Vehicle,omitempty"`

	RepairWages *RepairWages `xml:"RepairWages,omitempty" json:"RepairWages,omitempty"`

	RepairParameters *RepairParameters `xml:"RepairParameters,omitempty" json:"RepairParameters,omitempty"`

	ProcedureRelatedParameters *ProcedureRelatedParameters `xml:"ProcedureRelatedParameters,omitempty" json:"ProcedureRelatedParameters,omitempty"`

	RepairPositions *RepairPositions `xml:"RepairPositions,omitempty" json:"RepairPositions,omitempty"`

	CalcResultToUse *FieldString `xml:"CalcResultToUse,omitempty" json:"CalcResultToUse,omitempty"`

	CalcEngine *FieldString `xml:"CalcEngine,omitempty" json:"CalcEngine,omitempty"`

	CalcSource *FieldString `xml:"CalcSource,omitempty" json:"CalcSource,omitempty"`

	CalcResultCommon *CalcResult `xml:"CalcResultCommon,omitempty" json:"CalcResultCommon,omitempty"`

	CalcResultGlass *CalcResult `xml:"CalcResultGlass,omitempty" json:"CalcResultGlass,omitempty"`

	CalcResultOptimized *CalcResult `xml:"CalcResultOptimized,omitempty" json:"CalcResultOptimized,omitempty"`

	CalcResultExtension *CalcResult `xml:"CalcResultExtension,omitempty" json:"CalcResultExtension,omitempty"`

	CalcResultItaly *CalcResultItaly `xml:"CalcResultItaly,omitempty" json:"CalcResultItaly,omitempty"`

	CalcResultItalyOptimized *CalcResultItaly `xml:"CalcResultItalyOptimized,omitempty" json:"CalcResultItalyOptimized,omitempty"`

	CalcResultItalyGlass *CalcResultItaly `xml:"CalcResultItalyGlass,omitempty" json:"CalcResultItalyGlass,omitempty"`

	CalcResultDomus *DomusCalcResult `xml:"CalcResultDomus,omitempty" json:"CalcResultDomus,omitempty"`

	CalcResultDomusOptimized *DomusCalcResult `xml:"CalcResultDomusOptimized,omitempty" json:"CalcResultDomusOptimized,omitempty"`

	CalcResultDomusGlass *DomusCalcResult `xml:"CalcResultDomusGlass,omitempty" json:"CalcResultDomusGlass,omitempty"`

	CalcResultCustomerRanking *CalcResult `xml:"CalcResultCustomerRanking,omitempty" json:"CalcResultCustomerRanking,omitempty"`

	CalcResultMaintenance *CalcResult `xml:"CalcResultMaintenance,omitempty" json:"CalcResultMaintenance,omitempty"`

	CalcResultsHistory *CalcResultsHistory `xml:"CalcResultsHistory,omitempty" json:"CalcResultsHistory,omitempty"`

	CalcResultSPO *CalcResult `xml:"CalcResultSPO,omitempty" json:"CalcResultSPO,omitempty"`

	DiscountPositions *DiscountPositions `xml:"DiscountPositions,omitempty" json:"DiscountPositions,omitempty"`

	CalculationSummary *CalculationSummary `xml:"CalculationSummary,omitempty" json:"CalculationSummary,omitempty"`

	SurchargeSettings *SurchargeSettings `xml:"SurchargeSettings,omitempty" json:"SurchargeSettings,omitempty"`

	SettingsParameters *SettingsParameters `xml:"SettingsParameters,omitempty" json:"SettingsParameters,omitempty"`
}

type RepairOrder struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs RepairOrder"`

	DamageDate *FieldDateTime `xml:"DamageDate,omitempty" json:"DamageDate,omitempty"`

	RepairCoverage string `xml:"RepairCoverage,omitempty" json:"RepairCoverage,omitempty"`

	OrderNumber *FieldString `xml:"OrderNumber,omitempty" json:"OrderNumber,omitempty"`

	InvoiceNumber *FieldString `xml:"InvoiceNumber,omitempty" json:"InvoiceNumber,omitempty"`

	JobNumber *FieldString `xml:"JobNumber,omitempty" json:"JobNumber,omitempty"`

	DamageNumber *FieldString `xml:"DamageNumber,omitempty" json:"DamageNumber,omitempty"`

	PolicyNumber *FieldString `xml:"PolicyNumber,omitempty" json:"PolicyNumber,omitempty"`

	Retention *FieldBoolean `xml:"Retention,omitempty" json:"Retention,omitempty"`

	RetentionAmount *FieldDecimal `xml:"RetentionAmount,omitempty" json:"RetentionAmount,omitempty"`

	BillingCategory *FieldDecimal `xml:"BillingCategory,omitempty" json:"BillingCategory,omitempty"`

	InsuranceId *FieldString `xml:"InsuranceId,omitempty" json:"InsuranceId,omitempty"`

	InsuranceGroupId *FieldString `xml:"InsuranceGroupId,omitempty" json:"InsuranceGroupId,omitempty"`

	ServiceProviderId *FieldString `xml:"ServiceProviderId,omitempty" json:"ServiceProviderId,omitempty"`

	InsuranceType *FieldString `xml:"InsuranceType,omitempty" json:"InsuranceType,omitempty"`

	LossLocation *FieldString `xml:"LossLocation,omitempty" json:"LossLocation,omitempty"`

	DamageType *FieldInteger `xml:"DamageType,omitempty" json:"DamageType,omitempty"`

	InspectionDate *FieldDate `xml:"InspectionDate,omitempty" json:"InspectionDate,omitempty"`

	DeclarationOfAssignment *FieldBoolean `xml:"DeclarationOfAssignment,omitempty" json:"DeclarationOfAssignment,omitempty"`

	InsuranceCase *FieldBoolean `xml:"InsuranceCase,omitempty" json:"InsuranceCase,omitempty"`

	CreationDateTime *FieldDateTime `xml:"CreationDateTime,omitempty" json:"CreationDateTime,omitempty"`

	AdditionalData *AdditionalData `xml:"AdditionalData,omitempty" json:"AdditionalData,omitempty"`

	MetaPositions *MetaPositions `xml:"MetaPositions,omitempty" json:"MetaPositions,omitempty"`

	InsuranceNumber *FieldString `xml:"InsuranceNumber,omitempty" json:"InsuranceNumber,omitempty"`

	InsuranceAgency *FieldString `xml:"InsuranceAgency,omitempty" json:"InsuranceAgency,omitempty"`

	TypeOfInsurance *FieldInteger `xml:"TypeOfInsurance,omitempty" json:"TypeOfInsurance,omitempty"`

	InvoiceDate *FieldDateTime `xml:"InvoiceDate,omitempty" json:"InvoiceDate,omitempty"`

	CountryFlagDamageEvent *FieldString3 `xml:"CountryFlagDamageEvent,omitempty" json:"CountryFlagDamageEvent,omitempty"`

	InsuranceName *FieldString40 `xml:"InsuranceName,omitempty" json:"InsuranceName,omitempty"`

	TokenContributionInInsuranceCase *FieldString `xml:"TokenContributionInInsuranceCase,omitempty" json:"TokenContributionInInsuranceCase,omitempty"`

	Deleted *FieldBoolean `xml:"Deleted,omitempty" json:"Deleted,omitempty"`

	GDVRoutingType *FieldString `xml:"GDVRoutingType,omitempty" json:"GDVRoutingType,omitempty"`

	Comment *FieldString `xml:"Comment,omitempty" json:"Comment,omitempty"`

	DATProcessIdCommentList *DATProcessIdCommentList `xml:"DATProcessIdCommentList,omitempty" json:"DATProcessIdCommentList,omitempty"`

	EstimatedRepairTimeInDays *FieldInteger `xml:"EstimatedRepairTimeInDays,omitempty" json:"EstimatedRepairTimeInDays,omitempty"`

	ReplacementCar *FieldBoolean `xml:"ReplacementCar,omitempty" json:"ReplacementCar,omitempty"`

	ReplacementCarTimeInDays *FieldInteger `xml:"ReplacementCarTimeInDays,omitempty" json:"ReplacementCarTimeInDays,omitempty"`

	ReplacementCarCosts *FieldDecimal `xml:"ReplacementCarCosts,omitempty" json:"ReplacementCarCosts,omitempty"`

	OtherCostsDescription *FieldString `xml:"OtherCostsDescription,omitempty" json:"OtherCostsDescription,omitempty"`

	OtherCosts *FieldDecimal `xml:"OtherCosts,omitempty" json:"OtherCosts,omitempty"`

	TowingRecoveryCosts *FieldDecimal `xml:"TowingRecoveryCosts,omitempty" json:"TowingRecoveryCosts,omitempty"`

	OtherDeductionsDescription *FieldString `xml:"OtherDeductionsDescription,omitempty" json:"OtherDeductionsDescription,omitempty"`

	OtherDeductions *FieldDecimal `xml:"OtherDeductions,omitempty" json:"OtherDeductions,omitempty"`

	RepairAgreementExclVAT *FieldDecimal `xml:"RepairAgreementExclVAT,omitempty" json:"RepairAgreementExclVAT,omitempty"`
}

type RepairParameters struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs RepairParameters"`

	SeriesSpecific *FieldBoolean `xml:"SeriesSpecific,omitempty" json:"SeriesSpecific,omitempty"`

	PhantomCalculation *FieldBoolean `xml:"PhantomCalculation,omitempty" json:"PhantomCalculation,omitempty"`

	PartsCorrection *FieldDecimal `xml:"PartsCorrection,omitempty" json:"PartsCorrection,omitempty"`

	PartsDiscountPercentage *FieldDecimal `xml:"PartsDiscountPercentage,omitempty" json:"PartsDiscountPercentage,omitempty"`

	PartsDiscountAmount *FieldDecimal `xml:"PartsDiscountAmount,omitempty" json:"PartsDiscountAmount,omitempty"`

	PartsDiscountPercentageForOpt *FieldDecimal `xml:"PartsDiscountPercentageForOpt,omitempty" json:"PartsDiscountPercentageForOpt,omitempty"`

	PartsDiscountAmountForOpt *FieldDecimal `xml:"PartsDiscountAmountForOpt,omitempty" json:"PartsDiscountAmountForOpt,omitempty"`

	PartsFlatrate *FieldDecimal `xml:"PartsFlatrate,omitempty" json:"PartsFlatrate,omitempty"`

	ConsumablesType *FieldInteger `xml:"ConsumablesType,omitempty" json:"ConsumablesType,omitempty"`

	ConsumablesFlatAmount *FieldDecimal `xml:"ConsumablesFlatAmount,omitempty" json:"ConsumablesFlatAmount,omitempty"`

	ConsumablesPercentage *FieldDecimal `xml:"ConsumablesPercentage,omitempty" json:"ConsumablesPercentage,omitempty"`

	ConsumablesPercentageForOpt *FieldDecimal `xml:"ConsumablesPercentageForOpt,omitempty" json:"ConsumablesPercentageForOpt,omitempty"`

	ProcurementCosts *FieldDecimal `xml:"ProcurementCosts,omitempty" json:"ProcurementCosts,omitempty"`

	ProcurementCostsMaterial *FieldDecimal `xml:"ProcurementCostsMaterial,omitempty" json:"ProcurementCostsMaterial,omitempty"`

	ProcurementCostsBodyInWhite *FieldDecimal `xml:"ProcurementCostsBodyInWhite,omitempty" json:"ProcurementCostsBodyInWhite,omitempty"`

	ProcurementCostsAlignmentBrackets *FieldDecimal `xml:"ProcurementCostsAlignmentBrackets,omitempty" json:"ProcurementCostsAlignmentBrackets,omitempty"`

	ProcurementCostsPercentage *FieldDecimal `xml:"ProcurementCostsPercentage,omitempty" json:"ProcurementCostsPercentage,omitempty"`

	ProcurementCostsPercentageBodyInWhite *FieldDecimal `xml:"ProcurementCostsPercentageBodyInWhite,omitempty" json:"ProcurementCostsPercentageBodyInWhite,omitempty"`

	ProcurementCostsMax *FieldDecimal `xml:"ProcurementCostsMax,omitempty" json:"ProcurementCostsMax,omitempty"`

	ProcurementCostsBodyInWhiteMax *FieldDecimal `xml:"ProcurementCostsBodyInWhiteMax,omitempty" json:"ProcurementCostsBodyInWhiteMax,omitempty"`

	PriceDate *FieldDate `xml:"PriceDate,omitempty" json:"PriceDate,omitempty"`

	LacquerFremdleistungGlobal *FieldString `xml:"LacquerFremdleistungGlobal,omitempty" json:"LacquerFremdleistungGlobal,omitempty"`

	LacquerMethod *FieldString `xml:"LacquerMethod,omitempty" json:"LacquerMethod,omitempty"`

	LacquerTypeId *FieldString `xml:"LacquerTypeId,omitempty" json:"LacquerTypeId,omitempty"`

	LacquerType *FieldString `xml:"LacquerType,omitempty" json:"LacquerType,omitempty"`

	LacquerTypeLayers *FieldInteger `xml:"LacquerTypeLayers,omitempty" json:"LacquerTypeLayers,omitempty"`

	LacquerDismountedPrelacquer *FieldBoolean `xml:"LacquerDismountedPrelacquer,omitempty" json:"LacquerDismountedPrelacquer,omitempty"`

	LacquerPlasticMounted *FieldBoolean `xml:"LacquerPlasticMounted,omitempty" json:"LacquerPlasticMounted,omitempty"`

	LacquerWithoutDisassembly *FieldBoolean `xml:"LacquerWithoutDisassembly,omitempty" json:"LacquerWithoutDisassembly,omitempty"`

	LacquerWithForcedDisassembly *FieldBoolean `xml:"LacquerWithForcedDisassembly,omitempty" json:"LacquerWithForcedDisassembly,omitempty"`

	LacquerReducedLeadTime *FieldBoolean `xml:"LacquerReducedLeadTime,omitempty" json:"LacquerReducedLeadTime,omitempty"`

	LacquerWithRack *FieldBoolean `xml:"LacquerWithRack,omitempty" json:"LacquerWithRack,omitempty"`

	LacquerAdditionTwoColor *FieldBoolean `xml:"LacquerAdditionTwoColor,omitempty" json:"LacquerAdditionTwoColor,omitempty"`

	LacquerAdditionMattpaint *FieldBoolean `xml:"LacquerAdditionMattpaint,omitempty" json:"LacquerAdditionMattpaint,omitempty"`

	LacquerAdjustmentMixingUnit *FieldBoolean `xml:"LacquerAdjustmentMixingUnit,omitempty" json:"LacquerAdjustmentMixingUnit,omitempty"`

	LacquerAdjustmentMixingColours *FieldInteger `xml:"LacquerAdjustmentMixingColours,omitempty" json:"LacquerAdjustmentMixingColours,omitempty"`

	LacquerAdjustmentExemplarySheets *FieldInteger `xml:"LacquerAdjustmentExemplarySheets,omitempty" json:"LacquerAdjustmentExemplarySheets,omitempty"`

	LacquerCompleteFlatrate *FieldDecimal `xml:"LacquerCompleteFlatrate,omitempty" json:"LacquerCompleteFlatrate,omitempty"`

	LacquerWorkFlatrate *FieldDecimal `xml:"LacquerWorkFlatrate,omitempty" json:"LacquerWorkFlatrate,omitempty"`

	LacquerMaterialFlatrate *FieldDecimal `xml:"LacquerMaterialFlatrate,omitempty" json:"LacquerMaterialFlatrate,omitempty"`

	SpecialLacquerAward *FieldDecimal `xml:"SpecialLacquerAward,omitempty" json:"SpecialLacquerAward,omitempty"`

	LacquerMaterialPercentage *FieldDecimal `xml:"LacquerMaterialPercentage,omitempty" json:"LacquerMaterialPercentage,omitempty"`

	LacquerMaterialIndex *FieldInteger `xml:"LacquerMaterialIndex,omitempty" json:"LacquerMaterialIndex,omitempty"`

	LacquerMaterialChargePerPoint *FieldDecimal `xml:"LacquerMaterialChargePerPoint,omitempty" json:"LacquerMaterialChargePerPoint,omitempty"`

	LacquerMaterialPriceCategory *FieldInteger `xml:"LacquerMaterialPriceCategory,omitempty" json:"LacquerMaterialPriceCategory,omitempty"`

	LacquerMaterialPrintDescr *FieldBoolean `xml:"LacquerMaterialPrintDescr,omitempty" json:"LacquerMaterialPrintDescr,omitempty"`

	LacquerLeadTimeMetal *FieldDecimal `xml:"LacquerLeadTimeMetal,omitempty" json:"LacquerLeadTimeMetal,omitempty"`

	LacquerLeadTimePlastic *FieldDecimal `xml:"LacquerLeadTimePlastic,omitempty" json:"LacquerLeadTimePlastic,omitempty"`

	LacquerLeadTimePercentage *FieldDecimal `xml:"LacquerLeadTimePercentage,omitempty" json:"LacquerLeadTimePercentage,omitempty"`

	LacquerDisposalCosts *FieldDecimal `xml:"LacquerDisposalCosts,omitempty" json:"LacquerDisposalCosts,omitempty"`

	LacquerCoveringPanes *FieldInteger `xml:"LacquerCoveringPanes,omitempty" json:"LacquerCoveringPanes,omitempty"`

	LacquerCoveringDismountedPlastic *FieldInteger `xml:"LacquerCoveringDismountedPlastic,omitempty" json:"LacquerCoveringDismountedPlastic,omitempty"`

	LacquerMattBlackWindowFrames *FieldInteger `xml:"LacquerMattBlackWindowFrames,omitempty" json:"LacquerMattBlackWindowFrames,omitempty"`

	LacquerWageDiscountAmount *FieldDecimal `xml:"LacquerWageDiscountAmount,omitempty" json:"LacquerWageDiscountAmount,omitempty"`

	LacquerWageDiscountPercentage *FieldDecimal `xml:"LacquerWageDiscountPercentage,omitempty" json:"LacquerWageDiscountPercentage,omitempty"`

	LacquerWageDiscountAmountForOpt *FieldDecimal `xml:"LacquerWageDiscountAmountForOpt,omitempty" json:"LacquerWageDiscountAmountForOpt,omitempty"`

	LacquerWageDiscountPercentageForOpt *FieldDecimal `xml:"LacquerWageDiscountPercentageForOpt,omitempty" json:"LacquerWageDiscountPercentageForOpt,omitempty"`

	LacquerMaterialDiscountAmount *FieldDecimal `xml:"LacquerMaterialDiscountAmount,omitempty" json:"LacquerMaterialDiscountAmount,omitempty"`

	LacquerMaterialDiscountPercentage *FieldDecimal `xml:"LacquerMaterialDiscountPercentage,omitempty" json:"LacquerMaterialDiscountPercentage,omitempty"`

	LacquerMaterialDiscountAmountForOpt *FieldDecimal `xml:"LacquerMaterialDiscountAmountForOpt,omitempty" json:"LacquerMaterialDiscountAmountForOpt,omitempty"`

	LacquerMaterialDiscountPercentageForOpt *FieldDecimal `xml:"LacquerMaterialDiscountPercentageForOpt,omitempty" json:"LacquerMaterialDiscountPercentageForOpt,omitempty"`

	LacquerCompleteDiscountAmount *FieldDecimal `xml:"LacquerCompleteDiscountAmount,omitempty" json:"LacquerCompleteDiscountAmount,omitempty"`

	LacquerCompleteDiscountPercentage *FieldDecimal `xml:"LacquerCompleteDiscountPercentage,omitempty" json:"LacquerCompleteDiscountPercentage,omitempty"`

	LacquerCompleteDiscountAmountForOpt *FieldDecimal `xml:"LacquerCompleteDiscountAmountForOpt,omitempty" json:"LacquerCompleteDiscountAmountForOpt,omitempty"`

	LacquerCompleteDiscountPercentageForOpt *FieldDecimal `xml:"LacquerCompleteDiscountPercentageForOpt,omitempty" json:"LacquerCompleteDiscountPercentageForOpt,omitempty"`

	LacquerPaintWorkDiscountPercentage *FieldDecimal `xml:"LacquerPaintWorkDiscountPercentage,omitempty" json:"LacquerPaintWorkDiscountPercentage,omitempty"`

	LacquerTimeUnitSystem *FieldString `xml:"LacquerTimeUnitSystem,omitempty" json:"LacquerTimeUnitSystem,omitempty"`

	LacquerTimeUnitsPerHour *FieldInteger `xml:"LacquerTimeUnitsPerHour,omitempty" json:"LacquerTimeUnitsPerHour,omitempty"`

	TimeUnitSystem *FieldString `xml:"TimeUnitSystem,omitempty" json:"TimeUnitSystem,omitempty"`

	TimeUnitsPerHour *FieldInteger `xml:"TimeUnitsPerHour,omitempty" json:"TimeUnitsPerHour,omitempty"`

	TimeUnitsOfManufacturer *FieldBoolean `xml:"TimeUnitsOfManufacturer,omitempty" json:"TimeUnitsOfManufacturer,omitempty"`

	RepairWageDiscountPercentage *FieldDecimal `xml:"RepairWageDiscountPercentage,omitempty" json:"RepairWageDiscountPercentage,omitempty"`

	RepairWageDiscountAmount *FieldDecimal `xml:"RepairWageDiscountAmount,omitempty" json:"RepairWageDiscountAmount,omitempty"`

	RepairWageDiscountPercentageForOpt *FieldDecimal `xml:"RepairWageDiscountPercentageForOpt,omitempty" json:"RepairWageDiscountPercentageForOpt,omitempty"`

	RepairWageDiscountAmountForOpt *FieldDecimal `xml:"RepairWageDiscountAmountForOpt,omitempty" json:"RepairWageDiscountAmountForOpt,omitempty"`

	RepairWageFlatrate *FieldDecimal `xml:"RepairWageFlatrate,omitempty" json:"RepairWageFlatrate,omitempty"`

	LongWorkDescriptions *FieldBoolean `xml:"LongWorkDescriptions,omitempty" json:"LongWorkDescriptions,omitempty"`

	AllIncludedWork *FieldBoolean `xml:"AllIncludedWork,omitempty" json:"AllIncludedWork,omitempty"`

	FeeAE *FieldDecimal `xml:"FeeAE,omitempty" json:"FeeAE,omitempty"`

	WithDomusCalculation *FieldBoolean `xml:"WithDomusCalculation,omitempty" json:"WithDomusCalculation,omitempty"`

	PriceLevel *FieldInteger `xml:"PriceLevel,omitempty" json:"PriceLevel,omitempty"`

	LacquerDiscountFactor *FieldDecimal `xml:"LacquerDiscountFactor,omitempty" json:"LacquerDiscountFactor,omitempty"`

	WearBodyAge *FieldDecimal `xml:"WearBodyAge,omitempty" json:"WearBodyAge,omitempty"`

	WearBodyCorrosion *FieldDecimal `xml:"WearBodyCorrosion,omitempty" json:"WearBodyCorrosion,omitempty"`

	WearTyreMinSize *FieldDecimal `xml:"WearTyreMinSize,omitempty" json:"WearTyreMinSize,omitempty"`

	WearTyreActualSize *FieldDecimal `xml:"WearTyreActualSize,omitempty" json:"WearTyreActualSize,omitempty"`

	WearTyreSize *FieldDecimal `xml:"WearTyreSize,omitempty" json:"WearTyreSize,omitempty"`

	WearTyreAge *FieldString `xml:"WearTyreAge,omitempty" json:"WearTyreAge,omitempty"`

	WearBatAge *FieldDecimal `xml:"WearBatAge,omitempty" json:"WearBatAge,omitempty"`

	WearBatTime *FieldDecimal `xml:"WearBatTime,omitempty" json:"WearBatTime,omitempty"`

	WearPlasticAge *FieldDecimal `xml:"WearPlasticAge,omitempty" json:"WearPlasticAge,omitempty"`

	WearCompAge *FieldDecimal `xml:"WearCompAge,omitempty" json:"WearCompAge,omitempty"`

	WearCompMileage *FieldDecimal `xml:"WearCompMileage,omitempty" json:"WearCompMileage,omitempty"`

	WearCompTypeId *FieldInteger `xml:"WearCompTypeId,omitempty" json:"WearCompTypeId,omitempty"`

	WearCompTypeDesc *FieldString `xml:"WearCompTypeDesc,omitempty" json:"WearCompTypeDesc,omitempty"`

	CalculationType *FieldCharacter `xml:"CalculationType,omitempty" json:"CalculationType,omitempty"`

	ConsumablesOfWagePerc *FieldDecimal `xml:"ConsumablesOfWagePerc,omitempty" json:"ConsumablesOfWagePerc,omitempty"`

	ConsumablesPercentageSmallPartsForOpt *FieldDecimal `xml:"ConsumablesPercentageSmallPartsForOpt,omitempty" json:"ConsumablesPercentageSmallPartsForOpt,omitempty"`

	IndicatorDataUsedAsPattern *FieldBoolean `xml:"IndicatorDataUsedAsPattern,omitempty" json:"IndicatorDataUsedAsPattern,omitempty"`

	IndicatorIsGlassCalculation *FieldBoolean `xml:"IndicatorIsGlassCalculation,omitempty" json:"IndicatorIsGlassCalculation,omitempty"`

	IndicatorGlassCalculationWithoutWork *FieldBoolean `xml:"IndicatorGlassCalculationWithoutWork,omitempty" json:"IndicatorGlassCalculationWithoutWork,omitempty"`

	IndicatorOptBodyShell *FieldBoolean `xml:"IndicatorOptBodyShell,omitempty" json:"IndicatorOptBodyShell,omitempty"`

	IndicatorTimeUnitsInHours *FieldBoolean `xml:"IndicatorTimeUnitsInHours,omitempty" json:"IndicatorTimeUnitsInHours,omitempty"`

	IndicatorWarrantyCalculation *FieldBoolean `xml:"IndicatorWarrantyCalculation,omitempty" json:"IndicatorWarrantyCalculation,omitempty"`

	IndicatorWithoutBodyCavityAndUnderseal *FieldBoolean `xml:"IndicatorWithoutBodyCavityAndUnderseal,omitempty" json:"IndicatorWithoutBodyCavityAndUnderseal,omitempty"`

	LevelOneE *FieldDecimal `xml:"LevelOneE,omitempty" json:"LevelOneE,omitempty"`

	LevelOneJ *FieldDecimal `xml:"LevelOneJ,omitempty" json:"LevelOneJ,omitempty"`

	LevelOneM *FieldDecimal `xml:"LevelOneM,omitempty" json:"LevelOneM,omitempty"`

	LevelThree *FieldDecimal `xml:"LevelThree,omitempty" json:"LevelThree,omitempty"`

	LevelTwo *FieldDecimal `xml:"LevelTwo,omitempty" json:"LevelTwo,omitempty"`

	MaterialConstantPartsIntegrated *FieldDecimal `xml:"MaterialConstantPartsIntegrated,omitempty" json:"MaterialConstantPartsIntegrated,omitempty"`

	MaterialConstantPartsRemoved *FieldDecimal `xml:"MaterialConstantPartsRemoved,omitempty" json:"MaterialConstantPartsRemoved,omitempty"`

	MaterialConstantByAmount *FieldDecimal `xml:"MaterialConstantByAmount,omitempty" json:"MaterialConstantByAmount,omitempty"`

	MaterialCostsPerUnit1CoatPainting *FieldDecimal `xml:"MaterialCostsPerUnit1CoatPainting,omitempty" json:"MaterialCostsPerUnit1CoatPainting,omitempty"`

	ProcurementCostsPercBodyShellForOpt *FieldDecimal `xml:"ProcurementCostsPercBodyShellForOpt,omitempty" json:"ProcurementCostsPercBodyShellForOpt,omitempty"`

	RentingCostsAlignmentBrackets *FieldDecimal `xml:"RentingCostsAlignmentBrackets,omitempty" json:"RentingCostsAlignmentBrackets,omitempty"`

	SparePartsDisposalCostsPerc *FieldDecimal `xml:"SparePartsDisposalCostsPerc,omitempty" json:"SparePartsDisposalCostsPerc,omitempty"`

	CalculationWithoutConstants *FieldBoolean `xml:"CalculationWithoutConstants,omitempty" json:"CalculationWithoutConstants,omitempty"`

	LacquerScratchResistant *FieldBoolean `xml:"LacquerScratchResistant,omitempty" json:"LacquerScratchResistant,omitempty"`

	PearlEffectSurcharge *FieldDecimal `xml:"PearlEffectSurcharge,omitempty" json:"PearlEffectSurcharge,omitempty"`

	ColorCount *FieldInteger `xml:"ColorCount,omitempty" json:"ColorCount,omitempty"`

	DMSCalculation *FieldBoolean `xml:"DMSCalculation,omitempty" json:"DMSCalculation,omitempty"`

	DMSPaintWPN *FieldString `xml:"DMSPaintWPN,omitempty" json:"DMSPaintWPN,omitempty"`

	ExternalProvider *FieldString `xml:"ExternalProvider,omitempty" json:"ExternalProvider,omitempty"`

	ExternalProviderStatus *FieldInteger `xml:"ExternalProviderStatus,omitempty" json:"ExternalProviderStatus,omitempty"`

	TotalPredamageAmount *FieldDecimal `xml:"TotalPredamageAmount,omitempty" json:"TotalPredamageAmount,omitempty"`

	TotalNFOAmount *FieldDecimal `xml:"TotalNFOAmount,omitempty" json:"TotalNFOAmount,omitempty"`

	TotalNFOPercent *FieldDecimal `xml:"TotalNFOPercent,omitempty" json:"TotalNFOPercent,omitempty"`

	TotalValueImprovementAmount *FieldDecimal `xml:"TotalValueImprovementAmount,omitempty" json:"TotalValueImprovementAmount,omitempty"`

	AdditionalCostsFlatAmount *FieldDecimal `xml:"AdditionalCostsFlatAmount,omitempty" json:"AdditionalCostsFlatAmount,omitempty"`

	AdditionalCostsPercent *FieldDecimal `xml:"AdditionalCostsPercent,omitempty" json:"AdditionalCostsPercent,omitempty"`

	DisposalCostsSparePartsPercentage *FieldDecimal `xml:"DisposalCostsSparePartsPercentage,omitempty" json:"DisposalCostsSparePartsPercentage,omitempty"`

	LacquerAdjustments *LacquerAdjustments `xml:"LacquerAdjustments,omitempty" json:"LacquerAdjustments,omitempty"`

	PartsSurchargeInProtocol *FieldBoolean `xml:"PartsSurchargeInProtocol,omitempty" json:"PartsSurchargeInProtocol,omitempty"`

	PartsSurchargeSeparated *FieldBoolean `xml:"PartsSurchargeSeparated,omitempty" json:"PartsSurchargeSeparated,omitempty"`

	AztFourLayerLacquerMode *FieldString `xml:"AztFourLayerLacquerMode,omitempty" json:"AztFourLayerLacquerMode,omitempty"`

	AztThreeLayerLacquerMode *FieldString `xml:"AztThreeLayerLacquerMode,omitempty" json:"AztThreeLayerLacquerMode,omitempty"`

	LacquerWaterBasedPaintSurcharge *FieldBoolean `xml:"LacquerWaterBasedPaintSurcharge,omitempty" json:"LacquerWaterBasedPaintSurcharge,omitempty"`
}

type RepairPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs RepairPosition"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	DescriptionId *FieldInteger `xml:"DescriptionId,omitempty" json:"DescriptionId,omitempty"`

	IsManualDescription *FieldBoolean `xml:"IsManualDescription,omitempty" json:"IsManualDescription,omitempty"`

	PartDescription *FieldString `xml:"PartDescription,omitempty" json:"PartDescription,omitempty"`

	ParentDATProcessId *FieldInteger `xml:"ParentDATProcessId,omitempty" json:"ParentDATProcessId,omitempty"`

	ParentRepairType *FieldString `xml:"ParentRepairType,omitempty" json:"ParentRepairType,omitempty"`

	ConstructionGroupId *FieldInteger `xml:"ConstructionGroupId,omitempty" json:"ConstructionGroupId,omitempty"`

	ConstructionGroup *FieldString `xml:"ConstructionGroup,omitempty" json:"ConstructionGroup,omitempty"`

	ConstructionGroupPolygon *FieldInteger `xml:"ConstructionGroupPolygon,omitempty" json:"ConstructionGroupPolygon,omitempty"`

	PositionEntryType *FieldString `xml:"PositionEntryType,omitempty" json:"PositionEntryType,omitempty"`

	CrossSeries *FieldBoolean `xml:"CrossSeries,omitempty" json:"CrossSeries,omitempty"`

	IsRepairExtension *FieldBoolean `xml:"IsRepairExtension,omitempty" json:"IsRepairExtension,omitempty"`

	IsForGlass *FieldBoolean `xml:"IsForGlass,omitempty" json:"IsForGlass,omitempty"`

	OptimizationHandling *FieldString `xml:"OptimizationHandling,omitempty" json:"OptimizationHandling,omitempty"`

	ConstructionType *FieldString `xml:"ConstructionType,omitempty" json:"ConstructionType,omitempty"`

	SparePartDiscount *FieldDecimal `xml:"SparePartDiscount,omitempty" json:"SparePartDiscount,omitempty"`

	SparePartPriceCorrection *FieldDecimal `xml:"SparePartPriceCorrection,omitempty" json:"SparePartPriceCorrection,omitempty"`

	SparePartNumber *FieldString `xml:"SparePartNumber,omitempty" json:"SparePartNumber,omitempty"`

	SparePartNumberOrigin *FieldString `xml:"SparePartNumberOrigin,omitempty" json:"SparePartNumberOrigin,omitempty"`

	SparePartNumberManufacturer *FieldString `xml:"SparePartNumberManufacturer,omitempty" json:"SparePartNumberManufacturer,omitempty"`

	SparePartPrice *FieldDecimal `xml:"SparePartPrice,omitempty" json:"SparePartPrice,omitempty"`

	SparePartAmount *FieldDecimal `xml:"SparePartAmount,omitempty" json:"SparePartAmount,omitempty"`

	SparePartUsed *FieldBoolean `xml:"SparePartUsed,omitempty" json:"SparePartUsed,omitempty"`

	SparePartSupplyDescription *FieldString `xml:"SparePartSupplyDescription,omitempty" json:"SparePartSupplyDescription,omitempty"`

	QuantityUnit *FieldString `xml:"QuantityUnit,omitempty" json:"QuantityUnit,omitempty"`

	WorkPositionNumber *FieldString `xml:"WorkPositionNumber,omitempty" json:"WorkPositionNumber,omitempty"`

	WorkPositionNumberOrigin *FieldString `xml:"WorkPositionNumberOrigin,omitempty" json:"WorkPositionNumberOrigin,omitempty"`

	WorkPositionNumberManufacturer *FieldString `xml:"WorkPositionNumberManufacturer,omitempty" json:"WorkPositionNumberManufacturer,omitempty"`

	WorkDifficultyLevel *FieldInteger `xml:"WorkDifficultyLevel,omitempty" json:"WorkDifficultyLevel,omitempty"`

	WorkType *FieldString `xml:"WorkType,omitempty" json:"WorkType,omitempty"`

	WorkTime *FieldDecimal `xml:"WorkTime,omitempty" json:"WorkTime,omitempty"`

	WorkLevel *FieldString `xml:"WorkLevel,omitempty" json:"WorkLevel,omitempty"`

	WorkPrice *FieldDecimal `xml:"WorkPrice,omitempty" json:"WorkPrice,omitempty"`

	WorkPriceOrigin *FieldString `xml:"WorkPriceOrigin,omitempty" json:"WorkPriceOrigin,omitempty"`

	WorkExtensionTime *FieldDecimal `xml:"WorkExtensionTime,omitempty" json:"WorkExtensionTime,omitempty"`

	WorkExtensionPrice *FieldDecimal `xml:"WorkExtensionPrice,omitempty" json:"WorkExtensionPrice,omitempty"`

	LacquerLevel *FieldString `xml:"LacquerLevel,omitempty" json:"LacquerLevel,omitempty"`

	LacquerLevelId *FieldInteger `xml:"LacquerLevelId,omitempty" json:"LacquerLevelId,omitempty"`

	LacquerLevelBaseId *FieldInteger `xml:"LacquerLevelBaseId,omitempty" json:"LacquerLevelBaseId,omitempty"`

	LacquerPercentage *FieldDecimal `xml:"LacquerPercentage,omitempty" json:"LacquerPercentage,omitempty"`

	LacquerCountSpotRepair *FieldInteger `xml:"LacquerCountSpotRepair,omitempty" json:"LacquerCountSpotRepair,omitempty"`

	LacquerScratchProofFinishTime *FieldDecimal `xml:"LacquerScratchProofFinishTime,omitempty" json:"LacquerScratchProofFinishTime,omitempty"`

	LacquerPrice *FieldDecimal `xml:"LacquerPrice,omitempty" json:"LacquerPrice,omitempty"`

	LacquerMaterialPrice *FieldDecimal `xml:"LacquerMaterialPrice,omitempty" json:"LacquerMaterialPrice,omitempty"`

	LacquerMaterialPriceOrigin *FieldString `xml:"LacquerMaterialPriceOrigin,omitempty" json:"LacquerMaterialPriceOrigin,omitempty"`

	LacquerWorkPrice *FieldDecimal `xml:"LacquerWorkPrice,omitempty" json:"LacquerWorkPrice,omitempty"`

	LacquerWorkPriceOrigin *FieldString `xml:"LacquerWorkPriceOrigin,omitempty" json:"LacquerWorkPriceOrigin,omitempty"`

	LacquerMaterialUnitsNumber *FieldInteger `xml:"LacquerMaterialUnitsNumber,omitempty" json:"LacquerMaterialUnitsNumber,omitempty"`

	LacquerBlending *FieldBoolean `xml:"LacquerBlending,omitempty" json:"LacquerBlending,omitempty"`

	PlasticDamageSpotsEasy *FieldInteger `xml:"PlasticDamageSpotsEasy,omitempty" json:"PlasticDamageSpotsEasy,omitempty"`

	PlasticDamageSpotsAverage *FieldInteger `xml:"PlasticDamageSpotsAverage,omitempty" json:"PlasticDamageSpotsAverage,omitempty"`

	PlasticDamageSpotsHard *FieldInteger `xml:"PlasticDamageSpotsHard,omitempty" json:"PlasticDamageSpotsHard,omitempty"`

	OverhaulLocation *FieldString `xml:"OverhaulLocation,omitempty" json:"OverhaulLocation,omitempty"`

	DentsCount *FieldInteger `xml:"DentsCount,omitempty" json:"DentsCount,omitempty"`

	DentsOver20mmCount *FieldInteger `xml:"DentsOver20mmCount,omitempty" json:"DentsOver20mmCount,omitempty"`

	DentsSize *FieldInteger `xml:"DentsSize,omitempty" json:"DentsSize,omitempty"`

	DentsPartOrientation *FieldString `xml:"DentsPartOrientation,omitempty" json:"DentsPartOrientation,omitempty"`

	DentsFlatrate *FieldDecimal `xml:"DentsFlatrate,omitempty" json:"DentsFlatrate,omitempty"`

	DentsCalculationMethod *FieldString `xml:"DentsCalculationMethod,omitempty" json:"DentsCalculationMethod,omitempty"`

	DentsCalculationMethodN *FieldString `xml:"DentsCalculationMethodN,omitempty" json:"DentsCalculationMethodN,omitempty"`

	DentsWithFinishing *FieldBoolean `xml:"DentsWithFinishing,omitempty" json:"DentsWithFinishing,omitempty"`

	DentsWithSetupTime *FieldBoolean `xml:"DentsWithSetupTime,omitempty" json:"DentsWithSetupTime,omitempty"`

	DentsWithAddLightMetals *FieldBoolean `xml:"DentsWithAddLightMetals,omitempty" json:"DentsWithAddLightMetals,omitempty"`

	DentsPrePressTime *FieldDecimal `xml:"DentsPrePressTime,omitempty" json:"DentsPrePressTime,omitempty"`

	DentsOutOfReach *FieldBoolean `xml:"DentsOutOfReach,omitempty" json:"DentsOutOfReach,omitempty"`

	IsAdditionalLM *FieldBoolean `xml:"IsAdditionalLM,omitempty" json:"IsAdditionalLM,omitempty"`

	RepairVariant *FieldString `xml:"RepairVariant,omitempty" json:"RepairVariant,omitempty"`

	PreDamage *FieldBoolean `xml:"PreDamage,omitempty" json:"PreDamage,omitempty"`

	GlassDamageSpots *FieldInteger `xml:"GlassDamageSpots,omitempty" json:"GlassDamageSpots,omitempty"`

	DentNumberLess *FieldInteger `xml:"DentNumberLess,omitempty" json:"DentNumberLess,omitempty"`

	DentNumberMore *FieldInteger `xml:"DentNumberMore,omitempty" json:"DentNumberMore,omitempty"`

	AlloyLM *FieldBoolean `xml:"AlloyLM,omitempty" json:"AlloyLM,omitempty"`

	LargeScale *FieldBoolean `xml:"LargeScale,omitempty" json:"LargeScale,omitempty"`

	AdhesiveTechnologyScale *FieldBoolean `xml:"AdhesiveTechnologyScale,omitempty" json:"AdhesiveTechnologyScale,omitempty"`

	SetupTime *FieldInteger `xml:"SetupTime,omitempty" json:"SetupTime,omitempty"`

	BlockWageFlatPrice *FieldInteger `xml:"BlockWageFlatPrice,omitempty" json:"BlockWageFlatPrice,omitempty"`

	AdditionLM *FieldBoolean `xml:"AdditionLM,omitempty" json:"AdditionLM,omitempty"`

	WorkCompleted *FieldBoolean `xml:"WorkCompleted,omitempty" json:"WorkCompleted,omitempty"`

	ContainMicroDents *FieldBoolean `xml:"ContainMicroDents,omitempty" json:"ContainMicroDents,omitempty"`

	NumDents20 *FieldInteger `xml:"NumDents20,omitempty" json:"NumDents20,omitempty"`

	NumDents30 *FieldInteger `xml:"NumDents30,omitempty" json:"NumDents30,omitempty"`

	NumDents45 *FieldInteger `xml:"NumDents45,omitempty" json:"NumDents45,omitempty"`

	WorkTime20 *FieldInteger `xml:"WorkTime20,omitempty" json:"WorkTime20,omitempty"`

	WorkTime30 *FieldInteger `xml:"WorkTime30,omitempty" json:"WorkTime30,omitempty"`

	WorkTime45 *FieldInteger `xml:"WorkTime45,omitempty" json:"WorkTime45,omitempty"`

	HasAluminium *FieldBoolean `xml:"HasAluminium,omitempty" json:"HasAluminium,omitempty"`

	IsDomusPart *FieldBoolean `xml:"IsDomusPart,omitempty" json:"IsDomusPart,omitempty"`

	Position *FieldString `xml:"Position,omitempty" json:"Position,omitempty"`

	Apos2 *FieldString `xml:"Apos2,omitempty" json:"Apos2,omitempty"`

	Apos2MainWork *FieldString `xml:"Apos2MainWork,omitempty" json:"Apos2MainWork,omitempty"`

	ConstructionGroupMainType *FieldInteger `xml:"ConstructionGroupMainType,omitempty" json:"ConstructionGroupMainType,omitempty"`

	ConstructionGroupManufacturer *FieldInteger `xml:"ConstructionGroupManufacturer,omitempty" json:"ConstructionGroupManufacturer,omitempty"`

	DVNGroupPositionNumber *FieldInteger `xml:"DVNGroupPositionNumber,omitempty" json:"DVNGroupPositionNumber,omitempty"`

	Measure *FieldString `xml:"Measure,omitempty" json:"Measure,omitempty"`

	RepairVector *FieldString `xml:"RepairVector,omitempty" json:"RepairVector,omitempty"`

	SeqNo *FieldDecimal `xml:"SeqNo,omitempty" json:"SeqNo,omitempty"`

	SparePartDiscountIndicator *FieldCharacter `xml:"SparePartDiscountIndicator,omitempty" json:"SparePartDiscountIndicator,omitempty"`

	WearRus *MTPLWearRus `xml:"WearRus,omitempty" json:"WearRus,omitempty"`

	Finishtype *FieldString `xml:"Finishtype,omitempty" json:"Finishtype,omitempty"`

	LacquerDifficulty *FieldInteger `xml:"LacquerDifficulty,omitempty" json:"LacquerDifficulty,omitempty"`

	GrupoPlastico *FieldString `xml:"GrupoPlastico,omitempty" json:"GrupoPlastico,omitempty"`

	InputSPD *FieldInteger `xml:"InputSPD,omitempty" json:"InputSPD,omitempty"`

	InputLP *FieldInteger `xml:"InputLP,omitempty" json:"InputLP,omitempty"`

	InputSDE *FieldInteger `xml:"InputSDE,omitempty" json:"InputSDE,omitempty"`

	InputSDI *FieldInteger `xml:"InputSDI,omitempty" json:"InputSDI,omitempty"`

	InputL *FieldInteger `xml:"InputL,omitempty" json:"InputL,omitempty"`

	PiezasPO *FieldString `xml:"PiezasPO,omitempty" json:"PiezasPO,omitempty"`

	PiezasOP *FieldString `xml:"PiezasOP,omitempty" json:"PiezasOP,omitempty"`

	Bulge_area *FieldInteger `xml:"Bulge_area,omitempty" json:"Bulge_area,omitempty"`

	Bulge_area_difficulty_factor *FieldInteger `xml:"Bulge_area_difficulty_factor,omitempty" json:"Bulge_area_difficulty_factor,omitempty"`

	DMSFlag *FieldString `xml:"DMSFlag,omitempty" json:"DMSFlag,omitempty"`

	PartCodeItaly *FieldString `xml:"PartCodeItaly,omitempty" json:"PartCodeItaly,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	WorkTimeItaly *FieldDecimal `xml:"WorkTimeItaly,omitempty" json:"WorkTimeItaly,omitempty"`

	WorkLevelItaly *FieldString `xml:"WorkLevelItaly,omitempty" json:"WorkLevelItaly,omitempty"`

	WorkManualInput *FieldString `xml:"WorkManualInput,omitempty" json:"WorkManualInput,omitempty"`

	NFOPercentage *FieldDecimal `xml:"NFOPercentage,omitempty" json:"NFOPercentage,omitempty"`

	PredamageAmount *FieldDecimal `xml:"PredamageAmount,omitempty" json:"PredamageAmount,omitempty"`

	PredamagePercentage *FieldDecimal `xml:"PredamagePercentage,omitempty" json:"PredamagePercentage,omitempty"`

	AdhesiveMethod *FieldBoolean `xml:"AdhesiveMethod,omitempty" json:"AdhesiveMethod,omitempty"`

	SparePartDiscountType *FieldCharacter `xml:"SparePartDiscountType,omitempty" json:"SparePartDiscountType,omitempty"`

	SparePartDiscountAsterisk *FieldCharacter `xml:"SparePartDiscountAsterisk,omitempty" json:"SparePartDiscountAsterisk,omitempty"`

	SortOrderNumber *FieldInteger `xml:"SortOrderNumber,omitempty" json:"SortOrderNumber,omitempty"`

	Length *FieldDecimal `xml:"Length,omitempty" json:"Length,omitempty"`

	Width *FieldDecimal `xml:"Width,omitempty" json:"Width,omitempty"`

	Predefined *FieldBoolean `xml:"Predefined,omitempty" json:"Predefined,omitempty"`

	Manufacturer *FieldString `xml:"Manufacturer,omitempty" json:"Manufacturer,omitempty"`

	Dimension *FieldString `xml:"Dimension,omitempty" json:"Dimension,omitempty"`

	PositionExecutionFlag *FieldString `xml:"PositionExecutionFlag,omitempty" json:"PositionExecutionFlag,omitempty"`

	PositionGoodwillPartDescription *FieldString `xml:"PositionGoodwillPartDescription,omitempty" json:"PositionGoodwillPartDescription,omitempty"`

	PositionEntryTypeKey *FieldInteger `xml:"PositionEntryTypeKey,omitempty" json:"PositionEntryTypeKey,omitempty"`

	WorkIndication *FieldInteger `xml:"WorkIndication,omitempty" json:"WorkIndication,omitempty"`

	WithSparePart *FieldBoolean `xml:"WithSparePart,omitempty" json:"WithSparePart,omitempty"`

	FastTrackOrigin *FieldString `xml:"FastTrackOrigin,omitempty" json:"FastTrackOrigin,omitempty"`

	ParkingDentPositions *ParkingDentPositions `xml:"ParkingDentPositions,omitempty" json:"ParkingDentPositions,omitempty"`

	IflPositionData *IflPositionData `xml:"IflPositionData,omitempty" json:"IflPositionData,omitempty"`

	ReadError *FieldBoolean `xml:"ReadError,omitempty" json:"ReadError,omitempty"`

	ExternalId *FieldString `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	TaxNeutral *FieldBoolean `xml:"TaxNeutral,omitempty" json:"TaxNeutral,omitempty"`

	DamageSegment *FieldInteger `xml:"DamageSegment,omitempty" json:"DamageSegment,omitempty"`
}

type RepairPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs RepairPositions"`

	RepairPosition []*RepairPosition `xml:"RepairPosition,omitempty" json:"RepairPosition,omitempty"`
}

type RepairProcess struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs RepairProcess"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`
}

type RepairWages struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs RepairWages"`

	WageUnitsPerHour *FieldInteger `xml:"WageUnitsPerHour,omitempty" json:"WageUnitsPerHour,omitempty"`

	Mechanic1 *FieldDecimal `xml:"Mechanic1,omitempty" json:"Mechanic1,omitempty"`

	Mechanic2 *FieldDecimal `xml:"Mechanic2,omitempty" json:"Mechanic2,omitempty"`

	Mechanic3 *FieldDecimal `xml:"Mechanic3,omitempty" json:"Mechanic3,omitempty"`

	Mechanic4 *FieldDecimal `xml:"Mechanic4,omitempty" json:"Mechanic4,omitempty"`

	CarBody1 *FieldDecimal `xml:"CarBody1,omitempty" json:"CarBody1,omitempty"`

	CarBody2 *FieldDecimal `xml:"CarBody2,omitempty" json:"CarBody2,omitempty"`

	CarBody3 *FieldDecimal `xml:"CarBody3,omitempty" json:"CarBody3,omitempty"`

	CarBody4 *FieldDecimal `xml:"CarBody4,omitempty" json:"CarBody4,omitempty"`

	Electric1 *FieldDecimal `xml:"Electric1,omitempty" json:"Electric1,omitempty"`

	Electric2 *FieldDecimal `xml:"Electric2,omitempty" json:"Electric2,omitempty"`

	Electric3 *FieldDecimal `xml:"Electric3,omitempty" json:"Electric3,omitempty"`

	Electric4 *FieldDecimal `xml:"Electric4,omitempty" json:"Electric4,omitempty"`

	Interior1 *FieldDecimal `xml:"Interior1,omitempty" json:"Interior1,omitempty"`

	Interior2 *FieldDecimal `xml:"Interior2,omitempty" json:"Interior2,omitempty"`

	Interior3 *FieldDecimal `xml:"Interior3,omitempty" json:"Interior3,omitempty"`

	Interior4 *FieldDecimal `xml:"Interior4,omitempty" json:"Interior4,omitempty"`

	Lacquer *FieldDecimal `xml:"Lacquer,omitempty" json:"Lacquer,omitempty"`

	LacquerWithMaterial *FieldDecimal `xml:"LacquerWithMaterial,omitempty" json:"LacquerWithMaterial,omitempty"`

	LacquerFree *FieldDecimal `xml:"LacquerFree,omitempty" json:"LacquerFree,omitempty"`

	Dents *FieldDecimal `xml:"Dents,omitempty" json:"Dents,omitempty"`

	Comprehensive1 *FieldDecimal `xml:"Comprehensive1,omitempty" json:"Comprehensive1,omitempty"`

	Comprehensive2 *FieldDecimal `xml:"Comprehensive2,omitempty" json:"Comprehensive2,omitempty"`

	Comprehensive3 *FieldDecimal `xml:"Comprehensive3,omitempty" json:"Comprehensive3,omitempty"`

	Comprehensive4 *FieldDecimal `xml:"Comprehensive4,omitempty" json:"Comprehensive4,omitempty"`
}

type RunningExpenses struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs RunningExpenses"`

	LiabilityInsuranceTypeClass *FieldString2 `xml:"LiabilityInsuranceTypeClass,omitempty" json:"LiabilityInsuranceTypeClass,omitempty"`

	DatLiabilityInsuranceTypeClass *FieldString2 `xml:"DatLiabilityInsuranceTypeClass,omitempty" json:"DatLiabilityInsuranceTypeClass,omitempty"`

	PartialCascoTypeClass *FieldString2 `xml:"PartialCascoTypeClass,omitempty" json:"PartialCascoTypeClass,omitempty"`

	DatPartialCascoTypeClass *FieldString2 `xml:"DatPartialCascoTypeClass,omitempty" json:"DatPartialCascoTypeClass,omitempty"`

	ComprCascoTypeClass *FieldString2 `xml:"ComprCascoTypeClass,omitempty" json:"ComprCascoTypeClass,omitempty"`

	DatComprCascoTypeClass *FieldString2 `xml:"DatComprCascoTypeClass,omitempty" json:"DatComprCascoTypeClass,omitempty"`

	TaxationDescription *FieldString `xml:"TaxationDescription,omitempty" json:"TaxationDescription,omitempty"`

	TaxPerYear *FieldDecimal `xml:"TaxPerYear,omitempty" json:"TaxPerYear,omitempty"`

	DatTaxPerYear *FieldDecimal `xml:"DatTaxPerYear,omitempty" json:"DatTaxPerYear,omitempty"`

	TaxPer100ccm *FieldDecimal `xml:"TaxPer100ccm,omitempty" json:"TaxPer100ccm,omitempty"`

	DatTaxPer100ccm *FieldDecimal `xml:"DatTaxPer100ccm,omitempty" json:"DatTaxPer100ccm,omitempty"`
}

type Sale struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Sale"`

	CustomerId *FieldString10 `xml:"CustomerId,omitempty" json:"CustomerId,omitempty"`

	SellerId *FieldString10 `xml:"SellerId,omitempty" json:"SellerId,omitempty"`

	OrderDate *FieldDate `xml:"OrderDate,omitempty" json:"OrderDate,omitempty"`

	BusinessType *FieldString `xml:"BusinessType,omitempty" json:"BusinessType,omitempty"`

	VehicleGroup *FieldString `xml:"VehicleGroup,omitempty" json:"VehicleGroup,omitempty"`

	SalesPriceNet *FieldDecimal `xml:"SalesPriceNet,omitempty" json:"SalesPriceNet,omitempty"`

	SalesPriceGross *FieldDecimal `xml:"SalesPriceGross,omitempty" json:"SalesPriceGross,omitempty"`

	PurchasingPriceNet *FieldDecimal `xml:"PurchasingPriceNet,omitempty" json:"PurchasingPriceNet,omitempty"`

	PurchasingPriceGross *FieldDecimal `xml:"PurchasingPriceGross,omitempty" json:"PurchasingPriceGross,omitempty"`

	DeliveryDate *FieldDate `xml:"DeliveryDate,omitempty" json:"DeliveryDate,omitempty"`

	MileageVehicle *FieldInteger `xml:"MileageVehicle,omitempty" json:"MileageVehicle,omitempty"`

	MileageOdometer *FieldInteger `xml:"MileageOdometer,omitempty" json:"MileageOdometer,omitempty"`

	LicenseNumber *FieldString `xml:"LicenseNumber,omitempty" json:"LicenseNumber,omitempty"`

	RegistrationNumber *FieldString `xml:"RegistrationNumber,omitempty" json:"RegistrationNumber,omitempty"`

	SalesDetails *FieldString `xml:"SalesDetails,omitempty" json:"SalesDetails,omitempty"`

	PaymentAgreements *FieldString `xml:"PaymentAgreements,omitempty" json:"PaymentAgreements,omitempty"`

	OtherAgreements *FieldString `xml:"OtherAgreements,omitempty" json:"OtherAgreements,omitempty"`

	RenewVehicleInspectionDate *FieldDate `xml:"RenewVehicleInspectionDate,omitempty" json:"RenewVehicleInspectionDate,omitempty"`

	ProcedureName *FieldString `xml:"ProcedureName,omitempty" json:"ProcedureName,omitempty"`

	Vin *FieldString `xml:"Vin,omitempty" json:"Vin,omitempty"`

	Purchaser *FieldString `xml:"Purchaser,omitempty" json:"Purchaser,omitempty"`

	LicenseNumberPurchase *FieldString `xml:"LicenseNumberPurchase,omitempty" json:"LicenseNumberPurchase,omitempty"`

	AcceptanceDate *FieldDate `xml:"AcceptanceDate,omitempty" json:"AcceptanceDate,omitempty"`

	Seller *FieldString `xml:"Seller,omitempty" json:"Seller,omitempty"`

	PaymentType *FieldString `xml:"PaymentType,omitempty" json:"PaymentType,omitempty"`

	SalesType *FieldString `xml:"SalesType,omitempty" json:"SalesType,omitempty"`

	PayementAgreements *FieldString `xml:"PayementAgreements,omitempty" json:"PayementAgreements,omitempty"`

	RenewMot *FieldString `xml:"RenewMot,omitempty" json:"RenewMot,omitempty"`

	ResidualWarrantyType *FieldString `xml:"ResidualWarrantyType,omitempty" json:"ResidualWarrantyType,omitempty"`

	ResidualWarrantyUntil *FieldDate `xml:"ResidualWarrantyUntil,omitempty" json:"ResidualWarrantyUntil,omitempty"`

	ResidualWarrantyValueNet *FieldDecimal `xml:"ResidualWarrantyValueNet,omitempty" json:"ResidualWarrantyValueNet,omitempty"`

	ResidualWarrantyValueGross *FieldDecimal `xml:"ResidualWarrantyValueGross,omitempty" json:"ResidualWarrantyValueGross,omitempty"`

	Provider *FieldString `xml:"Provider,omitempty" json:"Provider,omitempty"`

	RepaymentTerm *FieldInteger `xml:"RepaymentTerm,omitempty" json:"RepaymentTerm,omitempty"`

	StartDate *FieldDate `xml:"StartDate,omitempty" json:"StartDate,omitempty"`

	EndDate *FieldDate `xml:"EndDate,omitempty" json:"EndDate,omitempty"`

	WarrantyNumber *FieldString `xml:"WarrantyNumber,omitempty" json:"WarrantyNumber,omitempty"`

	WarrantyAmountNet *FieldDecimal `xml:"WarrantyAmountNet,omitempty" json:"WarrantyAmountNet,omitempty"`

	WarrantyAmountGross *FieldDecimal `xml:"WarrantyAmountGross,omitempty" json:"WarrantyAmountGross,omitempty"`

	NextEmissionsTestDate *FieldDate `xml:"NextEmissionsTestDate,omitempty" json:"NextEmissionsTestDate,omitempty"`

	NextVehicleInspectionDate *FieldDate `xml:"NextVehicleInspectionDate,omitempty" json:"NextVehicleInspectionDate,omitempty"`

	RenewEmissionVehicleInspectionCheck *FieldBoolean `xml:"RenewEmissionVehicleInspectionCheck,omitempty" json:"RenewEmissionVehicleInspectionCheck,omitempty"`

	AgreementOnDeviationsCheck *FieldBoolean `xml:"AgreementOnDeviationsCheck,omitempty" json:"AgreementOnDeviationsCheck,omitempty"`

	ShorteningLimitationPeriodCheck *FieldBoolean `xml:"ShorteningLimitationPeriodCheck,omitempty" json:"ShorteningLimitationPeriodCheck,omitempty"`

	ExclusionOfObligationToUpdateCheck *FieldBoolean `xml:"ExclusionOfObligationToUpdateCheck,omitempty" json:"ExclusionOfObligationToUpdateCheck,omitempty"`

	UpdateInformationCheck *FieldBoolean `xml:"UpdateInformationCheck,omitempty" json:"UpdateInformationCheck,omitempty"`

	InfoReqUpdatesAndInstallation *FieldString `xml:"InfoReqUpdatesAndInstallation,omitempty" json:"InfoReqUpdatesAndInstallation,omitempty"`

	Labelling *Labelling `xml:"Labelling,omitempty" json:"Labelling,omitempty"`

	AgreementOnDeviationsList struct {
		AgreementOnDeviationItem []*AgreementOnDeviationItem `xml:"AgreementOnDeviationItem,omitempty" json:"AgreementOnDeviationItem,omitempty"`
	} `xml:"AgreementOnDeviationsList,omitempty" json:"AgreementOnDeviationsList,omitempty"`
}

type SalesOffer struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SalesOffer"`

	SalesPriceNet *FieldDecimal `xml:"SalesPriceNet,omitempty" json:"SalesPriceNet,omitempty"`

	SalesPriceGross *FieldDecimal `xml:"SalesPriceGross,omitempty" json:"SalesPriceGross,omitempty"`

	SalesOfferNumber *FieldString `xml:"SalesOfferNumber,omitempty" json:"SalesOfferNumber,omitempty"`

	OfferDate *FieldDate `xml:"OfferDate,omitempty" json:"OfferDate,omitempty"`

	ResubmissionDate *FieldDate `xml:"ResubmissionDate,omitempty" json:"ResubmissionDate,omitempty"`

	GuaranteeDate *FieldDate `xml:"GuaranteeDate,omitempty" json:"GuaranteeDate,omitempty"`

	OfferedBy *FieldString `xml:"OfferedBy,omitempty" json:"OfferedBy,omitempty"`

	RenewMot *FieldString `xml:"RenewMot,omitempty" json:"RenewMot,omitempty"`

	Titles *FieldString `xml:"Titles,omitempty" json:"Titles,omitempty"`

	Comments *FieldString `xml:"Comments,omitempty" json:"Comments,omitempty"`

	Agreements *FieldString `xml:"Agreements,omitempty" json:"Agreements,omitempty"`

	NextEmissionsTestDate *FieldDate `xml:"NextEmissionsTestDate,omitempty" json:"NextEmissionsTestDate,omitempty"`

	NextVehicleInspectionDate *FieldDate `xml:"NextVehicleInspectionDate,omitempty" json:"NextVehicleInspectionDate,omitempty"`

	RenewEmissionVehicleInspectionCheck *FieldBoolean `xml:"RenewEmissionVehicleInspectionCheck,omitempty" json:"RenewEmissionVehicleInspectionCheck,omitempty"`
}

type SalesPreparation struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SalesPreparation"`

	MarketplaceImageList *MarketplaceImageList `xml:"MarketplaceImageList,omitempty" json:"MarketplaceImageList,omitempty"`
}

type SettingsParameter struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SettingsParameter"`

	Name string `xml:"name,attr,omitempty" json:"name,omitempty"`

	Key string `xml:"key,attr,omitempty" json:"key,omitempty"`

	Value string `xml:"value,attr,omitempty" json:"value,omitempty"`

	Level string `xml:"level,attr,omitempty" json:"level,omitempty"`
}

type SettingsParameters struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SettingsParameters"`

	SettingsParameter []*SettingsParameter `xml:"SettingsParameter,omitempty" json:"SettingsParameter,omitempty"`
}

type SparePartHistoryPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SparePartHistoryPosition"`

	PartNumber *FieldString `xml:"PartNumber,omitempty" json:"PartNumber,omitempty"`

	LastUPE float64 `xml:"LastUPE,omitempty" json:"LastUPE,omitempty"`

	LastUPEDate *FieldDate `xml:"LastUPEDate,omitempty" json:"LastUPEDate,omitempty"`
}

type SparePartPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SparePartPosition"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	DATProcessIdName *FieldString `xml:"DATProcessIdName,omitempty" json:"DATProcessIdName,omitempty"`

	PartNumber *FieldString `xml:"PartNumber,omitempty" json:"PartNumber,omitempty"`

	PartNumberManufacturer *FieldString `xml:"PartNumberManufacturer,omitempty" json:"PartNumberManufacturer,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	LastUPE float64 `xml:"LastUPE,omitempty" json:"LastUPE,omitempty"`

	LastUPEDate *FieldDateTime `xml:"LastUPEDate,omitempty" json:"LastUPEDate,omitempty"`

	SecondtoLastUPE float64 `xml:"SecondtoLastUPE,omitempty" json:"SecondtoLastUPE,omitempty"`

	SecondtoLastUPEDate *FieldDateTime `xml:"SecondtoLastUPEDate,omitempty" json:"SecondtoLastUPEDate,omitempty"`

	ThirdtoLastUPE float64 `xml:"ThirdtoLastUPE,omitempty" json:"ThirdtoLastUPE,omitempty"`

	ThirdtoLastUPEDate *FieldDateTime `xml:"ThirdtoLastUPEDate,omitempty" json:"ThirdtoLastUPEDate,omitempty"`

	FourthtoLastUPE float64 `xml:"FourthtoLastUPE,omitempty" json:"FourthtoLastUPE,omitempty"`

	FourthtoLastUPEDate *FieldDateTime `xml:"FourthtoLastUPEDate,omitempty" json:"FourthtoLastUPEDate,omitempty"`

	EquipmentPositions *EquipSequence `xml:"EquipmentPositions,omitempty" json:"EquipmentPositions,omitempty"`

	Orderable *FieldBoolean `xml:"Orderable,omitempty" json:"Orderable,omitempty"`

	WorkTimeMin float64 `xml:"WorkTimeMin,omitempty" json:"WorkTimeMin,omitempty"`

	WorkTimeMax float64 `xml:"WorkTimeMax,omitempty" json:"WorkTimeMax,omitempty"`

	SparePartHistoryPositions *SpHistPositionsSeq `xml:"SparePartHistoryPositions,omitempty" json:"SparePartHistoryPositions,omitempty"`

	RepairSetProcessId int32 `xml:"RepairSetProcessId,omitempty" json:"RepairSetProcessId,omitempty"`
}

type SparePartPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SparePartPositions"`

	SparePartPosition []*SparePartPosition `xml:"SparePartPosition,omitempty" json:"SparePartPosition,omitempty"`
}

type SpotRepairPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SpotRepairPositions"`

	SpotRepairPosition []*LacquerPosition `xml:"SpotRepairPosition,omitempty" json:"SpotRepairPosition,omitempty"`
}

type SummariesItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SummariesItaly"`

	BaseSummaryItaly *BaseSummaryItaly `xml:"BaseSummaryItaly,omitempty" json:"BaseSummaryItaly,omitempty"`

	LacquerSummaryItaly *LacquerSummaryItaly `xml:"LacquerSummaryItaly,omitempty" json:"LacquerSummaryItaly,omitempty"`

	WorkSummaryItaly *WorkSummaryItaly `xml:"WorkSummaryItaly,omitempty" json:"WorkSummaryItaly,omitempty"`

	TotalSummaryItaly *TotalSummaryItaly `xml:"TotalSummaryItaly,omitempty" json:"TotalSummaryItaly,omitempty"`
}

type SuppressedPositionsProtocol struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SuppressedPositionsProtocol"`

	ProtocolEntry []*ProtocolEntry `xml:"ProtocolEntry,omitempty" json:"ProtocolEntry,omitempty"`
}

type SurchargeSetting struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SurchargeSetting"`

	Id *FieldString `xml:"id,omitempty" json:"id,omitempty"`

	Country *FieldString `xml:"country,omitempty" json:"country,omitempty"`

	Designation *FieldString `xml:"designation,omitempty" json:"designation,omitempty"`

	WorkingType *FieldDecimal `xml:"workingType,omitempty" json:"workingType,omitempty"`

	PriceSTD *FieldDecimal `xml:"priceSTD,omitempty" json:"priceSTD,omitempty"`

	PriceAE *FieldDecimal `xml:"priceAE,omitempty" json:"priceAE,omitempty"`
}

type SurchargeSettings struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs SurchargeSettings"`

	SurchargeSetting []*SurchargeSetting `xml:"SurchargeSetting,omitempty" json:"SurchargeSetting,omitempty"`
}

type TargetMarketplaceFeatureItem struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TargetMarketplaceFeatureItem"`

	TMName *FieldString `xml:"TMName,omitempty" json:"TMName,omitempty"`

	TMType string `xml:"TMType,omitempty" json:"TMType,omitempty"`

	TMCheckbox bool `xml:"TMCheckbox,omitempty" json:"TMCheckbox,omitempty"`

	TMFromDate soap.XSDDate `xml:"TMFromDate,omitempty" json:"TMFromDate,omitempty"`

	TMToDate soap.XSDDate `xml:"TMToDate,omitempty" json:"TMToDate,omitempty"`
}

type TechInfo struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TechInfo"`

	FillingQuantities *FillingQuantities `xml:"FillingQuantities,omitempty" json:"FillingQuantities,omitempty"`

	StructureType *FieldString `xml:"StructureType,omitempty" json:"StructureType,omitempty"`

	StructureDescription *FieldString `xml:"StructureDescription,omitempty" json:"StructureDescription,omitempty"`

	CabineStructureType *FieldString `xml:"CabineStructureType,omitempty" json:"CabineStructureType,omitempty"`

	CabineStructureDescription *FieldString1000 `xml:"CabineStructureDescription,omitempty" json:"CabineStructureDescription,omitempty"`

	UpperBodyStructureType *FieldString `xml:"UpperBodyStructureType,omitempty" json:"UpperBodyStructureType,omitempty"`

	UpperBodyStructureDescription *FieldString `xml:"UpperBodyStructureDescription,omitempty" json:"UpperBodyStructureDescription,omitempty"`

	UpperBodyStructureDescriptionUser *FieldString1000 `xml:"UpperBodyStructureDescriptionUser,omitempty" json:"UpperBodyStructureDescriptionUser,omitempty"`

	UpperBodyStructureAndVersion *FieldString `xml:"UpperBodyStructureAndVersion,omitempty" json:"UpperBodyStructureAndVersion,omitempty"`

	CountOfAxles *FieldInteger `xml:"CountOfAxles,omitempty" json:"CountOfAxles,omitempty"`

	DatCountOfAxles *FieldInteger `xml:"DatCountOfAxles,omitempty" json:"DatCountOfAxles,omitempty"`

	CountOfDrivedAxles *FieldInteger `xml:"CountOfDrivedAxles,omitempty" json:"CountOfDrivedAxles,omitempty"`

	DatCountOfDrivedAxles *FieldInteger `xml:"DatCountOfDrivedAxles,omitempty" json:"DatCountOfDrivedAxles,omitempty"`

	WheelBase *FieldInteger `xml:"WheelBase,omitempty" json:"WheelBase,omitempty"`

	DatWheelBase *FieldInteger `xml:"DatWheelBase,omitempty" json:"DatWheelBase,omitempty"`

	WheelBase2 *FieldInteger `xml:"WheelBase2,omitempty" json:"WheelBase2,omitempty"`

	AxleLoadFront *FieldInteger `xml:"AxleLoadFront,omitempty" json:"AxleLoadFront,omitempty"`

	AxleLoadMiddle *FieldInteger `xml:"AxleLoadMiddle,omitempty" json:"AxleLoadMiddle,omitempty"`

	AxleLoadBack *FieldInteger `xml:"AxleLoadBack,omitempty" json:"AxleLoadBack,omitempty"`

	TonnageClass *FieldString2 `xml:"TonnageClass,omitempty" json:"TonnageClass,omitempty"`

	Length *FieldInteger `xml:"Length,omitempty" json:"Length,omitempty"`

	DatLength *FieldInteger `xml:"DatLength,omitempty" json:"DatLength,omitempty"`

	Width *FieldInteger `xml:"Width,omitempty" json:"Width,omitempty"`

	DatWidth *FieldInteger `xml:"DatWidth,omitempty" json:"DatWidth,omitempty"`

	Height *FieldInteger `xml:"Height,omitempty" json:"Height,omitempty"`

	DatHeight *FieldInteger `xml:"DatHeight,omitempty" json:"DatHeight,omitempty"`

	RoofLoad *FieldInteger `xml:"RoofLoad,omitempty" json:"RoofLoad,omitempty"`

	DatRoofLoad *FieldInteger `xml:"DatRoofLoad,omitempty" json:"DatRoofLoad,omitempty"`

	TrailerLoadBraked *FieldInteger `xml:"TrailerLoadBraked,omitempty" json:"TrailerLoadBraked,omitempty"`

	DatTrailerLoadBraked *FieldInteger `xml:"DatTrailerLoadBraked,omitempty" json:"DatTrailerLoadBraked,omitempty"`

	TrailerLoadUnbraked *FieldInteger `xml:"TrailerLoadUnbraked,omitempty" json:"TrailerLoadUnbraked,omitempty"`

	DatTrailerLoadUnbraked *FieldInteger `xml:"DatTrailerLoadUnbraked,omitempty" json:"DatTrailerLoadUnbraked,omitempty"`

	VehicleSeats *FieldInteger `xml:"VehicleSeats,omitempty" json:"VehicleSeats,omitempty"`

	DatVehicleSeats *FieldInteger `xml:"DatVehicleSeats,omitempty" json:"DatVehicleSeats,omitempty"`

	VehicleDoors *FieldInteger `xml:"VehicleDoors,omitempty" json:"VehicleDoors,omitempty"`

	DatVehicleDoors *FieldInteger `xml:"DatVehicleDoors,omitempty" json:"DatVehicleDoors,omitempty"`

	CountOfAirbags *FieldInteger `xml:"CountOfAirbags,omitempty" json:"CountOfAirbags,omitempty"`

	DatCountOfAirbags *FieldInteger `xml:"DatCountOfAirbags,omitempty" json:"DatCountOfAirbags,omitempty"`

	Acceleration *FieldDecimal `xml:"Acceleration,omitempty" json:"Acceleration,omitempty"`

	DatAcceleration *FieldDecimal `xml:"DatAcceleration,omitempty" json:"DatAcceleration,omitempty"`

	SpeedMax *FieldInteger `xml:"SpeedMax,omitempty" json:"SpeedMax,omitempty"`

	DatSpeedMax *FieldInteger `xml:"DatSpeedMax,omitempty" json:"DatSpeedMax,omitempty"`

	PowerHp *FieldInteger `xml:"PowerHp,omitempty" json:"PowerHp,omitempty"`

	DatPowerHp *FieldInteger `xml:"DatPowerHp,omitempty" json:"DatPowerHp,omitempty"`

	PowerKw *FieldDecimal `xml:"PowerKw,omitempty" json:"PowerKw,omitempty"`

	DatPowerKw *FieldDecimal `xml:"DatPowerKw,omitempty" json:"DatPowerKw,omitempty"`

	Capacity *FieldInteger `xml:"Capacity,omitempty" json:"Capacity,omitempty"`

	DatCapacity *FieldInteger `xml:"DatCapacity,omitempty" json:"DatCapacity,omitempty"`

	Cylinder *FieldInteger `xml:"Cylinder,omitempty" json:"Cylinder,omitempty"`

	DatCylinder *FieldInteger `xml:"DatCylinder,omitempty" json:"DatCylinder,omitempty"`

	CylinderArrangement *FieldString30 `xml:"CylinderArrangement,omitempty" json:"CylinderArrangement,omitempty"`

	DatCylinderArrangement *FieldString30 `xml:"DatCylinderArrangement,omitempty" json:"DatCylinderArrangement,omitempty"`

	RotationsOnMaxPower *FieldInteger `xml:"RotationsOnMaxPower,omitempty" json:"RotationsOnMaxPower,omitempty"`

	DatRotationsOnMaxPower *FieldInteger `xml:"DatRotationsOnMaxPower,omitempty" json:"DatRotationsOnMaxPower,omitempty"`

	RotationsOnMaxTorque *FieldInteger `xml:"RotationsOnMaxTorque,omitempty" json:"RotationsOnMaxTorque,omitempty"`

	DatRotationsOnMaxTorque *FieldInteger `xml:"DatRotationsOnMaxTorque,omitempty" json:"DatRotationsOnMaxTorque,omitempty"`

	Torque *FieldInteger `xml:"Torque,omitempty" json:"Torque,omitempty"`

	DatTorque *FieldInteger `xml:"DatTorque,omitempty" json:"DatTorque,omitempty"`

	GearboxType *FieldString `xml:"GearboxType,omitempty" json:"GearboxType,omitempty"`

	NrOfGears *FieldString `xml:"NrOfGears,omitempty" json:"NrOfGears,omitempty"`

	OriginalTireSizeAxle1 *FieldString `xml:"OriginalTireSizeAxle1,omitempty" json:"OriginalTireSizeAxle1,omitempty"`

	OriginalTireSizeAxle2 *FieldString `xml:"OriginalTireSizeAxle2,omitempty" json:"OriginalTireSizeAxle2,omitempty"`

	TankVolume *FieldInteger `xml:"TankVolume,omitempty" json:"TankVolume,omitempty"`

	DatTankVolume *FieldInteger `xml:"DatTankVolume,omitempty" json:"DatTankVolume,omitempty"`

	TankVolumeAlternative *FieldInteger `xml:"TankVolumeAlternative,omitempty" json:"TankVolumeAlternative,omitempty"`

	DatTankVolumeAlternative *FieldInteger `xml:"DatTankVolumeAlternative,omitempty" json:"DatTankVolumeAlternative,omitempty"`

	ConsumptionInTown *FieldDecimal `xml:"ConsumptionInTown,omitempty" json:"ConsumptionInTown,omitempty"`

	DatConsumptionInTown *FieldDecimal `xml:"DatConsumptionInTown,omitempty" json:"DatConsumptionInTown,omitempty"`

	ConsumptionOutOfTown *FieldDecimal `xml:"ConsumptionOutOfTown,omitempty" json:"ConsumptionOutOfTown,omitempty"`

	DatConsumptionOutOfTown *FieldDecimal `xml:"DatConsumptionOutOfTown,omitempty" json:"DatConsumptionOutOfTown,omitempty"`

	Consumption *FieldDecimal `xml:"Consumption,omitempty" json:"Consumption,omitempty"`

	DatConsumption *FieldDecimal `xml:"DatConsumption,omitempty" json:"DatConsumption,omitempty"`

	WltpConsumptionMixedMin *FieldDecimal `xml:"WltpConsumptionMixedMin,omitempty" json:"WltpConsumptionMixedMin,omitempty"`

	DatWltpConsumptionMixedMin *FieldDecimal `xml:"DatWltpConsumptionMixedMin,omitempty" json:"DatWltpConsumptionMixedMin,omitempty"`

	WltpConsumptionMixedMax *FieldDecimal `xml:"WltpConsumptionMixedMax,omitempty" json:"WltpConsumptionMixedMax,omitempty"`

	DatWltpConsumptionMixedMax *FieldDecimal `xml:"DatWltpConsumptionMixedMax,omitempty" json:"DatWltpConsumptionMixedMax,omitempty"`

	ConsumptionInnerCng *FieldDecimal `xml:"ConsumptionInnerCng,omitempty" json:"ConsumptionInnerCng,omitempty"`

	DatConsumptionInnerCng *FieldDecimal `xml:"DatConsumptionInnerCng,omitempty" json:"DatConsumptionInnerCng,omitempty"`

	ConsumptionOuterCng *FieldDecimal `xml:"ConsumptionOuterCng,omitempty" json:"ConsumptionOuterCng,omitempty"`

	DatConsumptionOuterCng *FieldDecimal `xml:"DatConsumptionOuterCng,omitempty" json:"DatConsumptionOuterCng,omitempty"`

	ConsumptionMixCng *FieldDecimal `xml:"ConsumptionMixCng,omitempty" json:"ConsumptionMixCng,omitempty"`

	DatConsumptionMixCng *FieldDecimal `xml:"DatConsumptionMixCng,omitempty" json:"DatConsumptionMixCng,omitempty"`

	WltpConsumptionBivalentMixedCngMin *FieldDecimal `xml:"WltpConsumptionBivalentMixedCngMin,omitempty" json:"WltpConsumptionBivalentMixedCngMin,omitempty"`

	DatWltpConsumptionBivalentMixedCngMin *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedCngMin,omitempty" json:"DatWltpConsumptionBivalentMixedCngMin,omitempty"`

	WltpConsumptionBivalentMixedCngMax *FieldDecimal `xml:"WltpConsumptionBivalentMixedCngMax,omitempty" json:"WltpConsumptionBivalentMixedCngMax,omitempty"`

	DatWltpConsumptionBivalentMixedCngMax *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedCngMax,omitempty" json:"DatWltpConsumptionBivalentMixedCngMax,omitempty"`

	ConsumptionInnerLpg *FieldDecimal `xml:"ConsumptionInnerLpg,omitempty" json:"ConsumptionInnerLpg,omitempty"`

	DatConsumptionInnerLpg *FieldDecimal `xml:"DatConsumptionInnerLpg,omitempty" json:"DatConsumptionInnerLpg,omitempty"`

	ConsumptionOuterLpg *FieldDecimal `xml:"ConsumptionOuterLpg,omitempty" json:"ConsumptionOuterLpg,omitempty"`

	DatConsumptionOuterLpg *FieldDecimal `xml:"DatConsumptionOuterLpg,omitempty" json:"DatConsumptionOuterLpg,omitempty"`

	ConsumptionMixLpg *FieldDecimal `xml:"ConsumptionMixLpg,omitempty" json:"ConsumptionMixLpg,omitempty"`

	DatConsumptionMixLpg *FieldDecimal `xml:"DatConsumptionMixLpg,omitempty" json:"DatConsumptionMixLpg,omitempty"`

	WltpConsumptionBivalentMixedLpgMin *FieldDecimal `xml:"WltpConsumptionBivalentMixedLpgMin,omitempty" json:"WltpConsumptionBivalentMixedLpgMin,omitempty"`

	DatWltpConsumptionBivalentMixedLpgMin *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedLpgMin,omitempty" json:"DatWltpConsumptionBivalentMixedLpgMin,omitempty"`

	WltpConsumptionBivalentMixedLpgMax *FieldDecimal `xml:"WltpConsumptionBivalentMixedLpgMax,omitempty" json:"WltpConsumptionBivalentMixedLpgMax,omitempty"`

	DatWltpConsumptionBivalentMixedLpgMax *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedLpgMax,omitempty" json:"DatWltpConsumptionBivalentMixedLpgMax,omitempty"`

	ConsumptionInnerH *FieldDecimal `xml:"ConsumptionInnerH,omitempty" json:"ConsumptionInnerH,omitempty"`

	DatConsumptionInnerH *FieldDecimal `xml:"DatConsumptionInnerH,omitempty" json:"DatConsumptionInnerH,omitempty"`

	ConsumptionOuterH *FieldDecimal `xml:"ConsumptionOuterH,omitempty" json:"ConsumptionOuterH,omitempty"`

	DatConsumptionOuterH *FieldDecimal `xml:"DatConsumptionOuterH,omitempty" json:"DatConsumptionOuterH,omitempty"`

	ConsumptionMixH *FieldDecimal `xml:"ConsumptionMixH,omitempty" json:"ConsumptionMixH,omitempty"`

	DatConsumptionMixH *FieldDecimal `xml:"DatConsumptionMixH,omitempty" json:"DatConsumptionMixH,omitempty"`

	WltpConsumptionBivalentMixedHMin *FieldDecimal `xml:"WltpConsumptionBivalentMixedHMin,omitempty" json:"WltpConsumptionBivalentMixedHMin,omitempty"`

	DatWltpConsumptionBivalentMixedHMin *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedHMin,omitempty" json:"DatWltpConsumptionBivalentMixedHMin,omitempty"`

	WltpConsumptionBivalentMixedHMax *FieldDecimal `xml:"WltpConsumptionBivalentMixedHMax,omitempty" json:"WltpConsumptionBivalentMixedHMax,omitempty"`

	DatWltpConsumptionBivalentMixedHMax *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedHMax,omitempty" json:"DatWltpConsumptionBivalentMixedHMax,omitempty"`

	Co2Emission *FieldDecimal `xml:"Co2Emission,omitempty" json:"Co2Emission,omitempty"`

	DatCo2Emission *FieldDecimal `xml:"DatCo2Emission,omitempty" json:"DatCo2Emission,omitempty"`

	WltpCo2EmissionMin *FieldDecimal `xml:"WltpCo2EmissionMin,omitempty" json:"WltpCo2EmissionMin,omitempty"`

	DatWltpCo2EmissionMin *FieldDecimal `xml:"DatWltpCo2EmissionMin,omitempty" json:"DatWltpCo2EmissionMin,omitempty"`

	WltpCo2EmissionMax *FieldDecimal `xml:"WltpCo2EmissionMax,omitempty" json:"WltpCo2EmissionMax,omitempty"`

	DatWltpCo2EmissionMax *FieldDecimal `xml:"DatWltpCo2EmissionMax,omitempty" json:"DatWltpCo2EmissionMax,omitempty"`

	EmissionClass *FieldString5 `xml:"EmissionClass,omitempty" json:"EmissionClass,omitempty"`

	DatEmissionClass *FieldString5 `xml:"DatEmissionClass,omitempty" json:"DatEmissionClass,omitempty"`

	EmissionClassN *EmissionClassN `xml:"EmissionClassN,omitempty" json:"EmissionClassN,omitempty"`

	Drive *FieldString1000 `xml:"Drive,omitempty" json:"Drive,omitempty"`

	DatDrive *FieldString1000 `xml:"DatDrive,omitempty" json:"DatDrive,omitempty"`

	DriveN *FieldString1000 `xml:"DriveN,omitempty" json:"DriveN,omitempty"`

	DatDriveN *FieldString1000 `xml:"DatDriveN,omitempty" json:"DatDriveN,omitempty"`

	DriveCode *FieldString10 `xml:"DriveCode,omitempty" json:"DriveCode,omitempty"`

	EngineCycle *FieldInteger `xml:"EngineCycle,omitempty" json:"EngineCycle,omitempty"`

	DatEngineCycle *FieldInteger `xml:"DatEngineCycle,omitempty" json:"DatEngineCycle,omitempty"`

	FuelMethod *FieldString1000 `xml:"FuelMethod,omitempty" json:"FuelMethod,omitempty"`

	DatFuelMethod *FieldString1000 `xml:"DatFuelMethod,omitempty" json:"DatFuelMethod,omitempty"`

	FuelMethodCode *FieldString2 `xml:"FuelMethodCode,omitempty" json:"FuelMethodCode,omitempty"`

	FuelMethodType *FieldString1000 `xml:"FuelMethodType,omitempty" json:"FuelMethodType,omitempty"`

	DatFuelMethodType *FieldString1000 `xml:"DatFuelMethodType,omitempty" json:"DatFuelMethodType,omitempty"`

	UnloadedWeight *FieldInteger `xml:"UnloadedWeight,omitempty" json:"UnloadedWeight,omitempty"`

	DatUnloadedWeight *FieldInteger `xml:"DatUnloadedWeight,omitempty" json:"DatUnloadedWeight,omitempty"`

	PermissableTotalWeight *FieldInteger `xml:"PermissableTotalWeight,omitempty" json:"PermissableTotalWeight,omitempty"`

	DatPermissableTotalWeight *FieldInteger `xml:"DatPermissableTotalWeight,omitempty" json:"DatPermissableTotalWeight,omitempty"`

	Payload *FieldInteger `xml:"Payload,omitempty" json:"Payload,omitempty"`

	DatPayload *FieldInteger `xml:"DatPayload,omitempty" json:"DatPayload,omitempty"`

	LoadingLength *FieldInteger `xml:"LoadingLength,omitempty" json:"LoadingLength,omitempty"`

	DatLoadingLength *FieldInteger `xml:"DatLoadingLength,omitempty" json:"DatLoadingLength,omitempty"`

	LoadingWidth *FieldInteger `xml:"LoadingWidth,omitempty" json:"LoadingWidth,omitempty"`

	DatLoadingWidth *FieldInteger `xml:"DatLoadingWidth,omitempty" json:"DatLoadingWidth,omitempty"`

	LoadingHeight *FieldInteger `xml:"LoadingHeight,omitempty" json:"LoadingHeight,omitempty"`

	DatLoadingHeight *FieldInteger `xml:"DatLoadingHeight,omitempty" json:"DatLoadingHeight,omitempty"`

	LoadingSpace *FieldInteger `xml:"LoadingSpace,omitempty" json:"LoadingSpace,omitempty"`

	DatLoadingSpace *FieldInteger `xml:"DatLoadingSpace,omitempty" json:"DatLoadingSpace,omitempty"`

	LoadingSpaceMax *FieldInteger `xml:"LoadingSpaceMax,omitempty" json:"LoadingSpaceMax,omitempty"`

	DatLoadingSpaceMax *FieldInteger `xml:"DatLoadingSpaceMax,omitempty" json:"DatLoadingSpaceMax,omitempty"`

	UpperBodyMaterial *FieldString30 `xml:"UpperBodyMaterial,omitempty" json:"UpperBodyMaterial,omitempty"`

	InsuranceTypeClassLiability *FieldString2 `xml:"InsuranceTypeClassLiability,omitempty" json:"InsuranceTypeClassLiability,omitempty"`

	InsuranceTypeClassCascoPartial *FieldString2 `xml:"InsuranceTypeClassCascoPartial,omitempty" json:"InsuranceTypeClassCascoPartial,omitempty"`

	InsuranceTypeClassCascoComplete *FieldString2 `xml:"InsuranceTypeClassCascoComplete,omitempty" json:"InsuranceTypeClassCascoComplete,omitempty"`

	DustBadge *FieldString `xml:"DustBadge,omitempty" json:"DustBadge,omitempty"`

	ProductGroupName *FieldString1000 `xml:"ProductGroupName,omitempty" json:"ProductGroupName,omitempty"`

	EmissionKey string `xml:"EmissionKey,omitempty" json:"EmissionKey,omitempty"`

	Built *FieldString30 `xml:"Built,omitempty" json:"Built,omitempty"`

	AllowedLoadCapacity *FieldInteger `xml:"AllowedLoadCapacity,omitempty" json:"AllowedLoadCapacity,omitempty"`

	CabinStructureAltDescription *FieldString30 `xml:"CabinStructureAltDescription,omitempty" json:"CabinStructureAltDescription,omitempty"`

	CushionColorId *FieldString30 `xml:"CushionColorId,omitempty" json:"CushionColorId,omitempty"`

	FuelmethodAbbr *FieldString1000 `xml:"FuelmethodAbbr,omitempty" json:"FuelmethodAbbr,omitempty"`

	InsuranceTypeClassCascoCompleteNeu *FieldString2 `xml:"InsuranceTypeClassCascoCompleteNeu,omitempty" json:"InsuranceTypeClassCascoCompleteNeu,omitempty"`

	InsuranceTypeClassCascoPartialNeu *FieldString2 `xml:"InsuranceTypeClassCascoPartialNeu,omitempty" json:"InsuranceTypeClassCascoPartialNeu,omitempty"`

	InsuranceTypeClassLiabilityNew *FieldString2 `xml:"InsuranceTypeClassLiabilityNew,omitempty" json:"InsuranceTypeClassLiabilityNew,omitempty"`

	PayloadAlternative *FieldInteger `xml:"PayloadAlternative,omitempty" json:"PayloadAlternative,omitempty"`

	PowerKwSae *FieldDecimal `xml:"PowerKwSae,omitempty" json:"PowerKwSae,omitempty"`

	SommerSmogBadge *FieldString `xml:"SommerSmogBadge,omitempty" json:"SommerSmogBadge,omitempty"`

	StowageMassFormat *FieldString `xml:"StowageMassFormat,omitempty" json:"StowageMassFormat,omitempty"`

	TokenChangedCapacity *FieldString `xml:"TokenChangedCapacity,omitempty" json:"TokenChangedCapacity,omitempty"`

	TokenTurboEngine *FieldString `xml:"TokenTurboEngine,omitempty" json:"TokenTurboEngine,omitempty"`

	TypeOfTaxation *FieldString `xml:"TypeOfTaxation,omitempty" json:"TypeOfTaxation,omitempty"`

	TypeSheetNumber *FieldString10 `xml:"TypeSheetNumber,omitempty" json:"TypeSheetNumber,omitempty"`

	WhelBaseAlternative *FieldInteger `xml:"WhelBaseAlternative,omitempty" json:"WhelBaseAlternative,omitempty"`

	SuitableForE10 *FieldBoolean `xml:"SuitableForE10,omitempty" json:"SuitableForE10,omitempty"`

	DatSuitableForE10 *FieldBoolean `xml:"DatSuitableForE10,omitempty" json:"DatSuitableForE10,omitempty"`

	WeightTotalCombination *FieldInteger `xml:"WeightTotalCombination,omitempty" json:"WeightTotalCombination,omitempty"`

	DatWeightTotalCombination *FieldInteger `xml:"DatWeightTotalCombination,omitempty" json:"DatWeightTotalCombination,omitempty"`

	WidthForGarage *FieldInteger `xml:"WidthForGarage,omitempty" json:"WidthForGarage,omitempty"`

	DatWidthForGarage *FieldInteger `xml:"DatWidthForGarage,omitempty" json:"DatWidthForGarage,omitempty"`

	PowerKwSystem *FieldDecimal `xml:"PowerKwSystem,omitempty" json:"PowerKwSystem,omitempty"`

	DatPowerKwSystem *FieldDecimal `xml:"DatPowerKwSystem,omitempty" json:"DatPowerKwSystem,omitempty"`

	PowerHpSystem *FieldDecimal `xml:"PowerHpSystem,omitempty" json:"PowerHpSystem,omitempty"`

	DatPowerHpSystem *FieldDecimal `xml:"DatPowerHpSystem,omitempty" json:"DatPowerHpSystem,omitempty"`

	PowerKwPermanent *FieldDecimal `xml:"PowerKwPermanent,omitempty" json:"PowerKwPermanent,omitempty"`

	DatPowerKwPermanent *FieldDecimal `xml:"DatPowerKwPermanent,omitempty" json:"DatPowerKwPermanent,omitempty"`

	PowerHpPermanent *FieldDecimal `xml:"PowerHpPermanent,omitempty" json:"PowerHpPermanent,omitempty"`

	DatPowerHpPermanent *FieldDecimal `xml:"DatPowerHpPermanent,omitempty" json:"DatPowerHpPermanent,omitempty"`

	PowerKwMax *FieldDecimal `xml:"PowerKwMax,omitempty" json:"PowerKwMax,omitempty"`

	DatPowerKwMax *FieldDecimal `xml:"DatPowerKwMax,omitempty" json:"DatPowerKwMax,omitempty"`

	PowerHpMax *FieldDecimal `xml:"PowerHpMax,omitempty" json:"PowerHpMax,omitempty"`

	DatPowerHpMax *FieldDecimal `xml:"DatPowerHpMax,omitempty" json:"DatPowerHpMax,omitempty"`

	PowerKwPermanentSecondary *FieldDecimal `xml:"PowerKwPermanentSecondary,omitempty" json:"PowerKwPermanentSecondary,omitempty"`

	DatPowerKwPermanentSecondary *FieldDecimal `xml:"DatPowerKwPermanentSecondary,omitempty" json:"DatPowerKwPermanentSecondary,omitempty"`

	PowerHpPermanentSecondary *FieldDecimal `xml:"PowerHpPermanentSecondary,omitempty" json:"PowerHpPermanentSecondary,omitempty"`

	DatPowerHpPermanentSecondary *FieldDecimal `xml:"DatPowerHpPermanentSecondary,omitempty" json:"DatPowerHpPermanentSecondary,omitempty"`

	PowerKwMaxSecondary *FieldDecimal `xml:"PowerKwMaxSecondary,omitempty" json:"PowerKwMaxSecondary,omitempty"`

	DatPowerKwMaxSecondary *FieldDecimal `xml:"DatPowerKwMaxSecondary,omitempty" json:"DatPowerKwMaxSecondary,omitempty"`

	PowerHpMaxSecondary *FieldDecimal `xml:"PowerHpMaxSecondary,omitempty" json:"PowerHpMaxSecondary,omitempty"`

	DatPowerHpMaxSecondary *FieldDecimal `xml:"DatPowerHpMaxSecondary,omitempty" json:"DatPowerHpMaxSecondary,omitempty"`

	BatteryVoltage *FieldDecimal `xml:"BatteryVoltage,omitempty" json:"BatteryVoltage,omitempty"`

	DatBatteryVoltage *FieldDecimal `xml:"DatBatteryVoltage,omitempty" json:"DatBatteryVoltage,omitempty"`

	BatteryCapacity *FieldDecimal `xml:"BatteryCapacity,omitempty" json:"BatteryCapacity,omitempty"`

	DatBatteryCapacity *FieldDecimal `xml:"DatBatteryCapacity,omitempty" json:"DatBatteryCapacity,omitempty"`

	BatteryWeight *FieldDecimal `xml:"BatteryWeight,omitempty" json:"BatteryWeight,omitempty"`

	DatBatteryWeight *FieldDecimal `xml:"DatBatteryWeight,omitempty" json:"DatBatteryWeight,omitempty"`

	BatteryConstructionType *FieldString `xml:"BatteryConstructionType,omitempty" json:"BatteryConstructionType,omitempty"`

	DatBatteryConstructionType *FieldString `xml:"DatBatteryConstructionType,omitempty" json:"DatBatteryConstructionType,omitempty"`

	ChargingCurrentPlugType *FieldString `xml:"ChargingCurrentPlugType,omitempty" json:"ChargingCurrentPlugType,omitempty"`

	DatChargingCurrentPlugType *FieldString `xml:"DatChargingCurrentPlugType,omitempty" json:"DatChargingCurrentPlugType,omitempty"`

	PluginSystem *FieldBoolean `xml:"PluginSystem,omitempty" json:"PluginSystem,omitempty"`

	DatPluginSystem *FieldBoolean `xml:"DatPluginSystem,omitempty" json:"DatPluginSystem,omitempty"`

	QuickdropSystem *FieldBoolean `xml:"QuickdropSystem,omitempty" json:"QuickdropSystem,omitempty"`

	DatQuickdropSystem *FieldBoolean `xml:"DatQuickdropSystem,omitempty" json:"DatQuickdropSystem,omitempty"`

	NormalChargeVoltage *FieldInteger `xml:"NormalChargeVoltage,omitempty" json:"NormalChargeVoltage,omitempty"`

	DatNormalChargeVoltage *FieldInteger `xml:"DatNormalChargeVoltage,omitempty" json:"DatNormalChargeVoltage,omitempty"`

	NormalChargeDuration *FieldDecimal `xml:"NormalChargeDuration,omitempty" json:"NormalChargeDuration,omitempty"`

	DatNormalChargeDuration *FieldDecimal `xml:"DatNormalChargeDuration,omitempty" json:"DatNormalChargeDuration,omitempty"`

	QuickChargeVoltage *FieldInteger `xml:"QuickChargeVoltage,omitempty" json:"QuickChargeVoltage,omitempty"`

	DatQuickChargeVoltage *FieldInteger `xml:"DatQuickChargeVoltage,omitempty" json:"DatQuickChargeVoltage,omitempty"`

	QuickChargeDuration *FieldDecimal `xml:"QuickChargeDuration,omitempty" json:"QuickChargeDuration,omitempty"`

	DatQuickChargeDuration *FieldDecimal `xml:"DatQuickChargeDuration,omitempty" json:"DatQuickChargeDuration,omitempty"`

	ConsumptionElectricalCurrent *FieldDecimal `xml:"ConsumptionElectricalCurrent,omitempty" json:"ConsumptionElectricalCurrent,omitempty"`

	DatConsumptionElectricalCurrent *FieldDecimal `xml:"DatConsumptionElectricalCurrent,omitempty" json:"DatConsumptionElectricalCurrent,omitempty"`

	WltpConsumptionElectricalMin *FieldDecimal `xml:"WltpConsumptionElectricalMin,omitempty" json:"WltpConsumptionElectricalMin,omitempty"`

	DatWltpConsumptionElectricalMin *FieldDecimal `xml:"DatWltpConsumptionElectricalMin,omitempty" json:"DatWltpConsumptionElectricalMin,omitempty"`

	WltpConsumptionElectricalMax *FieldDecimal `xml:"WltpConsumptionElectricalMax,omitempty" json:"WltpConsumptionElectricalMax,omitempty"`

	DatWltpConsumptionElectricalMax *FieldDecimal `xml:"DatWltpConsumptionElectricalMax,omitempty" json:"DatWltpConsumptionElectricalMax,omitempty"`

	RangeOfElectricMotor *FieldInteger `xml:"RangeOfElectricMotor,omitempty" json:"RangeOfElectricMotor,omitempty"`

	DatRangeOfElectricMotor *FieldInteger `xml:"DatRangeOfElectricMotor,omitempty" json:"DatRangeOfElectricMotor,omitempty"`

	RangeTotal *FieldInteger `xml:"RangeTotal,omitempty" json:"RangeTotal,omitempty"`

	DatRangeTotal *FieldInteger `xml:"DatRangeTotal,omitempty" json:"DatRangeTotal,omitempty"`

	WltpRangeElectricalMin *FieldInteger `xml:"WltpRangeElectricalMin,omitempty" json:"WltpRangeElectricalMin,omitempty"`

	DatWltpRangeElectricalMin *FieldInteger `xml:"DatWltpRangeElectricalMin,omitempty" json:"DatWltpRangeElectricalMin,omitempty"`

	WltpRangeElectricalMax *FieldInteger `xml:"WltpRangeElectricalMax,omitempty" json:"WltpRangeElectricalMax,omitempty"`

	DatWltpRangeElectricalMax *FieldInteger `xml:"DatWltpRangeElectricalMax,omitempty" json:"DatWltpRangeElectricalMax,omitempty"`

	WltpRangeTotalMin *FieldInteger `xml:"WltpRangeTotalMin,omitempty" json:"WltpRangeTotalMin,omitempty"`

	DatWltpRangeTotalMin *FieldInteger `xml:"DatWltpRangeTotalMin,omitempty" json:"DatWltpRangeTotalMin,omitempty"`

	WltpRangeTotalMax *FieldInteger `xml:"WltpRangeTotalMax,omitempty" json:"WltpRangeTotalMax,omitempty"`

	DatWltpRangeTotalMax *FieldInteger `xml:"DatWltpRangeTotalMax,omitempty" json:"DatWltpRangeTotalMax,omitempty"`

	EnergyEfficiencyClass *FieldString2 `xml:"EnergyEfficiencyClass,omitempty" json:"EnergyEfficiencyClass,omitempty"`

	DatEnergyEfficiencyClass *FieldString2 `xml:"DatEnergyEfficiencyClass,omitempty" json:"DatEnergyEfficiencyClass,omitempty"`

	ModelTypecode *FieldString `xml:"ModelTypecode,omitempty" json:"ModelTypecode,omitempty"`

	ModelVariant *FieldString `xml:"ModelVariant,omitempty" json:"ModelVariant,omitempty"`

	Type *FieldString `xml:"Type,omitempty" json:"Type,omitempty"`

	TypeVariant *FieldString `xml:"TypeVariant,omitempty" json:"TypeVariant,omitempty"`

	EngineType *FieldString `xml:"EngineType,omitempty" json:"EngineType,omitempty"`

	SpecialModel *FieldString `xml:"SpecialModel,omitempty" json:"SpecialModel,omitempty"`

	TechInfoWltp *TechInfoWltp `xml:"TechInfoWltp,omitempty" json:"TechInfoWltp,omitempty"`
}

type TechInfoWltp struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TechInfoWltp"`

	WltpConsumptionLowMin *FieldDecimal `xml:"WltpConsumptionLowMin,omitempty" json:"WltpConsumptionLowMin,omitempty"`

	DatWltpConsumptionLowMin *FieldDecimal `xml:"DatWltpConsumptionLowMin,omitempty" json:"DatWltpConsumptionLowMin,omitempty"`

	WltpConsumptionLowMax *FieldDecimal `xml:"WltpConsumptionLowMax,omitempty" json:"WltpConsumptionLowMax,omitempty"`

	DatWltpConsumptionLowMax *FieldDecimal `xml:"DatWltpConsumptionLowMax,omitempty" json:"DatWltpConsumptionLowMax,omitempty"`

	WltpConsumptionMediumMin *FieldDecimal `xml:"WltpConsumptionMediumMin,omitempty" json:"WltpConsumptionMediumMin,omitempty"`

	DatWltpConsumptionMediumMin *FieldDecimal `xml:"DatWltpConsumptionMediumMin,omitempty" json:"DatWltpConsumptionMediumMin,omitempty"`

	WltpConsumptionMediumMax *FieldDecimal `xml:"WltpConsumptionMediumMax,omitempty" json:"WltpConsumptionMediumMax,omitempty"`

	DatWltpConsumptionMediumMax *FieldDecimal `xml:"DatWltpConsumptionMediumMax,omitempty" json:"DatWltpConsumptionMediumMax,omitempty"`

	WltpConsumptionHighMin *FieldDecimal `xml:"WltpConsumptionHighMin,omitempty" json:"WltpConsumptionHighMin,omitempty"`

	DatWltpConsumptionHighMin *FieldDecimal `xml:"DatWltpConsumptionHighMin,omitempty" json:"DatWltpConsumptionHighMin,omitempty"`

	WltpConsumptionHighMax *FieldDecimal `xml:"WltpConsumptionHighMax,omitempty" json:"WltpConsumptionHighMax,omitempty"`

	DatWltpConsumptionHighMax *FieldDecimal `xml:"DatWltpConsumptionHighMax,omitempty" json:"DatWltpConsumptionHighMax,omitempty"`

	WltpConsumptionExtraHighMin *FieldDecimal `xml:"WltpConsumptionExtraHighMin,omitempty" json:"WltpConsumptionExtraHighMin,omitempty"`

	DatWltpConsumptionExtraHighMin *FieldDecimal `xml:"DatWltpConsumptionExtraHighMin,omitempty" json:"DatWltpConsumptionExtraHighMin,omitempty"`

	WltpConsumptionExtraHighMax *FieldDecimal `xml:"WltpConsumptionExtraHighMax,omitempty" json:"WltpConsumptionExtraHighMax,omitempty"`

	DatWltpConsumptionExtraHighMax *FieldDecimal `xml:"DatWltpConsumptionExtraHighMax,omitempty" json:"DatWltpConsumptionExtraHighMax,omitempty"`

	WltpConsumptionMixedMin *FieldDecimal `xml:"WltpConsumptionMixedMin,omitempty" json:"WltpConsumptionMixedMin,omitempty"`

	DatWltpConsumptionMixedMin *FieldDecimal `xml:"DatWltpConsumptionMixedMin,omitempty" json:"DatWltpConsumptionMixedMin,omitempty"`

	WltpConsumptionMixedMax *FieldDecimal `xml:"WltpConsumptionMixedMax,omitempty" json:"WltpConsumptionMixedMax,omitempty"`

	DatWltpConsumptionMixedMax *FieldDecimal `xml:"DatWltpConsumptionMixedMax,omitempty" json:"DatWltpConsumptionMixedMax,omitempty"`

	WltpConsumptionBivalentLowCngMin *FieldDecimal `xml:"WltpConsumptionBivalentLowCngMin,omitempty" json:"WltpConsumptionBivalentLowCngMin,omitempty"`

	DatWltpConsumptionBivalentLowCngMin *FieldDecimal `xml:"DatWltpConsumptionBivalentLowCngMin,omitempty" json:"DatWltpConsumptionBivalentLowCngMin,omitempty"`

	WltpConsumptionBivalentLowCngMax *FieldDecimal `xml:"WltpConsumptionBivalentLowCngMax,omitempty" json:"WltpConsumptionBivalentLowCngMax,omitempty"`

	DatWltpConsumptionBivalentLowCngMax *FieldDecimal `xml:"DatWltpConsumptionBivalentLowCngMax,omitempty" json:"DatWltpConsumptionBivalentLowCngMax,omitempty"`

	WltpConsumptionBivalentMediumCngMin *FieldDecimal `xml:"WltpConsumptionBivalentMediumCngMin,omitempty" json:"WltpConsumptionBivalentMediumCngMin,omitempty"`

	DatWltpConsumptionBivalentMediumCngMin *FieldDecimal `xml:"DatWltpConsumptionBivalentMediumCngMin,omitempty" json:"DatWltpConsumptionBivalentMediumCngMin,omitempty"`

	WltpConsumptionBivalentMediumCngMax *FieldDecimal `xml:"WltpConsumptionBivalentMediumCngMax,omitempty" json:"WltpConsumptionBivalentMediumCngMax,omitempty"`

	DatWltpConsumptionBivalentMediumCngMax *FieldDecimal `xml:"DatWltpConsumptionBivalentMediumCngMax,omitempty" json:"DatWltpConsumptionBivalentMediumCngMax,omitempty"`

	WltpConsumptionBivalentHighCngMin *FieldDecimal `xml:"WltpConsumptionBivalentHighCngMin,omitempty" json:"WltpConsumptionBivalentHighCngMin,omitempty"`

	DatWltpConsumptionBivalentHighCngMin *FieldDecimal `xml:"DatWltpConsumptionBivalentHighCngMin,omitempty" json:"DatWltpConsumptionBivalentHighCngMin,omitempty"`

	WltpConsumptionBivalentHighCngMax *FieldDecimal `xml:"WltpConsumptionBivalentHighCngMax,omitempty" json:"WltpConsumptionBivalentHighCngMax,omitempty"`

	DatWltpConsumptionBivalentHighCngMax *FieldDecimal `xml:"DatWltpConsumptionBivalentHighCngMax,omitempty" json:"DatWltpConsumptionBivalentHighCngMax,omitempty"`

	WltpConsumptionBivalentExtraHighCngMin *FieldDecimal `xml:"WltpConsumptionBivalentExtraHighCngMin,omitempty" json:"WltpConsumptionBivalentExtraHighCngMin,omitempty"`

	DatWltpConsumptionBivalentExtraHighCngMin *FieldDecimal `xml:"DatWltpConsumptionBivalentExtraHighCngMin,omitempty" json:"DatWltpConsumptionBivalentExtraHighCngMin,omitempty"`

	WltpConsumptionBivalentExtraHighCngMax *FieldDecimal `xml:"WltpConsumptionBivalentExtraHighCngMax,omitempty" json:"WltpConsumptionBivalentExtraHighCngMax,omitempty"`

	DatWltpConsumptionBivalentExtraHighCngMax *FieldDecimal `xml:"DatWltpConsumptionBivalentExtraHighCngMax,omitempty" json:"DatWltpConsumptionBivalentExtraHighCngMax,omitempty"`

	WltpConsumptionBivalentMixedCngMin *FieldDecimal `xml:"WltpConsumptionBivalentMixedCngMin,omitempty" json:"WltpConsumptionBivalentMixedCngMin,omitempty"`

	DatWltpConsumptionBivalentMixedCngMin *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedCngMin,omitempty" json:"DatWltpConsumptionBivalentMixedCngMin,omitempty"`

	WltpConsumptionBivalentMixedCngMax *FieldDecimal `xml:"WltpConsumptionBivalentMixedCngMax,omitempty" json:"WltpConsumptionBivalentMixedCngMax,omitempty"`

	DatWltpConsumptionBivalentMixedCngMax *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedCngMax,omitempty" json:"DatWltpConsumptionBivalentMixedCngMax,omitempty"`

	WltpConsumptionBivalentLowLpgMin *FieldDecimal `xml:"WltpConsumptionBivalentLowLpgMin,omitempty" json:"WltpConsumptionBivalentLowLpgMin,omitempty"`

	DatWltpConsumptionBivalentLowLpgMin *FieldDecimal `xml:"DatWltpConsumptionBivalentLowLpgMin,omitempty" json:"DatWltpConsumptionBivalentLowLpgMin,omitempty"`

	WltpConsumptionBivalentLowLpgMax *FieldDecimal `xml:"WltpConsumptionBivalentLowLpgMax,omitempty" json:"WltpConsumptionBivalentLowLpgMax,omitempty"`

	DatWltpConsumptionBivalentLowLpgMax *FieldDecimal `xml:"DatWltpConsumptionBivalentLowLpgMax,omitempty" json:"DatWltpConsumptionBivalentLowLpgMax,omitempty"`

	WltpConsumptionBivalentMediumLpgMin *FieldDecimal `xml:"WltpConsumptionBivalentMediumLpgMin,omitempty" json:"WltpConsumptionBivalentMediumLpgMin,omitempty"`

	DatWltpConsumptionBivalentMediumLpgMin *FieldDecimal `xml:"DatWltpConsumptionBivalentMediumLpgMin,omitempty" json:"DatWltpConsumptionBivalentMediumLpgMin,omitempty"`

	WltpConsumptionBivalentMediumLpgMax *FieldDecimal `xml:"WltpConsumptionBivalentMediumLpgMax,omitempty" json:"WltpConsumptionBivalentMediumLpgMax,omitempty"`

	DatWltpConsumptionBivalentMediumLpgMax *FieldDecimal `xml:"DatWltpConsumptionBivalentMediumLpgMax,omitempty" json:"DatWltpConsumptionBivalentMediumLpgMax,omitempty"`

	WltpConsumptionBivalentHighLpgMin *FieldDecimal `xml:"WltpConsumptionBivalentHighLpgMin,omitempty" json:"WltpConsumptionBivalentHighLpgMin,omitempty"`

	DatWltpConsumptionBivalentHighLpgMin *FieldDecimal `xml:"DatWltpConsumptionBivalentHighLpgMin,omitempty" json:"DatWltpConsumptionBivalentHighLpgMin,omitempty"`

	WltpConsumptionBivalentHighLpgMax *FieldDecimal `xml:"WltpConsumptionBivalentHighLpgMax,omitempty" json:"WltpConsumptionBivalentHighLpgMax,omitempty"`

	DatWltpConsumptionBivalentHighLpgMax *FieldDecimal `xml:"DatWltpConsumptionBivalentHighLpgMax,omitempty" json:"DatWltpConsumptionBivalentHighLpgMax,omitempty"`

	WltpConsumptionBivalentExtraHighLpgMin *FieldDecimal `xml:"WltpConsumptionBivalentExtraHighLpgMin,omitempty" json:"WltpConsumptionBivalentExtraHighLpgMin,omitempty"`

	DatWltpConsumptionBivalentExtraHighLpgMin *FieldDecimal `xml:"DatWltpConsumptionBivalentExtraHighLpgMin,omitempty" json:"DatWltpConsumptionBivalentExtraHighLpgMin,omitempty"`

	WltpConsumptionBivalentExtraHighLpgMax *FieldDecimal `xml:"WltpConsumptionBivalentExtraHighLpgMax,omitempty" json:"WltpConsumptionBivalentExtraHighLpgMax,omitempty"`

	DatWltpConsumptionBivalentExtraHighLpgMax *FieldDecimal `xml:"DatWltpConsumptionBivalentExtraHighLpgMax,omitempty" json:"DatWltpConsumptionBivalentExtraHighLpgMax,omitempty"`

	WltpConsumptionBivalentMixedLpgMin *FieldDecimal `xml:"WltpConsumptionBivalentMixedLpgMin,omitempty" json:"WltpConsumptionBivalentMixedLpgMin,omitempty"`

	DatWltpConsumptionBivalentMixedLpgMin *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedLpgMin,omitempty" json:"DatWltpConsumptionBivalentMixedLpgMin,omitempty"`

	WltpConsumptionBivalentMixedLpgMax *FieldDecimal `xml:"WltpConsumptionBivalentMixedLpgMax,omitempty" json:"WltpConsumptionBivalentMixedLpgMax,omitempty"`

	DatWltpConsumptionBivalentMixedLpgMax *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedLpgMax,omitempty" json:"DatWltpConsumptionBivalentMixedLpgMax,omitempty"`

	WltpConsumptionBivalentLowHMin *FieldDecimal `xml:"WltpConsumptionBivalentLowHMin,omitempty" json:"WltpConsumptionBivalentLowHMin,omitempty"`

	DatWltpConsumptionBivalentLowHMin *FieldDecimal `xml:"DatWltpConsumptionBivalentLowHMin,omitempty" json:"DatWltpConsumptionBivalentLowHMin,omitempty"`

	WltpConsumptionBivalentLowHMax *FieldDecimal `xml:"WltpConsumptionBivalentLowHMax,omitempty" json:"WltpConsumptionBivalentLowHMax,omitempty"`

	DatWltpConsumptionBivalentLowHMax *FieldDecimal `xml:"DatWltpConsumptionBivalentLowHMax,omitempty" json:"DatWltpConsumptionBivalentLowHMax,omitempty"`

	WltpConsumptionBivalentMediumHMin *FieldDecimal `xml:"WltpConsumptionBivalentMediumHMin,omitempty" json:"WltpConsumptionBivalentMediumHMin,omitempty"`

	DatWltpConsumptionBivalentMediumHMin *FieldDecimal `xml:"DatWltpConsumptionBivalentMediumHMin,omitempty" json:"DatWltpConsumptionBivalentMediumHMin,omitempty"`

	WltpConsumptionBivalentMediumHMax *FieldDecimal `xml:"WltpConsumptionBivalentMediumHMax,omitempty" json:"WltpConsumptionBivalentMediumHMax,omitempty"`

	DatWltpConsumptionBivalentMediumHMax *FieldDecimal `xml:"DatWltpConsumptionBivalentMediumHMax,omitempty" json:"DatWltpConsumptionBivalentMediumHMax,omitempty"`

	WltpConsumptionBivalentHighHMin *FieldDecimal `xml:"WltpConsumptionBivalentHighHMin,omitempty" json:"WltpConsumptionBivalentHighHMin,omitempty"`

	DatWltpConsumptionBivalentHighHMin *FieldDecimal `xml:"DatWltpConsumptionBivalentHighHMin,omitempty" json:"DatWltpConsumptionBivalentHighHMin,omitempty"`

	WltpConsumptionBivalentHighHMax *FieldDecimal `xml:"WltpConsumptionBivalentHighHMax,omitempty" json:"WltpConsumptionBivalentHighHMax,omitempty"`

	DatWltpConsumptionBivalentHighHMax *FieldDecimal `xml:"DatWltpConsumptionBivalentHighHMax,omitempty" json:"DatWltpConsumptionBivalentHighHMax,omitempty"`

	WltpConsumptionBivalentExtraHighHMin *FieldDecimal `xml:"WltpConsumptionBivalentExtraHighHMin,omitempty" json:"WltpConsumptionBivalentExtraHighHMin,omitempty"`

	DatWltpConsumptionBivalentExtraHighHMin *FieldDecimal `xml:"DatWltpConsumptionBivalentExtraHighHMin,omitempty" json:"DatWltpConsumptionBivalentExtraHighHMin,omitempty"`

	WltpConsumptionBivalentExtraHighHMax *FieldDecimal `xml:"WltpConsumptionBivalentExtraHighHMax,omitempty" json:"WltpConsumptionBivalentExtraHighHMax,omitempty"`

	DatWltpConsumptionBivalentExtraHighHMax *FieldDecimal `xml:"DatWltpConsumptionBivalentExtraHighHMax,omitempty" json:"DatWltpConsumptionBivalentExtraHighHMax,omitempty"`

	WltpConsumptionBivalentMixedHMin *FieldDecimal `xml:"WltpConsumptionBivalentMixedHMin,omitempty" json:"WltpConsumptionBivalentMixedHMin,omitempty"`

	DatWltpConsumptionBivalentMixedHMin *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedHMin,omitempty" json:"DatWltpConsumptionBivalentMixedHMin,omitempty"`

	WltpConsumptionBivalentMixedHMax *FieldDecimal `xml:"WltpConsumptionBivalentMixedHMax,omitempty" json:"WltpConsumptionBivalentMixedHMax,omitempty"`

	DatWltpConsumptionBivalentMixedHMax *FieldDecimal `xml:"DatWltpConsumptionBivalentMixedHMax,omitempty" json:"DatWltpConsumptionBivalentMixedHMax,omitempty"`

	WltpCo2EmissionMin *FieldDecimal `xml:"WltpCo2EmissionMin,omitempty" json:"WltpCo2EmissionMin,omitempty"`

	DatWltpCo2EmissionMin *FieldDecimal `xml:"DatWltpCo2EmissionMin,omitempty" json:"DatWltpCo2EmissionMin,omitempty"`

	WltpCo2EmissionMax *FieldDecimal `xml:"WltpCo2EmissionMax,omitempty" json:"WltpCo2EmissionMax,omitempty"`

	DatWltpCo2EmissionMax *FieldDecimal `xml:"DatWltpCo2EmissionMax,omitempty" json:"DatWltpCo2EmissionMax,omitempty"`

	WltpConsumptionElectricalMin *FieldDecimal `xml:"WltpConsumptionElectricalMin,omitempty" json:"WltpConsumptionElectricalMin,omitempty"`

	DatWltpConsumptionElectricalMin *FieldDecimal `xml:"DatWltpConsumptionElectricalMin,omitempty" json:"DatWltpConsumptionElectricalMin,omitempty"`

	WltpConsumptionElectricalMax *FieldDecimal `xml:"WltpConsumptionElectricalMax,omitempty" json:"WltpConsumptionElectricalMax,omitempty"`

	DatWltpConsumptionElectricalMax *FieldDecimal `xml:"DatWltpConsumptionElectricalMax,omitempty" json:"DatWltpConsumptionElectricalMax,omitempty"`

	WltpRangeElectricalMin *FieldInteger `xml:"WltpRangeElectricalMin,omitempty" json:"WltpRangeElectricalMin,omitempty"`

	DatWltpRangeElectricalMin *FieldInteger `xml:"DatWltpRangeElectricalMin,omitempty" json:"DatWltpRangeElectricalMin,omitempty"`

	WltpRangeElectricalMax *FieldInteger `xml:"WltpRangeElectricalMax,omitempty" json:"WltpRangeElectricalMax,omitempty"`

	DatWltpRangeElectricalMax *FieldInteger `xml:"DatWltpRangeElectricalMax,omitempty" json:"DatWltpRangeElectricalMax,omitempty"`

	WltpRangeTotalMin *FieldInteger `xml:"WltpRangeTotalMin,omitempty" json:"WltpRangeTotalMin,omitempty"`

	DatWltpRangeTotalMin *FieldInteger `xml:"DatWltpRangeTotalMin,omitempty" json:"DatWltpRangeTotalMin,omitempty"`

	WltpRangeTotalMax *FieldInteger `xml:"WltpRangeTotalMax,omitempty" json:"WltpRangeTotalMax,omitempty"`

	DatWltpRangeTotalMax *FieldInteger `xml:"DatWltpRangeTotalMax,omitempty" json:"DatWltpRangeTotalMax,omitempty"`
}

type TelematicData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TelematicData"`

	TelematicEntries []*TelematicEntries `xml:"TelematicEntries,omitempty" json:"TelematicEntries,omitempty"`
}

type TelematicEntries struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TelematicEntries"`

	TelematicEntry []*TelematicEntry `xml:"TelematicEntry,omitempty" json:"TelematicEntry,omitempty"`

	Type string `xml:"type,attr,omitempty" json:"type,omitempty"`
}

type TelematicEntry struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TelematicEntry"`

	Key string `xml:"key,attr,omitempty" json:"key,omitempty"`

	Value string `xml:"value,attr,omitempty" json:"value,omitempty"`
}

type TextItem struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TextItem"`

	Key *FieldString `xml:"Key,omitempty" json:"Key,omitempty"`

	Text *FieldString `xml:"Text,omitempty" json:"Text,omitempty"`
}

type Tires struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Tires"`

	TireRepairType *FieldString `xml:"TireRepairType,omitempty" json:"TireRepairType,omitempty"`

	TireValuationType *FieldString `xml:"TireValuationType,omitempty" json:"TireValuationType,omitempty"`

	Axles struct {
		Axle []*Axle `xml:"Axle,omitempty" json:"Axle,omitempty"`
	} `xml:"Axles,omitempty" json:"Axles,omitempty"`
}

type TotalSummaryItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TotalSummaryItaly"`

	TotalSummaryItemItaly []*TotalSummaryItemItaly `xml:"TotalSummaryItemItaly,omitempty" json:"TotalSummaryItemItaly,omitempty"`
}

type TotalSummaryItemItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TotalSummaryItemItaly"`

	Identifier *FieldString `xml:"Identifier,omitempty" json:"Identifier,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	ValueNet *FieldDecimal `xml:"ValueNet,omitempty" json:"ValueNet,omitempty"`

	ValueNetDiscountPerc *FieldDecimal `xml:"ValueNetDiscountPerc,omitempty" json:"ValueNetDiscountPerc,omitempty"`

	ValueNetDiscountValue *FieldDecimal `xml:"ValueNetDiscountValue,omitempty" json:"ValueNetDiscountValue,omitempty"`

	ValueNetCorrected *FieldDecimal `xml:"ValueNetCorrected,omitempty" json:"ValueNetCorrected,omitempty"`

	ValueVat *FieldDecimal `xml:"ValueVat,omitempty" json:"ValueVat,omitempty"`

	ValueGross *FieldDecimal `xml:"ValueGross,omitempty" json:"ValueGross,omitempty"`
}

type TradingActivity struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TradingActivity"`

	State *FieldString `xml:"State,omitempty" json:"State,omitempty"`

	PlanData *PlanData `xml:"PlanData,omitempty" json:"PlanData,omitempty"`

	Purchase *Purchase `xml:"Purchase,omitempty" json:"Purchase,omitempty"`

	PriceCalculation *PriceCalculation `xml:"PriceCalculation,omitempty" json:"PriceCalculation,omitempty"`

	Admission *Admission `xml:"Admission,omitempty" json:"Admission,omitempty"`

	Sale *Sale `xml:"Sale,omitempty" json:"Sale,omitempty"`

	SalesPreparation *SalesPreparation `xml:"SalesPreparation,omitempty" json:"SalesPreparation,omitempty"`
}

type TradingAdditional struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TradingAdditional"`

	MarketplacePreparation *MarketplacePreparation `xml:"MarketplacePreparation,omitempty" json:"MarketplacePreparation,omitempty"`

	PurchaseOfferList struct {
		PurchaseOffer []*PurchaseOffer `xml:"PurchaseOffer,omitempty" json:"PurchaseOffer,omitempty"`
	} `xml:"PurchaseOfferList,omitempty" json:"PurchaseOfferList,omitempty"`

	SalesOfferList struct {
		SalesOffer []*SalesOffer `xml:"SalesOffer,omitempty" json:"SalesOffer,omitempty"`
	} `xml:"SalesOfferList,omitempty" json:"SalesOfferList,omitempty"`
}

type TradingData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs TradingData"`

	PurchasePriceNet *FieldDecimal `xml:"PurchasePriceNet,omitempty" json:"PurchasePriceNet,omitempty"`

	PurchasePriceGross *FieldDecimal `xml:"PurchasePriceGross,omitempty" json:"PurchasePriceGross,omitempty"`

	SalesPriceNet *FieldDecimal `xml:"SalesPriceNet,omitempty" json:"SalesPriceNet,omitempty"`

	SalesPriceGross *FieldDecimal `xml:"SalesPriceGross,omitempty" json:"SalesPriceGross,omitempty"`

	ExportReportState *FieldString `xml:"ExportReportState,omitempty" json:"ExportReportState,omitempty"`

	OwnType *FieldString `xml:"OwnType,omitempty" json:"OwnType,omitempty"`

	ClaimFormId *FieldString `xml:"ClaimFormId,omitempty" json:"ClaimFormId,omitempty"`

	EuVehicle *FieldBoolean `xml:"EuVehicle,omitempty" json:"EuVehicle,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	Owner *Address `xml:"Owner,omitempty" json:"Owner,omitempty"`

	PrevOwner *Address `xml:"PrevOwner,omitempty" json:"PrevOwner,omitempty"`

	Buyer *Address `xml:"Buyer,omitempty" json:"Buyer,omitempty"`

	Reservation *Address `xml:"Reservation,omitempty" json:"Reservation,omitempty"`

	Insurance *Address `xml:"Insurance,omitempty" json:"Insurance,omitempty"`

	Insurant *Address `xml:"Insurant,omitempty" json:"Insurant,omitempty"`

	Driver *Address `xml:"Driver,omitempty" json:"Driver,omitempty"`

	Garage *Address `xml:"Garage,omitempty" json:"Garage,omitempty"`

	Opponent *Address `xml:"Opponent,omitempty" json:"Opponent,omitempty"`

	Expert *Address `xml:"Expert,omitempty" json:"Expert,omitempty"`

	Dealership *Address `xml:"Dealership,omitempty" json:"Dealership,omitempty"`

	AccidentPlace *Address `xml:"AccidentPlace,omitempty" json:"AccidentPlace,omitempty"`

	InspectionPlace *Address `xml:"InspectionPlace,omitempty" json:"InspectionPlace,omitempty"`

	InsuranceBroker *Address `xml:"InsuranceBroker,omitempty" json:"InsuranceBroker,omitempty"`

	ClientContactAddresses *ClientContactAddresses `xml:"ClientContactAddresses,omitempty" json:"ClientContactAddresses,omitempty"`

	Prospects *Prospects `xml:"Prospects,omitempty" json:"Prospects,omitempty"`

	AddonList *AddonList `xml:"AddonList,omitempty" json:"AddonList,omitempty"`
}

type UpperBody struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs UpperBody"`

	UpperBodyType *FieldInteger `xml:"UpperBodyType,omitempty" json:"UpperBodyType,omitempty"`

	UpperBodyTypeName *FieldString `xml:"UpperBodyTypeName,omitempty" json:"UpperBodyTypeName,omitempty"`

	DatUpperBodyTypeName *FieldString `xml:"DatUpperBodyTypeName,omitempty" json:"DatUpperBodyTypeName,omitempty"`

	Manufacturer *FieldInteger `xml:"Manufacturer,omitempty" json:"Manufacturer,omitempty"`

	ManufacturerName *FieldString `xml:"ManufacturerName,omitempty" json:"ManufacturerName,omitempty"`

	DatManufacturerName *FieldString `xml:"DatManufacturerName,omitempty" json:"DatManufacturerName,omitempty"`

	MainModel *FieldInteger `xml:"MainModel,omitempty" json:"MainModel,omitempty"`

	MainModelName *FieldString `xml:"MainModelName,omitempty" json:"MainModelName,omitempty"`

	DatMainModelName *FieldString `xml:"DatMainModelName,omitempty" json:"DatMainModelName,omitempty"`

	SubModel *FieldInteger `xml:"SubModel,omitempty" json:"SubModel,omitempty"`

	SubModelName *FieldString `xml:"SubModelName,omitempty" json:"SubModelName,omitempty"`

	DatSubModelName *FieldString `xml:"DatSubModelName,omitempty" json:"DatSubModelName,omitempty"`

	InitialRegistration *FieldDate `xml:"InitialRegistration,omitempty" json:"InitialRegistration,omitempty"`

	IdentificationNumber *FieldString `xml:"IdentificationNumber,omitempty" json:"IdentificationNumber,omitempty"`

	UpperBodyColor *FieldString `xml:"UpperBodyColor,omitempty" json:"UpperBodyColor,omitempty"`

	PaintLabelDescription *FieldString `xml:"PaintLabelDescription,omitempty" json:"PaintLabelDescription,omitempty"`

	OriginalPrice *FieldDecimal `xml:"OriginalPrice,omitempty" json:"OriginalPrice,omitempty"`

	DatOriginalPrice *FieldDecimal `xml:"DatOriginalPrice,omitempty" json:"DatOriginalPrice,omitempty"`

	OriginalPriceGross *FieldDecimal `xml:"OriginalPriceGross,omitempty" json:"OriginalPriceGross,omitempty"`

	DatOriginalPriceGross *FieldDecimal `xml:"DatOriginalPriceGross,omitempty" json:"DatOriginalPriceGross,omitempty"`

	GeneralCondition *FieldDecimal `xml:"GeneralCondition,omitempty" json:"GeneralCondition,omitempty"`

	DatGeneralCondition *FieldDecimal `xml:"DatGeneralCondition,omitempty" json:"DatGeneralCondition,omitempty"`

	BasePrice *FieldDecimal `xml:"BasePrice,omitempty" json:"BasePrice,omitempty"`

	DatBasePrice *FieldDecimal `xml:"DatBasePrice,omitempty" json:"DatBasePrice,omitempty"`

	BasePriceGross *FieldDecimal `xml:"BasePriceGross,omitempty" json:"BasePriceGross,omitempty"`

	DatBasePriceGross *FieldDecimal `xml:"DatBasePriceGross,omitempty" json:"DatBasePriceGross,omitempty"`

	SalesPrice *FieldDecimal `xml:"SalesPrice,omitempty" json:"SalesPrice,omitempty"`

	DatSalesPrice *FieldDecimal `xml:"DatSalesPrice,omitempty" json:"DatSalesPrice,omitempty"`

	SalesPriceGross *FieldDecimal `xml:"SalesPriceGross,omitempty" json:"SalesPriceGross,omitempty"`

	DatSalesPriceGross *FieldDecimal `xml:"DatSalesPriceGross,omitempty" json:"DatSalesPriceGross,omitempty"`

	IsDisengaged *FieldBoolean `xml:"IsDisengaged,omitempty" json:"IsDisengaged,omitempty"`

	TechInfo *TechInfo `xml:"TechInfo,omitempty" json:"TechInfo,omitempty"`

	Equipment *Equipment `xml:"Equipment,omitempty" json:"Equipment,omitempty"`

	CoolingUnit *CoolingUnit `xml:"CoolingUnit,omitempty" json:"CoolingUnit,omitempty"`

	Condition *Condition `xml:"Condition,omitempty" json:"Condition,omitempty"`
}

type Usage struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Usage"`

	Value string `xml:",chardata" json:"-,"`

	Type int32 `xml:"type,attr,omitempty" json:"type,omitempty"`
}

type VAT struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VAT"`

	VatType *FieldString `xml:"VatType,omitempty" json:"VatType,omitempty"`

	VatAtConstructionTime *FieldDecimal `xml:"VatAtConstructionTime,omitempty" json:"VatAtConstructionTime,omitempty"`

	DatVatAtConstructionTime *FieldDecimal `xml:"DatVatAtConstructionTime,omitempty" json:"DatVatAtConstructionTime,omitempty"`

	BaseVatAtConstructionTime *FieldDecimal `xml:"BaseVatAtConstructionTime,omitempty" json:"BaseVatAtConstructionTime,omitempty"`

	DatBaseVatAtConstructionTime *FieldDecimal `xml:"DatBaseVatAtConstructionTime,omitempty" json:"DatBaseVatAtConstructionTime,omitempty"`

	AddOnTaxAtConstructionTime *FieldDecimal `xml:"AddOnTaxAtConstructionTime,omitempty" json:"AddOnTaxAtConstructionTime,omitempty"`

	AddOnTaxApplication *FieldString `xml:"AddOnTaxApplication,omitempty" json:"AddOnTaxApplication,omitempty"`

	PostTaxDifference *FieldDecimal `xml:"PostTaxDifference,omitempty" json:"PostTaxDifference,omitempty"`

	VatAtValuationTime *FieldDecimal `xml:"VatAtValuationTime,omitempty" json:"VatAtValuationTime,omitempty"`

	DatVatAtValuationTime *FieldDecimal `xml:"DatVatAtValuationTime,omitempty" json:"DatVatAtValuationTime,omitempty"`

	VatAtCalculationTime *FieldDecimal `xml:"VatAtCalculationTime,omitempty" json:"VatAtCalculationTime,omitempty"`

	VatAtSalesTime *FieldDecimal `xml:"VatAtSalesTime,omitempty" json:"VatAtSalesTime,omitempty"`

	DatVatAtSalesTime *FieldDecimal `xml:"DatVatAtSalesTime,omitempty" json:"DatVatAtSalesTime,omitempty"`

	VatAtPurchaseTime *FieldDecimal `xml:"VatAtPurchaseTime,omitempty" json:"VatAtPurchaseTime,omitempty"`

	DatVatAtPurchaseTime *FieldDecimal `xml:"DatVatAtPurchaseTime,omitempty" json:"DatVatAtPurchaseTime,omitempty"`

	VATReplacementPartAtCalculationTime *FieldDecimal `xml:"VATReplacementPartAtCalculationTime,omitempty" json:"VATReplacementPartAtCalculationTime,omitempty"`
}

type VINColor struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINColor"`

	ColorID *FieldString `xml:"ColorID,omitempty" json:"ColorID,omitempty"`

	Code *FieldString `xml:"Code,omitempty" json:"Code,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	StandardColor *FieldString `xml:"StandardColor,omitempty" json:"StandardColor,omitempty"`

	PaintType *FieldString `xml:"PaintType,omitempty" json:"PaintType,omitempty"`

	CountCoat *FieldString `xml:"CountCoat,omitempty" json:"CountCoat,omitempty"`
}

type VINColors struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINColors"`

	VINColor []*VINColor `xml:"VINColor,omitempty" json:"VINColor,omitempty"`
}

type VINContainer struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINContainer"`

	Container *FieldString `xml:"Container,omitempty" json:"Container,omitempty"`

	VehicleTypeKey *FieldInteger `xml:"VehicleTypeKey,omitempty" json:"VehicleTypeKey,omitempty"`

	ManufacturerKey *FieldInteger `xml:"ManufacturerKey,omitempty" json:"ManufacturerKey,omitempty"`

	VehicleMainTypeKey *FieldInteger `xml:"VehicleMainTypeKey,omitempty" json:"VehicleMainTypeKey,omitempty"`

	VehicleSubTypeKey *FieldInteger `xml:"VehicleSubTypeKey,omitempty" json:"VehicleSubTypeKey,omitempty"`

	VehicleConstructionTime *FieldInteger `xml:"VehicleConstructionTime,omitempty" json:"VehicleConstructionTime,omitempty"`
}

type VINContainers struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINContainers"`

	VINContainer []*VINContainer `xml:"VINContainer,omitempty" json:"VINContainer,omitempty"`
}

type VINECode struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINECode"`

	Sign *FieldInteger `xml:"Sign,omitempty" json:"Sign,omitempty"`

	Country *FieldString3 `xml:"Country,omitempty" json:"Country,omitempty"`

	VehicleTypeKey *FieldInteger `xml:"VehicleTypeKey,omitempty" json:"VehicleTypeKey,omitempty"`

	ManufacturerKey *FieldInteger `xml:"ManufacturerKey,omitempty" json:"ManufacturerKey,omitempty"`

	VehicleMainTypeKey *FieldInteger `xml:"VehicleMainTypeKey,omitempty" json:"VehicleMainTypeKey,omitempty"`

	VehicleSubTypeKey *FieldInteger `xml:"VehicleSubTypeKey,omitempty" json:"VehicleSubTypeKey,omitempty"`

	VehicleSubTypeVariantKey *FieldInteger `xml:"VehicleSubTypeVariantKey,omitempty" json:"VehicleSubTypeVariantKey,omitempty"`

	ConstructionTimeMin *FieldInteger `xml:"ConstructionTimeMin,omitempty" json:"ConstructionTimeMin,omitempty"`

	ConstructionTime *FieldInteger `xml:"ConstructionTime,omitempty" json:"ConstructionTime,omitempty"`

	ConstructionTimeEdge *FieldInteger `xml:"ConstructionTimeEdge,omitempty" json:"ConstructionTimeEdge,omitempty"`

	ConstructionTimeProd *FieldInteger `xml:"ConstructionTimeProd,omitempty" json:"ConstructionTimeProd,omitempty"`

	ConstructionTimePriceList *FieldInteger `xml:"ConstructionTimePriceList,omitempty" json:"ConstructionTimePriceList,omitempty"`

	VINContainers *VINContainers `xml:"VINContainers,omitempty" json:"VINContainers,omitempty"`
}

type VINECodes struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINECodes"`

	VINECode []*VINECode `xml:"VINECode,omitempty" json:"VINECode,omitempty"`
}

type VINEquipment struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINEquipment"`

	AvNumberDat *FieldInteger `xml:"AvNumberDat,omitempty" json:"AvNumberDat,omitempty"`

	ManufacturerCode *FieldString `xml:"ManufacturerCode,omitempty" json:"ManufacturerCode,omitempty"`

	ShortName *FieldString `xml:"ShortName,omitempty" json:"ShortName,omitempty"`
}

type VINEquipments struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINEquipments"`

	VINEquipment []*VINEquipment `xml:"VINEquipment,omitempty" json:"VINEquipment,omitempty"`
}

type VINResult struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINResult"`

	VinInterfaceVersion *FieldString `xml:"VinInterfaceVersion,omitempty" json:"VinInterfaceVersion,omitempty"`

	VinDatProcedure *FieldBoolean `xml:"VinDatProcedure,omitempty" json:"VinDatProcedure,omitempty"`

	CrossBorder *FieldBoolean `xml:"CrossBorder,omitempty" json:"CrossBorder,omitempty"`

	VINECodes *VINECodes `xml:"VINECodes,omitempty" json:"VINECodes,omitempty"`

	VINEquipments *VINEquipments `xml:"VINEquipments,omitempty" json:"VINEquipments,omitempty"`

	VINColors *VINColors `xml:"VINColors,omitempty" json:"VINColors,omitempty"`

	VINVehicle *VINVehicle `xml:"VINVehicle,omitempty" json:"VINVehicle,omitempty"`
}

type VINVehicle struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINVehicle"`

	VINumber *VINumber `xml:"VINumber,omitempty" json:"VINumber,omitempty"`

	ManufacturerCarCode *FieldString `xml:"ManufacturerCarCode,omitempty" json:"ManufacturerCarCode,omitempty"`

	ManufacturerEngineCode *FieldString `xml:"ManufacturerEngineCode,omitempty" json:"ManufacturerEngineCode,omitempty"`

	ManufacturerTransmissionCode *FieldString `xml:"ManufacturerTransmissionCode,omitempty" json:"ManufacturerTransmissionCode,omitempty"`
}

type VINumber struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VINumber"`

	VinCode *FieldString `xml:"VinCode,omitempty" json:"VinCode,omitempty"`

	OrderCode *FieldString `xml:"OrderCode,omitempty" json:"OrderCode,omitempty"`

	Manufacturer *FieldString `xml:"Manufacturer,omitempty" json:"Manufacturer,omitempty"`
}

type Valuation struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Valuation"`

	OriginalPrice *FieldDecimal `xml:"OriginalPrice,omitempty" json:"OriginalPrice,omitempty"`

	DatOriginalPrice *FieldDecimal `xml:"DatOriginalPrice,omitempty" json:"DatOriginalPrice,omitempty"`

	OriginalPriceGross *FieldDecimal `xml:"OriginalPriceGross,omitempty" json:"OriginalPriceGross,omitempty"`

	DatOriginalPriceGross *FieldDecimal `xml:"DatOriginalPriceGross,omitempty" json:"DatOriginalPriceGross,omitempty"`

	PrognosisDate *FieldDate `xml:"PrognosisDate,omitempty" json:"PrognosisDate,omitempty"`

	PricelistDate *FieldDate `xml:"PricelistDate,omitempty" json:"PricelistDate,omitempty"`

	BasePrice *FieldDecimal `xml:"BasePrice,omitempty" json:"BasePrice,omitempty"`

	DatBasePrice *FieldDecimal `xml:"DatBasePrice,omitempty" json:"DatBasePrice,omitempty"`

	Mileage *FieldDecimal `xml:"Mileage,omitempty" json:"Mileage,omitempty"`

	ReferenceMileage *FieldDecimal `xml:"ReferenceMileage,omitempty" json:"ReferenceMileage,omitempty"`

	MileageCorr *FieldDecimal `xml:"MileageCorr,omitempty" json:"MileageCorr,omitempty"`

	DatMileageCorr *FieldDecimal `xml:"DatMileageCorr,omitempty" json:"DatMileageCorr,omitempty"`

	LimitationMileageCorrPerc *FieldDecimal `xml:"LimitationMileageCorrPerc,omitempty" json:"LimitationMileageCorrPerc,omitempty"`

	ResidualValueModel *FieldString `xml:"ResidualValueModel,omitempty" json:"ResidualValueModel,omitempty"`

	AdditionalManualMileageCorr *FieldDecimal `xml:"AdditionalManualMileageCorr,omitempty" json:"AdditionalManualMileageCorr,omitempty"`

	MinValue4MileageCorr *FieldInteger `xml:"MinValue4MileageCorr,omitempty" json:"MinValue4MileageCorr,omitempty"`

	MaxValue4MileageCorr *FieldInteger `xml:"MaxValue4MileageCorr,omitempty" json:"MaxValue4MileageCorr,omitempty"`

	InitialRegistrationCorr *FieldDecimal `xml:"InitialRegistrationCorr,omitempty" json:"InitialRegistrationCorr,omitempty"`

	DatInitialRegistrationCorr *FieldDecimal `xml:"DatInitialRegistrationCorr,omitempty" json:"DatInitialRegistrationCorr,omitempty"`

	DevaluationFactorPerc *FieldDecimal `xml:"DevaluationFactorPerc,omitempty" json:"DevaluationFactorPerc,omitempty"`

	DatDevaluationFactorPerc *FieldDecimal `xml:"DatDevaluationFactorPerc,omitempty" json:"DatDevaluationFactorPerc,omitempty"`

	BasePrice2 *FieldDecimal `xml:"BasePrice2,omitempty" json:"BasePrice2,omitempty"`

	DatBasePrice2 *FieldDecimal `xml:"DatBasePrice2,omitempty" json:"DatBasePrice2,omitempty"`

	EquipmentSign *FieldString `xml:"EquipmentSign,omitempty" json:"EquipmentSign,omitempty"`

	ManualEquipmentOriginalPrice *FieldDecimal `xml:"ManualEquipmentOriginalPrice,omitempty" json:"ManualEquipmentOriginalPrice,omitempty"`

	EquipmentOriginalPrice *FieldDecimal `xml:"EquipmentOriginalPrice,omitempty" json:"EquipmentOriginalPrice,omitempty"`

	DatEquipmentOriginalPrice *FieldDecimal `xml:"DatEquipmentOriginalPrice,omitempty" json:"DatEquipmentOriginalPrice,omitempty"`

	EquipmentPercentage *FieldInteger `xml:"EquipmentPercentage,omitempty" json:"EquipmentPercentage,omitempty"`

	EquipmentDecreaseType *FieldString `xml:"EquipmentDecreaseType,omitempty" json:"EquipmentDecreaseType,omitempty"`

	EquipmentDecreaseTypeRemaining *FieldString `xml:"EquipmentDecreaseTypeRemaining,omitempty" json:"EquipmentDecreaseTypeRemaining,omitempty"`

	EquipmentPrice *FieldDecimal `xml:"EquipmentPrice,omitempty" json:"EquipmentPrice,omitempty"`

	DatEquipmentPrice *FieldDecimal `xml:"DatEquipmentPrice,omitempty" json:"DatEquipmentPrice,omitempty"`

	UpperBodiesPrice *FieldDecimal `xml:"UpperBodiesPrice,omitempty" json:"UpperBodiesPrice,omitempty"`

	DatUpperBodiesPrice *FieldDecimal `xml:"DatUpperBodiesPrice,omitempty" json:"DatUpperBodiesPrice,omitempty"`

	ValuationCorrection *FieldDecimal `xml:"ValuationCorrection,omitempty" json:"ValuationCorrection,omitempty"`

	DatValuationCorrection *FieldDecimal `xml:"DatValuationCorrection,omitempty" json:"DatValuationCorrection,omitempty"`

	BasePrice3 *FieldDecimal `xml:"BasePrice3,omitempty" json:"BasePrice3,omitempty"`

	DatBasePrice3 *FieldDecimal `xml:"DatBasePrice3,omitempty" json:"DatBasePrice3,omitempty"`

	ConditionCorrectionPerc *FieldDecimal `xml:"ConditionCorrectionPerc,omitempty" json:"ConditionCorrectionPerc,omitempty"`

	DatConditionCorrectionPerc *FieldDecimal `xml:"DatConditionCorrectionPerc,omitempty" json:"DatConditionCorrectionPerc,omitempty"`

	SalesPrice *FieldDecimal `xml:"SalesPrice,omitempty" json:"SalesPrice,omitempty"`

	SalesPriceRounded *FieldDecimal `xml:"SalesPriceRounded,omitempty" json:"SalesPriceRounded,omitempty"`

	SalesPricePrognosis *FieldDecimal `xml:"SalesPricePrognosis,omitempty" json:"SalesPricePrognosis,omitempty"`

	DatSalesPrice *FieldDecimal `xml:"DatSalesPrice,omitempty" json:"DatSalesPrice,omitempty"`

	DatSalesPriceRounded *FieldDecimal `xml:"DatSalesPriceRounded,omitempty" json:"DatSalesPriceRounded,omitempty"`

	SalesPriceGross *FieldDecimal `xml:"SalesPriceGross,omitempty" json:"SalesPriceGross,omitempty"`

	SalesPriceGrossRounded *FieldDecimal `xml:"SalesPriceGrossRounded,omitempty" json:"SalesPriceGrossRounded,omitempty"`

	SalesPricePrognosisGross *FieldDecimal `xml:"SalesPricePrognosisGross,omitempty" json:"SalesPricePrognosisGross,omitempty"`

	DatSalesPriceGross *FieldDecimal `xml:"DatSalesPriceGross,omitempty" json:"DatSalesPriceGross,omitempty"`

	DatSalesPriceGrossRounded *FieldDecimal `xml:"DatSalesPriceGrossRounded,omitempty" json:"DatSalesPriceGrossRounded,omitempty"`

	Margin *FieldDecimal `xml:"Margin,omitempty" json:"Margin,omitempty"`

	MarginRounded *FieldDecimal `xml:"MarginRounded,omitempty" json:"MarginRounded,omitempty"`

	DatMargin *FieldDecimal `xml:"DatMargin,omitempty" json:"DatMargin,omitempty"`

	DatMarginRounded *FieldDecimal `xml:"DatMarginRounded,omitempty" json:"DatMarginRounded,omitempty"`

	MarginGross *FieldDecimal `xml:"MarginGross,omitempty" json:"MarginGross,omitempty"`

	MarginGrossRounded *FieldDecimal `xml:"MarginGrossRounded,omitempty" json:"MarginGrossRounded,omitempty"`

	MarginPrognosis *FieldDecimal `xml:"MarginPrognosis,omitempty" json:"MarginPrognosis,omitempty"`

	MarginPrognosisGross *FieldDecimal `xml:"MarginPrognosisGross,omitempty" json:"MarginPrognosisGross,omitempty"`

	DatMarginGross *FieldDecimal `xml:"DatMarginGross,omitempty" json:"DatMarginGross,omitempty"`

	DatMarginGrossRounded *FieldDecimal `xml:"DatMarginGrossRounded,omitempty" json:"DatMarginGrossRounded,omitempty"`

	PurchasePrice *FieldDecimal `xml:"PurchasePrice,omitempty" json:"PurchasePrice,omitempty"`

	PurchasePriceRounded *FieldDecimal `xml:"PurchasePriceRounded,omitempty" json:"PurchasePriceRounded,omitempty"`

	PurchasePricePrognosis *FieldDecimal `xml:"PurchasePricePrognosis,omitempty" json:"PurchasePricePrognosis,omitempty"`

	DatPurchasePrice *FieldDecimal `xml:"DatPurchasePrice,omitempty" json:"DatPurchasePrice,omitempty"`

	DatPurchasePriceRounded *FieldDecimal `xml:"DatPurchasePriceRounded,omitempty" json:"DatPurchasePriceRounded,omitempty"`

	PurchasePriceGross *FieldDecimal `xml:"PurchasePriceGross,omitempty" json:"PurchasePriceGross,omitempty"`

	PurchasePriceGrossRounded *FieldDecimal `xml:"PurchasePriceGrossRounded,omitempty" json:"PurchasePriceGrossRounded,omitempty"`

	PurchasePricePrognosisGross *FieldDecimal `xml:"PurchasePricePrognosisGross,omitempty" json:"PurchasePricePrognosisGross,omitempty"`

	DatPurchasePriceGross *FieldDecimal `xml:"DatPurchasePriceGross,omitempty" json:"DatPurchasePriceGross,omitempty"`

	DatPurchasePriceGrossRounded *FieldDecimal `xml:"DatPurchasePriceGrossRounded,omitempty" json:"DatPurchasePriceGrossRounded,omitempty"`

	LastValuationDataYear *FieldInteger `xml:"LastValuationDataYear,omitempty" json:"LastValuationDataYear,omitempty"`

	LastValuationDataMonth *FieldInteger `xml:"LastValuationDataMonth,omitempty" json:"LastValuationDataMonth,omitempty"`

	LastValuationDataMonthSer *FieldInteger `xml:"LastValuationDataMonthSer,omitempty" json:"LastValuationDataMonthSer,omitempty"`

	PrognosisMileageDat *FieldInteger `xml:"PrognosisMileageDat,omitempty" json:"PrognosisMileageDat,omitempty"`

	PrognosisMileageUser *FieldInteger `xml:"PrognosisMileageUser,omitempty" json:"PrognosisMileageUser,omitempty"`

	LastValuationDate *FieldDateTime `xml:"LastValuationDate,omitempty" json:"LastValuationDate,omitempty"`

	ExpertsSurveyDate *FieldDate `xml:"ExpertsSurveyDate,omitempty" json:"ExpertsSurveyDate,omitempty"`

	SurveyorUserId *FieldString `xml:"SurveyorUserId,omitempty" json:"SurveyorUserId,omitempty"`

	Currency *FieldString `xml:"Currency,omitempty" json:"Currency,omitempty"`

	DefaultPlatformPresent *FieldString `xml:"DefaultPlatformPresent,omitempty" json:"DefaultPlatformPresent,omitempty"`

	SignMilageUnit *FieldString `xml:"SignMilageUnit,omitempty" json:"SignMilageUnit,omitempty"`

	Obsolete *FieldString `xml:"Obsolete,omitempty" json:"Obsolete,omitempty"`

	ObsoletePrognosis *FieldInteger `xml:"ObsoletePrognosis,omitempty" json:"ObsoletePrognosis,omitempty"`

	DisplayGross *FieldBoolean `xml:"DisplayGross,omitempty" json:"DisplayGross,omitempty"`

	DisplayRounded *FieldBoolean `xml:"DisplayRounded,omitempty" json:"DisplayRounded,omitempty"`

	ResultInformation *FieldString `xml:"ResultInformation,omitempty" json:"ResultInformation,omitempty"`

	DefaultTiresPrice *FieldDecimal `xml:"DefaultTiresPrice,omitempty" json:"DefaultTiresPrice,omitempty"`

	DatDefaultTiresPrice *FieldDecimal `xml:"DatDefaultTiresPrice,omitempty" json:"DatDefaultTiresPrice,omitempty"`

	SignDeterminatedDate *FieldBoolean `xml:"SignDeterminatedDate,omitempty" json:"SignDeterminatedDate,omitempty"`

	DeterminatedDate *FieldDate `xml:"DeterminatedDate,omitempty" json:"DeterminatedDate,omitempty"`

	Version *FieldString4 `xml:"Version,omitempty" json:"Version,omitempty"`

	Approval *FieldString `xml:"Approval,omitempty" json:"Approval,omitempty"`

	ContractNo *FieldString `xml:"ContractNo,omitempty" json:"ContractNo,omitempty"`

	ValuationType *FieldString `xml:"ValuationType,omitempty" json:"ValuationType,omitempty"`

	ExtendedMileageCorrection *FieldBoolean `xml:"ExtendedMileageCorrection,omitempty" json:"ExtendedMileageCorrection,omitempty"`

	ModelYear *FieldInteger `xml:"ModelYear,omitempty" json:"ModelYear,omitempty"`

	RegionNo *FieldInteger `xml:"RegionNo,omitempty" json:"RegionNo,omitempty"`

	Region *FieldString `xml:"Region,omitempty" json:"Region,omitempty"`

	Condition *Condition `xml:"Condition,omitempty" json:"Condition,omitempty"`

	Parameters *Parameters `xml:"Parameters,omitempty" json:"Parameters,omitempty"`

	Forecasts *Forecasts `xml:"Forecasts,omitempty" json:"Forecasts,omitempty"`

	CountryFlagAfterSale *FieldString3 `xml:"CountryFlagAfterSale,omitempty" json:"CountryFlagAfterSale,omitempty"`

	CountryFlagBeforeSale *FieldString3 `xml:"CountryFlagBeforeSale,omitempty" json:"CountryFlagBeforeSale,omitempty"`

	Vehicle *Vehicle `xml:"Vehicle,omitempty" json:"Vehicle,omitempty"`
}

type ValueInfluencingFactor struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs ValueInfluencingFactor"`

	GroupKey *FieldString `xml:"GroupKey,omitempty" json:"GroupKey,omitempty"`

	Type *FieldString `xml:"Type,omitempty" json:"Type,omitempty"`

	CalculationType *FieldString `xml:"CalculationType,omitempty" json:"CalculationType,omitempty"`

	Fixed *FieldBoolean `xml:"Fixed,omitempty" json:"Fixed,omitempty"`

	CostCalculationType *FieldString `xml:"CostCalculationType,omitempty" json:"CostCalculationType,omitempty"`

	IntervalInMonths *FieldInteger `xml:"IntervalInMonths,omitempty" json:"IntervalInMonths,omitempty"`

	Name *FieldString `xml:"Name,omitempty" json:"Name,omitempty"`

	AmountFixed *FieldDecimal `xml:"AmountFixed,omitempty" json:"AmountFixed,omitempty"`

	AmountPerc *FieldDecimal `xml:"AmountPerc,omitempty" json:"AmountPerc,omitempty"`

	AmountPercMinValue *FieldDecimal `xml:"AmountPercMinValue,omitempty" json:"AmountPercMinValue,omitempty"`

	AmountPercMaxValue *FieldDecimal `xml:"AmountPercMaxValue,omitempty" json:"AmountPercMaxValue,omitempty"`

	ModificationType *FieldString `xml:"ModificationType,omitempty" json:"ModificationType,omitempty"`
}

type Vehicle struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Vehicle"`

	VehicleIdentNumber *FieldString17 `xml:"VehicleIdentNumber,omitempty" json:"VehicleIdentNumber,omitempty"`

	DatECode *FieldString15 `xml:"DatECode,omitempty" json:"DatECode,omitempty"`

	Container *FieldString5 `xml:"Container,omitempty" json:"Container,omitempty"`

	ConstructionYear *FieldInteger `xml:"ConstructionYear,omitempty" json:"ConstructionYear,omitempty"`

	DatConstructionYear *FieldInteger `xml:"DatConstructionYear,omitempty" json:"DatConstructionYear,omitempty"`

	ConstructionMonth *FieldInteger `xml:"ConstructionMonth,omitempty" json:"ConstructionMonth,omitempty"`

	ConstructionTime *FieldInteger `xml:"ConstructionTime,omitempty" json:"ConstructionTime,omitempty"`

	ConstructionTimeFrom *FieldInteger `xml:"ConstructionTimeFrom,omitempty" json:"ConstructionTimeFrom,omitempty"`

	ConstructionTimeTo *FieldInteger `xml:"ConstructionTimeTo,omitempty" json:"ConstructionTimeTo,omitempty"`

	ConstructionTimePriceList *FieldInteger `xml:"ConstructionTimePriceList,omitempty" json:"ConstructionTimePriceList,omitempty"`

	InitialRegistration *FieldDate `xml:"InitialRegistration,omitempty" json:"InitialRegistration,omitempty"`

	RecentRegistration *FieldDate `xml:"RecentRegistration,omitempty" json:"RecentRegistration,omitempty"`

	MileageEstimated *FieldInteger `xml:"MileageEstimated,omitempty" json:"MileageEstimated,omitempty"`

	MileageOdometer *FieldInteger `xml:"MileageOdometer,omitempty" json:"MileageOdometer,omitempty"`

	MileageAccordingUser *FieldDecimal `xml:"MileageAccordingUser,omitempty" json:"MileageAccordingUser,omitempty"`

	MileageType *FieldString60 `xml:"MileageType,omitempty" json:"MileageType,omitempty"`

	MileageComment *FieldString `xml:"MileageComment,omitempty" json:"MileageComment,omitempty"`

	SalesDescription *FieldString4000 `xml:"SalesDescription,omitempty" json:"SalesDescription,omitempty"`

	VehicleTypeName *FieldString80 `xml:"VehicleTypeName,omitempty" json:"VehicleTypeName,omitempty"`

	VehicleTypeNameN *FieldString80 `xml:"VehicleTypeNameN,omitempty" json:"VehicleTypeNameN,omitempty"`

	DatVehicleTypeNameN *FieldString80 `xml:"DatVehicleTypeNameN,omitempty" json:"DatVehicleTypeNameN,omitempty"`

	ManufacturerName *FieldString80 `xml:"ManufacturerName,omitempty" json:"ManufacturerName,omitempty"`

	DatManufacturerName *FieldString80 `xml:"DatManufacturerName,omitempty" json:"DatManufacturerName,omitempty"`

	BaseModelName *FieldString80 `xml:"BaseModelName,omitempty" json:"BaseModelName,omitempty"`

	DatBaseModelName *FieldString80 `xml:"DatBaseModelName,omitempty" json:"DatBaseModelName,omitempty"`

	SubModelName *FieldString80 `xml:"SubModelName,omitempty" json:"SubModelName,omitempty"`

	DatSubModelName *FieldString80 `xml:"DatSubModelName,omitempty" json:"DatSubModelName,omitempty"`

	EngineNameManual *FieldString80 `xml:"EngineNameManual,omitempty" json:"EngineNameManual,omitempty"`

	BodyNameManual *FieldString80 `xml:"BodyNameManual,omitempty" json:"BodyNameManual,omitempty"`

	WheelbaseNameManual *FieldString80 `xml:"WheelbaseNameManual,omitempty" json:"WheelbaseNameManual,omitempty"`

	PropulsionNameManual *FieldString80 `xml:"PropulsionNameManual,omitempty" json:"PropulsionNameManual,omitempty"`

	DrivingCabNameManual *FieldString80 `xml:"DrivingCabNameManual,omitempty" json:"DrivingCabNameManual,omitempty"`

	TonnageNameManual *FieldString80 `xml:"TonnageNameManual,omitempty" json:"TonnageNameManual,omitempty"`

	ConstructionNameManual *FieldString80 `xml:"ConstructionNameManual,omitempty" json:"ConstructionNameManual,omitempty"`

	SuspensionNameManual *FieldString80 `xml:"SuspensionNameManual,omitempty" json:"SuspensionNameManual,omitempty"`

	AxleCountNameManual *FieldString80 `xml:"AxleCountNameManual,omitempty" json:"AxleCountNameManual,omitempty"`

	EquipmentLineNameManual *FieldString80 `xml:"EquipmentLineNameManual,omitempty" json:"EquipmentLineNameManual,omitempty"`

	GearboxNameManual *FieldString80 `xml:"GearboxNameManual,omitempty" json:"GearboxNameManual,omitempty"`

	ContainerName *FieldString `xml:"ContainerName,omitempty" json:"ContainerName,omitempty"`

	ContainerNameN *FieldString80 `xml:"ContainerNameN,omitempty" json:"ContainerNameN,omitempty"`

	DatContainerNameN *FieldString80 `xml:"DatContainerNameN,omitempty" json:"DatContainerNameN,omitempty"`

	MainTypeGroupName *FieldString `xml:"MainTypeGroupName,omitempty" json:"MainTypeGroupName,omitempty"`

	VehicleType *FieldInteger `xml:"VehicleType,omitempty" json:"VehicleType,omitempty"`

	Manufacturer *FieldInteger `xml:"Manufacturer,omitempty" json:"Manufacturer,omitempty"`

	BaseModel *FieldInteger `xml:"BaseModel,omitempty" json:"BaseModel,omitempty"`

	AlternativeVehicleType *FieldInteger `xml:"AlternativeVehicleType,omitempty" json:"AlternativeVehicleType,omitempty"`

	AlternativeManufacturer *FieldInteger `xml:"AlternativeManufacturer,omitempty" json:"AlternativeManufacturer,omitempty"`

	AlternativeBaseModel *FieldInteger `xml:"AlternativeBaseModel,omitempty" json:"AlternativeBaseModel,omitempty"`

	SubModel *FieldInteger `xml:"SubModel,omitempty" json:"SubModel,omitempty"`

	AlternativeSubModel *FieldInteger `xml:"AlternativeSubModel,omitempty" json:"AlternativeSubModel,omitempty"`

	MainTypeGroup *FieldString `xml:"MainTypeGroup,omitempty" json:"MainTypeGroup,omitempty"`

	IdentificationSource string `xml:"IdentificationSource,omitempty" json:"IdentificationSource,omitempty"`

	Country string `xml:"Country,omitempty" json:"Country,omitempty"`

	CountryTarget *FieldString3 `xml:"CountryTarget,omitempty" json:"CountryTarget,omitempty"`

	IsDisengaged bool `xml:"isDisengaged,omitempty" json:"isDisengaged,omitempty"`

	WithoutDistinctionEquStandardSpecial bool `xml:"withoutDistinctionEquStandardSpecial,omitempty" json:"withoutDistinctionEquStandardSpecial,omitempty"`

	IsWithManualTypeNames *FieldBoolean `xml:"IsWithManualTypeNames,omitempty" json:"IsWithManualTypeNames,omitempty"`

	IsDisengagedN *FieldBoolean `xml:"IsDisengagedN,omitempty" json:"IsDisengagedN,omitempty"`

	WithoutDistinctionEquStandardSpecialN *FieldBoolean `xml:"WithoutDistinctionEquStandardSpecialN,omitempty" json:"WithoutDistinctionEquStandardSpecialN,omitempty"`

	IsUniversalSubModel *FieldBoolean `xml:"IsUniversalSubModel,omitempty" json:"IsUniversalSubModel,omitempty"`

	VinAccuracy *FieldInteger `xml:"VinAccuracy,omitempty" json:"VinAccuracy,omitempty"`

	VinActive *FieldBoolean `xml:"VinActive,omitempty" json:"VinActive,omitempty"`

	VinEquipmentChanged *FieldBoolean `xml:"VinEquipmentChanged,omitempty" json:"VinEquipmentChanged,omitempty"`

	VinChecksum *FieldCharacter `xml:"VinChecksum,omitempty" json:"VinChecksum,omitempty"`

	ReleaseIndicator string `xml:"ReleaseIndicator,omitempty" json:"ReleaseIndicator,omitempty"`

	KbaNumbersN struct {
		KbaNumber []string `xml:"KbaNumber,omitempty" json:"KbaNumber,omitempty"`
	} `xml:"KbaNumbersN,omitempty" json:"KbaNumbersN,omitempty"`

	NationalCodeAustria struct {
		NationalCodeAustria []*FieldString6 `xml:"NationalCodeAustria,omitempty" json:"NationalCodeAustria,omitempty"`
	} `xml:"NationalCodeAustria,omitempty" json:"NationalCodeAustria,omitempty"`

	TypeOfConstruction *FieldString40 `xml:"TypeOfConstruction,omitempty" json:"TypeOfConstruction,omitempty"`

	ConstructionYearManual *FieldString40 `xml:"ConstructionYearManual,omitempty" json:"ConstructionYearManual,omitempty"`

	ColorScheme *FieldString3 `xml:"ColorScheme,omitempty" json:"ColorScheme,omitempty"`

	ColorSchemeManual *FieldString30 `xml:"ColorSchemeManual,omitempty" json:"ColorSchemeManual,omitempty"`

	ColorVariant *FieldString `xml:"ColorVariant,omitempty" json:"ColorVariant,omitempty"`

	PaintTypes struct {
		PaintType []*FieldString2 `xml:"PaintType,omitempty" json:"PaintType,omitempty"`
	} `xml:"PaintTypes,omitempty" json:"PaintTypes,omitempty"`

	GeneralInspectionDate string `xml:"GeneralInspectionDate,omitempty" json:"GeneralInspectionDate,omitempty"`

	LastRegistration *FieldDate `xml:"LastRegistration,omitempty" json:"LastRegistration,omitempty"`

	ManufacturerOrderKey *FieldString30 `xml:"ManufacturerOrderKey,omitempty" json:"ManufacturerOrderKey,omitempty"`

	MidTermReviewDate *FieldDate `xml:"MidTermReviewDate,omitempty" json:"MidTermReviewDate,omitempty"`

	SubModelVariant *FieldInteger `xml:"SubModelVariant,omitempty" json:"SubModelVariant,omitempty"`

	TokenColorScheme *FieldString3 `xml:"TokenColorScheme,omitempty" json:"TokenColorScheme,omitempty"`

	VehicleTypeAUFromKba *FieldString50 `xml:"VehicleTypeAUFromKba,omitempty" json:"VehicleTypeAUFromKba,omitempty"`

	VehicleTypeFromKba *FieldString50 `xml:"VehicleTypeFromKba,omitempty" json:"VehicleTypeFromKba,omitempty"`

	VehicleTypeFromManufacturer *FieldString50 `xml:"VehicleTypeFromManufacturer,omitempty" json:"VehicleTypeFromManufacturer,omitempty"`

	Colorcode *FieldInteger `xml:"Colorcode,omitempty" json:"Colorcode,omitempty"`

	MainTypeSubstitution *FieldDecimal `xml:"MainTypeSubstitution,omitempty" json:"MainTypeSubstitution,omitempty"`

	SubTypeSubstitution *FieldInteger `xml:"SubTypeSubstitution,omitempty" json:"SubTypeSubstitution,omitempty"`

	NextVehicleInspection *FieldDate `xml:"NextVehicleInspection,omitempty" json:"NextVehicleInspection,omitempty"`

	OriginalPrice *FieldDecimal `xml:"OriginalPrice,omitempty" json:"OriginalPrice,omitempty"`

	DatOriginalPrice *FieldDecimal `xml:"DatOriginalPrice,omitempty" json:"DatOriginalPrice,omitempty"`

	OriginalPriceGross *FieldDecimal `xml:"OriginalPriceGross,omitempty" json:"OriginalPriceGross,omitempty"`

	DatOriginalPriceGross *FieldDecimal `xml:"DatOriginalPriceGross,omitempty" json:"DatOriginalPriceGross,omitempty"`

	RentalCarClass *FieldInteger `xml:"RentalCarClass,omitempty" json:"RentalCarClass,omitempty"`

	RegistrationData *RegistrationData `xml:"RegistrationData,omitempty" json:"RegistrationData,omitempty"`

	OriginalPriceInfo *OriginalPriceInfo `xml:"OriginalPriceInfo,omitempty" json:"OriginalPriceInfo,omitempty"`

	Engine *Engine `xml:"Engine,omitempty" json:"Engine,omitempty"`

	Maintenance *Maintenance `xml:"Maintenance,omitempty" json:"Maintenance,omitempty"`

	RunningExpenses *RunningExpenses `xml:"RunningExpenses,omitempty" json:"RunningExpenses,omitempty"`

	TechInfo *TechInfo `xml:"TechInfo,omitempty" json:"TechInfo,omitempty"`

	Equipment *Equipment `xml:"Equipment,omitempty" json:"Equipment,omitempty"`

	Tires *Tires `xml:"Tires,omitempty" json:"Tires,omitempty"`

	DATECodeEquipment *EquipSequence `xml:"DATECodeEquipment,omitempty" json:"DATECodeEquipment,omitempty"`

	VINResult *VINResult `xml:"VINResult,omitempty" json:"VINResult,omitempty"`

	TokenOfVinResult *FieldString `xml:"TokenOfVinResult,omitempty" json:"TokenOfVinResult,omitempty"`

	UpperBodies struct {
		UpperBody []*UpperBody `xml:"UpperBody,omitempty" json:"UpperBody,omitempty"`
	} `xml:"UpperBodies,omitempty" json:"UpperBodies,omitempty"`

	DomusVehicleData *DomusVehicleData `xml:"DomusVehicleData,omitempty" json:"DomusVehicleData,omitempty"`

	VehicleDataItaly *VehicleDataItaly `xml:"VehicleDataItaly,omitempty" json:"VehicleDataItaly,omitempty"`

	MetaPositions *MetaPositions `xml:"MetaPositions,omitempty" json:"MetaPositions,omitempty"`

	BuildYear *FieldInteger `xml:"BuildYear,omitempty" json:"BuildYear,omitempty"`

	OperatingHours *FieldInteger `xml:"OperatingHours,omitempty" json:"OperatingHours,omitempty"`

	MileageInMiles *FieldInteger `xml:"MileageInMiles,omitempty" json:"MileageInMiles,omitempty"`

	LastVehicleInspection *FieldDate `xml:"LastVehicleInspection,omitempty" json:"LastVehicleInspection,omitempty"`

	VehicleCondition *FieldString `xml:"VehicleCondition,omitempty" json:"VehicleCondition,omitempty"`
}

type VehicleDataItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs VehicleDataItaly"`

	VehicleTypeItaly *FieldString `xml:"VehicleTypeItaly,omitempty" json:"VehicleTypeItaly,omitempty"`

	ManufacturerItaly *FieldString `xml:"ManufacturerItaly,omitempty" json:"ManufacturerItaly,omitempty"`

	BaseModelItaly *FieldString `xml:"BaseModelItaly,omitempty" json:"BaseModelItaly,omitempty"`

	SubModelItaly *FieldString `xml:"SubModelItaly,omitempty" json:"SubModelItaly,omitempty"`

	VehicleTypeNameItaly *FieldString `xml:"VehicleTypeNameItaly,omitempty" json:"VehicleTypeNameItaly,omitempty"`

	ManufacturerNameItaly *FieldString `xml:"ManufacturerNameItaly,omitempty" json:"ManufacturerNameItaly,omitempty"`

	BaseModelNameItaly *FieldString `xml:"BaseModelNameItaly,omitempty" json:"BaseModelNameItaly,omitempty"`

	SubModelNameItaly *FieldString `xml:"SubModelNameItaly,omitempty" json:"SubModelNameItaly,omitempty"`
}

type Work struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Work"`

	Type string `xml:"Type,omitempty" json:"Type,omitempty"`

	WageLevel *FieldDecimal `xml:"WageLevel,omitempty" json:"WageLevel,omitempty"`

	Units *FieldDecimal `xml:"Units,omitempty" json:"Units,omitempty"`

	PricePerUnit *FieldDecimal `xml:"PricePerUnit,omitempty" json:"PricePerUnit,omitempty"`

	Price *FieldDecimal `xml:"Price,omitempty" json:"Price,omitempty"`
}

type WorkSummaryItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs WorkSummaryItaly"`

	WorkSummaryItemItaly []*WorkSummaryItemItaly `xml:"WorkSummaryItemItaly,omitempty" json:"WorkSummaryItemItaly,omitempty"`
}

type WorkSummaryItemItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs WorkSummaryItemItaly"`

	Identifier *FieldString `xml:"Identifier,omitempty" json:"Identifier,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Hours *FieldDecimal `xml:"Hours,omitempty" json:"Hours,omitempty"`

	WagePerHour *FieldDecimal `xml:"WagePerHour,omitempty" json:"WagePerHour,omitempty"`

	TotalWage *FieldDecimal `xml:"TotalWage,omitempty" json:"TotalWage,omitempty"`

	DiscountPerc *FieldDecimal `xml:"DiscountPerc,omitempty" json:"DiscountPerc,omitempty"`

	DiscountValue *FieldDecimal `xml:"DiscountValue,omitempty" json:"DiscountValue,omitempty"`

	TotalWageCorrected *FieldDecimal `xml:"TotalWageCorrected,omitempty" json:"TotalWageCorrected,omitempty"`
}

type Works struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs Works"`

	Work []*Work `xml:"Work,omitempty" json:"Work,omitempty"`
}

type FieldString string

type FieldString1000 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString1000"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString2 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString2"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString30 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString30"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString5 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString5"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString10 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString10"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString4 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString4"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString8 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString8"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString40 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString40"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldCharacter struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldCharacter"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString9 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString9"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString6 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString6"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString80 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString80"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString3 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString3"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString17 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString17"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString15 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString15"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString60 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString60"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString4000 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString4000"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString50 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString50"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString200 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString200"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString12 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString12"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString20 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString20"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldString100 struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldString100"`

	Value *FieldString `xml:",chardata" json:"-,"`
}

type FieldInteger string

type FieldDecimal struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldDecimal"`

	Value float64 `xml:",chardata" json:"-,"`

	Nil bool `xml:"nil,attr,omitempty" json:"nil,omitempty"`

	Overwrite bool `xml:"overwrite,attr,omitempty" json:"overwrite,omitempty"`

	Origin string `xml:"origin,attr,omitempty" json:"origin,omitempty"`

	Limit int32 `xml:"limit,attr,omitempty" json:"limit,omitempty"`
}

type FieldDateTime string

type Address struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs address"`

	Title *FieldString `xml:"Title,omitempty" json:"Title,omitempty"`

	TitleEntry *FieldString `xml:"TitleEntry,omitempty" json:"TitleEntry,omitempty"`

	CompanyName *FieldString `xml:"CompanyName,omitempty" json:"CompanyName,omitempty"`

	LastName *FieldString `xml:"LastName,omitempty" json:"LastName,omitempty"`

	NameLong *FieldString `xml:"NameLong,omitempty" json:"NameLong,omitempty"`

	FirstName *FieldString `xml:"FirstName,omitempty" json:"FirstName,omitempty"`

	Birthday *FieldDate `xml:"Birthday,omitempty" json:"Birthday,omitempty"`

	Birthplace *FieldString `xml:"Birthplace,omitempty" json:"Birthplace,omitempty"`

	Country *FieldString `xml:"Country,omitempty" json:"Country,omitempty"`

	ExtCustomerNumber *FieldString `xml:"ExtCustomerNumber,omitempty" json:"ExtCustomerNumber,omitempty"`

	VatEntitled *FieldBoolean `xml:"VatEntitled,omitempty" json:"VatEntitled,omitempty"`

	TaxNumber *FieldString `xml:"TaxNumber,omitempty" json:"TaxNumber,omitempty"`

	CustomerNumber *FieldString `xml:"CustomerNumber,omitempty" json:"CustomerNumber,omitempty"`

	CustomerType *FieldString `xml:"CustomerType,omitempty" json:"CustomerType,omitempty"`

	CustomerTypeShort *FieldString `xml:"CustomerTypeShort,omitempty" json:"CustomerTypeShort,omitempty"`

	Addition *FieldString `xml:"Addition,omitempty" json:"Addition,omitempty"`

	Street *FieldString `xml:"Street,omitempty" json:"Street,omitempty"`

	StreetNumber *FieldString `xml:"StreetNumber,omitempty" json:"StreetNumber,omitempty"`

	StreetZipCode *FieldString `xml:"StreetZipCode,omitempty" json:"StreetZipCode,omitempty"`

	StreetCity *FieldString `xml:"StreetCity,omitempty" json:"StreetCity,omitempty"`

	PoBox *FieldString `xml:"PoBox,omitempty" json:"PoBox,omitempty"`

	PoBoxZipCode *FieldString `xml:"PoBoxZipCode,omitempty" json:"PoBoxZipCode,omitempty"`

	PoBoxCity *FieldString `xml:"PoBoxCity,omitempty" json:"PoBoxCity,omitempty"`

	EMail *FieldString `xml:"EMail,omitempty" json:"EMail,omitempty"`

	PhoneBusiness *FieldString `xml:"PhoneBusiness,omitempty" json:"PhoneBusiness,omitempty"`

	PhonePersonal *FieldString `xml:"PhonePersonal,omitempty" json:"PhonePersonal,omitempty"`

	PhoneMobile *FieldString `xml:"PhoneMobile,omitempty" json:"PhoneMobile,omitempty"`

	Fax *FieldString `xml:"Fax,omitempty" json:"Fax,omitempty"`

	Bank *FieldString `xml:"Bank,omitempty" json:"Bank,omitempty"`

	BIC *FieldString `xml:"BIC,omitempty" json:"BIC,omitempty"`

	BLZ *FieldString `xml:"BLZ,omitempty" json:"BLZ,omitempty"`

	AccountNo *FieldString `xml:"AccountNo,omitempty" json:"AccountNo,omitempty"`

	IBAN *FieldString `xml:"IBAN,omitempty" json:"IBAN,omitempty"`

	UsageFlag *FieldString `xml:"UsageFlag,omitempty" json:"UsageFlag,omitempty"`

	Language *FieldString `xml:"Language,omitempty" json:"Language,omitempty"`

	MaidenName *FieldString `xml:"MaidenName,omitempty" json:"MaidenName,omitempty"`

	Profession *FieldString `xml:"Profession,omitempty" json:"Profession,omitempty"`

	PrivatePolicy *PrivatePolicy `xml:"PrivatePolicy,omitempty" json:"PrivatePolicy,omitempty"`
}

type FieldDate string

type FieldBoolean string

type EquipSequence struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs equipSequence"`

	EquipmentPosition []*EquipmentPosition `xml:"EquipmentPosition,omitempty" json:"EquipmentPosition,omitempty"`
}

type FieldBinary struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs fieldBinary"`

	Value []byte `xml:",chardata" json:"-,"`

	Nil bool `xml:"nil,attr,omitempty" json:"nil,omitempty"`

	Overwrite bool `xml:"overwrite,attr,omitempty" json:"overwrite,omitempty"`

	Origin string `xml:"origin,attr,omitempty" json:"origin,omitempty"`
}

type MTPLWearRus struct {
	WearGroup *FieldString `xml:"WearGroup,omitempty" json:"WearGroup,omitempty"`

	WearAge *FieldDecimal `xml:"WearAge,omitempty" json:"WearAge,omitempty"`

	WearMileage *FieldInteger `xml:"WearMileage,omitempty" json:"WearMileage,omitempty"`

	WearAdditional *FieldDecimal `xml:"WearAdditional,omitempty" json:"WearAdditional,omitempty"`

	WearPercent *FieldDecimal `xml:"WearPercent,omitempty" json:"WearPercent,omitempty"`

	WearPrice *FieldDecimal `xml:"WearPrice,omitempty" json:"WearPrice,omitempty"`
}

type ParkingDentPositions struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs parkingDentPositions"`

	ParkingDentPosition []*ParkingDentPosition `xml:"ParkingDentPosition,omitempty" json:"ParkingDentPosition,omitempty"`
}

type ParkingDentPosition struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs parkingDentPosition"`

	DentNumber *FieldInteger `xml:"DentNumber,omitempty" json:"DentNumber,omitempty"`

	DentSize *FieldInteger `xml:"DentSize,omitempty" json:"DentSize,omitempty"`

	HighStrengthOrAluminium *FieldBoolean `xml:"HighStrengthOrAluminium,omitempty" json:"HighStrengthOrAluminium,omitempty"`

	AdhesiveMaterial *FieldBoolean `xml:"AdhesiveMaterial,omitempty" json:"AdhesiveMaterial,omitempty"`

	OutOfReach *FieldBoolean `xml:"OutOfReach,omitempty" json:"OutOfReach,omitempty"`

	EdgeOrFold *FieldBoolean `xml:"EdgeOrFold,omitempty" json:"EdgeOrFold,omitempty"`

	PointyOrDeep *FieldBoolean `xml:"PointyOrDeep,omitempty" json:"PointyOrDeep,omitempty"`

	Overstretched *FieldBoolean `xml:"Overstretched,omitempty" json:"Overstretched,omitempty"`

	PolishedScratches *FieldBoolean `xml:"PolishedScratches,omitempty" json:"PolishedScratches,omitempty"`
}

type IflPositionData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs iflPositionData"`

	IflWorkData []*IflWorkData `xml:"IflWorkData,omitempty" json:"IflWorkData,omitempty"`

	IflLacquerData []*IflWorkData `xml:"IflLacquerData,omitempty" json:"IflLacquerData,omitempty"`

	IflMaterialData []*IflMaterialData `xml:"IflMaterialData,omitempty" json:"IflMaterialData,omitempty"`
}

type IflWorkData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs iflWorkData"`

	Amount *FieldInteger `xml:"Amount,omitempty" json:"Amount,omitempty"`

	Time *FieldDecimal `xml:"Time,omitempty" json:"Time,omitempty"`
}

type IflMaterialData struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs iflMaterialData"`

	Amount *FieldInteger `xml:"Amount,omitempty" json:"Amount,omitempty"`

	Price *FieldDecimal `xml:"Price,omitempty" json:"Price,omitempty"`
}

type CalcResult struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs calcResult"`

	MaterialPositions *MaterialPositions `xml:"MaterialPositions,omitempty" json:"MaterialPositions,omitempty"`

	MaterialPositionsMaintenance *MaterialPositions `xml:"MaterialPositionsMaintenance,omitempty" json:"MaterialPositionsMaintenance,omitempty"`

	AdditionalCostsPositions *AdditionalCostsPositions `xml:"AdditionalCostsPositions,omitempty" json:"AdditionalCostsPositions,omitempty"`

	AdditionalCostsPositionsMaintenance *AdditionalCostsPositions `xml:"AdditionalCostsPositionsMaintenance,omitempty" json:"AdditionalCostsPositionsMaintenance,omitempty"`

	ExtensionPositions *ExtensionPositions `xml:"ExtensionPositions,omitempty" json:"ExtensionPositions,omitempty"`

	LabourPositions *LabourPositions `xml:"LabourPositions,omitempty" json:"LabourPositions,omitempty"`

	LabourPositionsMaintenance *LabourPositions `xml:"LabourPositionsMaintenance,omitempty" json:"LabourPositionsMaintenance,omitempty"`

	LacquerPositions *LacquerPositions `xml:"LacquerPositions,omitempty" json:"LacquerPositions,omitempty"`

	SurchargesDiscounts *SurchargeDiscountPositions `xml:"SurchargesDiscounts,omitempty" json:"SurchargesDiscounts,omitempty"`

	DiscountPositions *DiscountPositions `xml:"DiscountPositions,omitempty" json:"DiscountPositions,omitempty"`

	DeductionsPositions *DeductionsPositions `xml:"DeductionsPositions,omitempty" json:"DeductionsPositions,omitempty"`

	DeductiblePartsPositions *DeductiblePartsPositions `xml:"DeductiblePartsPositions,omitempty" json:"DeductiblePartsPositions,omitempty"`

	InspectionPositions *InspectionPositions `xml:"InspectionPositions,omitempty" json:"InspectionPositions,omitempty"`

	PriceDate *FieldDate `xml:"PriceDate,omitempty" json:"PriceDate,omitempty"`

	RepairCalculationSummary *CalculationSummary `xml:"RepairCalculationSummary,omitempty" json:"RepairCalculationSummary,omitempty"`

	MaterialProtocol *RepairProtocol `xml:"MaterialProtocol,omitempty" json:"MaterialProtocol,omitempty"`

	LabourProtocol *RepairProtocol `xml:"LabourProtocol,omitempty" json:"LabourProtocol,omitempty"`

	LacquerProtocol *RepairProtocol `xml:"LacquerProtocol,omitempty" json:"LacquerProtocol,omitempty"`

	CalcProtocol *CalculationProtocol `xml:"CalcProtocol,omitempty" json:"CalcProtocol,omitempty"`

	Legends *Legends `xml:"Legends,omitempty" json:"Legends,omitempty"`

	CalcType *FieldString `xml:"CalcType,omitempty" json:"CalcType,omitempty"`

	BlanketCalculation *BlanketCalculation `xml:"BlanketCalculation,omitempty" json:"BlanketCalculation,omitempty"`

	PrintData *FieldString `xml:"PrintData,omitempty" json:"PrintData,omitempty"`

	DamageSegmentation *DamageSegmentation `xml:"DamageSegmentation,omitempty" json:"DamageSegmentation,omitempty"`
}

type MaterialPositions struct {
	MaterialPosition []*MaterialPosition `xml:"MaterialPosition,omitempty" json:"MaterialPosition,omitempty"`
}

type SpHistPositionsSeq struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs spHistPositionsSeq"`

	SparePartHistoryPosition []*SparePartHistoryPosition `xml:"SparePartHistoryPosition,omitempty" json:"SparePartHistoryPosition,omitempty"`
}

type AdditionalCostsPositions struct {
	AdditionalCostsPosition []*AdditionalCostsPosition `xml:"AdditionalCostsPosition,omitempty" json:"AdditionalCostsPosition,omitempty"`
}

type LabourPositions struct {
	LabourPosition []*LabourPosition `xml:"LabourPosition,omitempty" json:"LabourPosition,omitempty"`

	DentPrepressPosition []*LabourPosition `xml:"DentPrepressPosition,omitempty" json:"DentPrepressPosition,omitempty"`

	DentDtCommPosition []*LabourPosition `xml:"DentDtCommPosition,omitempty" json:"DentDtCommPosition,omitempty"`

	DentDtCommSumPosition []*LabourPosition `xml:"DentDtCommSumPosition,omitempty" json:"DentDtCommSumPosition,omitempty"`

	DentBvatPosition []*LabourPosition `xml:"DentBvatPosition,omitempty" json:"DentBvatPosition,omitempty"`

	DentAXAWinterthurPosition []*LabourPosition `xml:"DentAXAWinterthurPosition,omitempty" json:"DentAXAWinterthurPosition,omitempty"`

	DentFCRPosition []*LabourPosition `xml:"DentFCRPosition,omitempty" json:"DentFCRPosition,omitempty"`

	DentVFFSPosition []*LabourPosition `xml:"DentVFFSPosition,omitempty" json:"DentVFFSPosition,omitempty"`

	DentVaudoisePosition []*LabourPosition `xml:"DentVaudoisePosition,omitempty" json:"DentVaudoisePosition,omitempty"`

	DentZurichPosition []*LabourPosition `xml:"DentZurichPosition,omitempty" json:"DentZurichPosition,omitempty"`

	DentATPosition []*LabourPosition `xml:"DentATPosition,omitempty" json:"DentATPosition,omitempty"`

	DentOWNPosition []*LabourPosition `xml:"DentOWNPosition,omitempty" json:"DentOWNPosition,omitempty"`

	DentHUKPosition []*LabourPosition `xml:"DentHUKPosition,omitempty" json:"DentHUKPosition,omitempty"`

	OpelGoodwillLabourPosition []*LabourPosition `xml:"OpelGoodwillLabourPosition,omitempty" json:"OpelGoodwillLabourPosition,omitempty"`
}

type LabourPosition struct {
	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	LabourPositionKind *FieldInteger `xml:"LabourPositionKind,omitempty" json:"LabourPositionKind,omitempty"`

	DomusProcessId *FieldString `xml:"DomusProcessId,omitempty" json:"DomusProcessId,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	LabourPosId *FieldString `xml:"LabourPosId,omitempty" json:"LabourPosId,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	WageType *FieldString `xml:"WageType,omitempty" json:"WageType,omitempty"`

	ManualWageType *FieldBoolean `xml:"ManualWageType,omitempty" json:"ManualWageType,omitempty"`

	WageLevel *FieldInteger `xml:"WageLevel,omitempty" json:"WageLevel,omitempty"`

	Duration *FieldDecimal `xml:"Duration,omitempty" json:"Duration,omitempty"`

	ManualDuration *FieldBoolean `xml:"ManualDuration,omitempty" json:"ManualDuration,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`

	ManualPosition *FieldBoolean `xml:"ManualPosition,omitempty" json:"ManualPosition,omitempty"`

	Includes *FieldString `xml:"Includes,omitempty" json:"Includes,omitempty"`

	AdditionalDesc *FieldString `xml:"AdditionalDesc,omitempty" json:"AdditionalDesc,omitempty"`

	AmountDesc *FieldString `xml:"AmountDesc,omitempty" json:"AmountDesc,omitempty"`

	CorrPerc *FieldDecimal `xml:"CorrPerc,omitempty" json:"CorrPerc,omitempty"`

	ValueTotalCorrected *FieldDecimal `xml:"ValueTotalCorrected,omitempty" json:"ValueTotalCorrected,omitempty"`

	Amount *FieldInteger `xml:"Amount,omitempty" json:"Amount,omitempty"`

	HasRequiredByPosition *FieldBoolean `xml:"hasRequiredByPosition,omitempty" json:"hasRequiredByPosition,omitempty"`

	RequiredByPosition *CalcPosReference `xml:"RequiredByPosition,omitempty" json:"RequiredByPosition,omitempty"`

	IncludedPositions *IncludedPositions `xml:"IncludedPositions,omitempty" json:"IncludedPositions,omitempty"`

	Extended *FieldBoolean `xml:"Extended,omitempty" json:"Extended,omitempty"`

	IncludedInCalculation *FieldBoolean `xml:"IncludedInCalculation,omitempty" json:"IncludedInCalculation,omitempty"`

	Method *FieldString `xml:"Method,omitempty" json:"Method,omitempty"`

	HardshipAllowanceInd *FieldCharacter `xml:"HardshipAllowanceInd,omitempty" json:"HardshipAllowanceInd,omitempty"`

	OptionalPositionIncluded *FieldBoolean `xml:"optionalPositionIncluded,omitempty" json:"optionalPositionIncluded,omitempty"`

	LabourPositionState *FieldString `xml:"LabourPositionState,omitempty" json:"LabourPositionState,omitempty"`

	LabourPositionPriceState *FieldString `xml:"LabourPositionPriceState,omitempty" json:"LabourPositionPriceState,omitempty"`

	LabourPositionTimeState *FieldString `xml:"LabourPositionTimeState,omitempty" json:"LabourPositionTimeState,omitempty"`

	Size *FieldInteger `xml:"size,omitempty" json:"size,omitempty"`

	PriceOrigin *FieldString `xml:"PriceOrigin,omitempty" json:"PriceOrigin,omitempty"`

	TimeOrigin *FieldString `xml:"TimeOrigin,omitempty" json:"TimeOrigin,omitempty"`

	WorkNumber *FieldString `xml:"WorkNumber,omitempty" json:"WorkNumber,omitempty"`

	WorkNumberOrigin *FieldString `xml:"WorkNumberOrigin,omitempty" json:"WorkNumberOrigin,omitempty"`

	DATWorkNumber *FieldString `xml:"DATWorkNumber,omitempty" json:"DATWorkNumber,omitempty"`

	Length *FieldDecimal `xml:"Length,omitempty" json:"Length,omitempty"`

	Width *FieldDecimal `xml:"Width,omitempty" json:"Width,omitempty"`

	WorkIndication *FieldInteger `xml:"WorkIndication,omitempty" json:"WorkIndication,omitempty"`

	DentsCalculationMethod *FieldString `xml:"DentsCalculationMethod,omitempty" json:"DentsCalculationMethod,omitempty"`

	FlagOrigin *FieldString `xml:"FlagOrigin,omitempty" json:"FlagOrigin,omitempty"`

	SparePartNumber *FieldString `xml:"SparePartNumber,omitempty" json:"SparePartNumber,omitempty"`

	ExternalId *FieldString `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	ValueInPosition *FieldBoolean `xml:"ValueInPosition,omitempty" json:"ValueInPosition,omitempty"`
}

type CalcPosReference struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs calcPosReference"`

	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`
}

type LacquerPosition struct {
	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	DomusProcessId *FieldString `xml:"DomusProcessId,omitempty" json:"DomusProcessId,omitempty"`

	Location *FieldString `xml:"Location,omitempty" json:"Location,omitempty"`

	LabourPosId *FieldString `xml:"LabourPosId,omitempty" json:"LabourPosId,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Level *FieldString `xml:"Level,omitempty" json:"Level,omitempty"`

	LevelDescription *FieldString `xml:"LevelDescription,omitempty" json:"LevelDescription,omitempty"`

	LevelManufacturer *FieldString `xml:"LevelManufacturer,omitempty" json:"LevelManufacturer,omitempty"`

	Duration *FieldDecimal `xml:"Duration,omitempty" json:"Duration,omitempty"`

	ManualDuration *FieldBoolean `xml:"ManualDuration,omitempty" json:"ManualDuration,omitempty"`

	Material *FieldDecimal `xml:"Material,omitempty" json:"Material,omitempty"`

	MaterialPoints *FieldDecimal `xml:"MaterialPoints,omitempty" json:"MaterialPoints,omitempty"`

	ValueTotal *FieldDecimal `xml:"ValueTotal,omitempty" json:"ValueTotal,omitempty"`

	ManualPosition *FieldBoolean `xml:"ManualPosition,omitempty" json:"ManualPosition,omitempty"`

	Includes *FieldString `xml:"Includes,omitempty" json:"Includes,omitempty"`

	AdditionalDesc *FieldString `xml:"AdditionalDesc,omitempty" json:"AdditionalDesc,omitempty"`

	AmountDesc *FieldString `xml:"AmountDesc,omitempty" json:"AmountDesc,omitempty"`

	CorrPerc *FieldDecimal `xml:"CorrPerc,omitempty" json:"CorrPerc,omitempty"`

	ValueTotalCorrected *FieldDecimal `xml:"ValueTotalCorrected,omitempty" json:"ValueTotalCorrected,omitempty"`

	WageLevel1 *FieldDecimal `xml:"WageLevel1,omitempty" json:"WageLevel1,omitempty"`

	WageLevel2 *FieldDecimal `xml:"WageLevel2,omitempty" json:"WageLevel2,omitempty"`

	WageLevel3 *FieldDecimal `xml:"WageLevel3,omitempty" json:"WageLevel3,omitempty"`

	WageLevel4 *FieldDecimal `xml:"WageLevel4,omitempty" json:"WageLevel4,omitempty"`

	RequiredByProcessId *FieldInteger `xml:"RequiredByProcessId,omitempty" json:"RequiredByProcessId,omitempty"`

	IsSpecific *FieldBoolean `xml:"IsSpecific,omitempty" json:"IsSpecific,omitempty"`

	IncludedPositions *IncludedPositions `xml:"IncludedPositions,omitempty" json:"IncludedPositions,omitempty"`

	AdditionalLacquerNumber *FieldInteger `xml:"AdditionalLacquerNumber,omitempty" json:"AdditionalLacquerNumber,omitempty"`

	EffortDeductionPerc *FieldDecimal `xml:"EffortDeductionPerc,omitempty" json:"EffortDeductionPerc,omitempty"`

	IndicatorAdditionalLacquer *FieldString2 `xml:"IndicatorAdditionalLacquer,omitempty" json:"IndicatorAdditionalLacquer,omitempty"`

	Finish *FieldString `xml:"Finish,omitempty" json:"Finish,omitempty"`

	Surface *FieldDecimal `xml:"Surface,omitempty" json:"Surface,omitempty"`

	Scratches *FieldDecimal `xml:"Scratches,omitempty" json:"Scratches,omitempty"`

	PriceOrigin *FieldString `xml:"PriceOrigin,omitempty" json:"PriceOrigin,omitempty"`

	TimeOrigin *FieldString `xml:"TimeOrigin,omitempty" json:"TimeOrigin,omitempty"`

	WorkNumber *FieldString `xml:"WorkNumber,omitempty" json:"WorkNumber,omitempty"`

	WorkNumberOrigin *FieldString `xml:"WorkNumberOrigin,omitempty" json:"WorkNumberOrigin,omitempty"`

	DATWorkNumber *FieldString `xml:"DATWorkNumber,omitempty" json:"DATWorkNumber,omitempty"`

	LacquerPositionState *FieldString `xml:"LacquerPositionState,omitempty" json:"LacquerPositionState,omitempty"`

	LacquerPositionTimeState *FieldString `xml:"LacquerPositionTimeState,omitempty" json:"LacquerPositionTimeState,omitempty"`

	LacquerPositionMaterialState *FieldString `xml:"LacquerPositionMaterialState,omitempty" json:"LacquerPositionMaterialState,omitempty"`

	LacquerPositionPriceState *FieldString `xml:"LacquerPositionPriceState,omitempty" json:"LacquerPositionPriceState,omitempty"`

	MaterialType *FieldInteger `xml:"MaterialType,omitempty" json:"MaterialType,omitempty"`

	Length *FieldDecimal `xml:"Length,omitempty" json:"Length,omitempty"`

	Width *FieldDecimal `xml:"Width,omitempty" json:"Width,omitempty"`

	WorkIndication *FieldInteger `xml:"WorkIndication,omitempty" json:"WorkIndication,omitempty"`

	FlagOrigin *FieldString `xml:"FlagOrigin,omitempty" json:"FlagOrigin,omitempty"`

	DentsSize *FieldInteger `xml:"DentsSize,omitempty" json:"DentsSize,omitempty"`

	SparePartNumber *FieldString `xml:"SparePartNumber,omitempty" json:"SparePartNumber,omitempty"`

	ExternalId *FieldString `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

	Extended *FieldBoolean `xml:"Extended,omitempty" json:"Extended,omitempty"`

	IncludedInCalculation *FieldBoolean `xml:"IncludedInCalculation,omitempty" json:"IncludedInCalculation,omitempty"`
}

type SurchargeDiscountPositions struct {
	SurchargeDiscountPosition []*SurchargeDiscountPosition `xml:"SurchargeDiscountPosition,omitempty" json:"SurchargeDiscountPosition,omitempty"`
}

type SurchargeDiscountPosition struct {
	DATProcessId *FieldInteger `xml:"DATProcessId,omitempty" json:"DATProcessId,omitempty"`

	RepairType *FieldString `xml:"RepairType,omitempty" json:"RepairType,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Value *FieldDecimal `xml:"Value,omitempty" json:"Value,omitempty"`

	Applied *FieldBoolean `xml:"Applied,omitempty" json:"Applied,omitempty"`
}

type InspectionPositions struct {
	InspectionPosition []*InspectionPosition `xml:"InspectionPosition,omitempty" json:"InspectionPosition,omitempty"`
}

type CalculationSummary struct {
	SparePartsCosts *SparePartsCostsSummary `xml:"SparePartsCosts,omitempty" json:"SparePartsCosts,omitempty"`

	AuxiliaryCosts *AuxiliaryCostsSummary `xml:"AuxiliaryCosts,omitempty" json:"AuxiliaryCosts,omitempty"`

	InspectionCosts *InspectionCostsSummary `xml:"InspectionCosts,omitempty" json:"InspectionCosts,omitempty"`

	LabourCosts *LabourCostsSummary `xml:"LabourCosts,omitempty" json:"LabourCosts,omitempty"`

	LacquerCosts *LacquerCostsSummary `xml:"LacquerCosts,omitempty" json:"LacquerCosts,omitempty"`

	VATReplacementPart *FieldDecimal `xml:"VATReplacementPart,omitempty" json:"VATReplacementPart,omitempty"`

	SurchargesDiscountsCosts *SurchargesDiscountsCostsSummary `xml:"SurchargesDiscountsCosts,omitempty" json:"SurchargesDiscountsCosts,omitempty"`

	TotalNetCosts *FieldDecimal `xml:"TotalNetCosts,omitempty" json:"TotalNetCosts,omitempty"`

	TotalVAT *FieldDecimal `xml:"TotalVAT,omitempty" json:"TotalVAT,omitempty"`

	TotalGrossCosts *FieldDecimal `xml:"TotalGrossCosts,omitempty" json:"TotalGrossCosts,omitempty"`

	TotalNetDiscount *FieldDecimal `xml:"TotalNetDiscount,omitempty" json:"TotalNetDiscount,omitempty"`

	TotalVATDiscount *FieldDecimal `xml:"TotalVATDiscount,omitempty" json:"TotalVATDiscount,omitempty"`

	TotalGrossDiscount *FieldDecimal `xml:"TotalGrossDiscount,omitempty" json:"TotalGrossDiscount,omitempty"`

	TotalNetDeductible *FieldDecimal `xml:"TotalNetDeductible,omitempty" json:"TotalNetDeductible,omitempty"`

	TotalVATDeductible *FieldDecimal `xml:"TotalVATDeductible,omitempty" json:"TotalVATDeductible,omitempty"`

	TotalGrossDeductible *FieldDecimal `xml:"TotalGrossDeductible,omitempty" json:"TotalGrossDeductible,omitempty"`

	TotalNetAppreciation *FieldDecimal `xml:"TotalNetAppreciation,omitempty" json:"TotalNetAppreciation,omitempty"`

	TotalVATAppreciation *FieldDecimal `xml:"TotalVATAppreciation,omitempty" json:"TotalVATAppreciation,omitempty"`

	TotalGrossAppreciation *FieldDecimal `xml:"TotalGrossAppreciation,omitempty" json:"TotalGrossAppreciation,omitempty"`

	TotalAppreciationExVAT *FieldDecimal `xml:"TotalAppreciationExVAT,omitempty" json:"TotalAppreciationExVAT,omitempty"`

	BaseNetForWasteDisposalCosts *FieldDecimal `xml:"BaseNetForWasteDisposalCosts,omitempty" json:"BaseNetForWasteDisposalCosts,omitempty"`

	BaseVatForWasteDisposalCosts *FieldDecimal `xml:"BaseVatForWasteDisposalCosts,omitempty" json:"BaseVatForWasteDisposalCosts,omitempty"`

	BaseGrossForWasteDisposalCosts *FieldDecimal `xml:"BaseGrossForWasteDisposalCosts,omitempty" json:"BaseGrossForWasteDisposalCosts,omitempty"`

	TotalNetWasteDisposalCosts *FieldDecimal `xml:"TotalNetWasteDisposalCosts,omitempty" json:"TotalNetWasteDisposalCosts,omitempty"`

	TotalVatWasteDisposalCosts *FieldDecimal `xml:"TotalVatWasteDisposalCosts,omitempty" json:"TotalVatWasteDisposalCosts,omitempty"`

	TotalGrossWasteDisposalCosts *FieldDecimal `xml:"TotalGrossWasteDisposalCosts,omitempty" json:"TotalGrossWasteDisposalCosts,omitempty"`

	TotalInspectionCosts *FieldDecimal `xml:"TotalInspectionCosts,omitempty" json:"TotalInspectionCosts,omitempty"`

	TotalTaxNeutralCosts *FieldDecimal `xml:"TotalTaxNeutralCosts,omitempty" json:"TotalTaxNeutralCosts,omitempty"`

	TotalNetCorrected *FieldDecimal `xml:"TotalNetCorrected,omitempty" json:"TotalNetCorrected,omitempty"`

	TotalVATCorrected *FieldDecimal `xml:"TotalVATCorrected,omitempty" json:"TotalVATCorrected,omitempty"`

	TotalGrossCorrected *FieldDecimal `xml:"TotalGrossCorrected,omitempty" json:"TotalGrossCorrected,omitempty"`

	RetentionTotalNet *FieldDecimal `xml:"RetentionTotalNet,omitempty" json:"RetentionTotalNet,omitempty"`

	RetentionTotalGross *FieldDecimal `xml:"RetentionTotalGross,omitempty" json:"RetentionTotalGross,omitempty"`

	DiffCommonToOptimizedAmount *FieldDecimal `xml:"DiffCommonToOptimizedAmount,omitempty" json:"DiffCommonToOptimizedAmount,omitempty"`

	DiffCommonToOptimizedPerc *FieldDecimal `xml:"DiffCommonToOptimizedPerc,omitempty" json:"DiffCommonToOptimizedPerc,omitempty"`

	DiffToUpe *FieldDecimal `xml:"DiffToUpe,omitempty" json:"DiffToUpe,omitempty"`

	UpeInProcent *FieldDecimal `xml:"UpeInProcent,omitempty" json:"UpeInProcent,omitempty"`

	AmountCustomer *FieldDecimal `xml:"AmountCustomer,omitempty" json:"AmountCustomer,omitempty"`

	AmountInsurance *FieldDecimal `xml:"AmountInsurance,omitempty" json:"AmountInsurance,omitempty"`

	SumNet *FieldDecimal `xml:"SumNet,omitempty" json:"SumNet,omitempty"`

	SumGross *FieldDecimal `xml:"SumGross,omitempty" json:"SumGross,omitempty"`

	SumSparePartCosts *FieldDecimal `xml:"SumSparePartCosts,omitempty" json:"SumSparePartCosts,omitempty"`

	SumSmallSparePartCosts *FieldDecimal `xml:"SumSmallSparePartCosts,omitempty" json:"SumSmallSparePartCosts,omitempty"`

	SumOtherMaterialCosts *FieldDecimal `xml:"SumOtherMaterialCosts,omitempty" json:"SumOtherMaterialCosts,omitempty"`

	SumMiscellaneousCosts *FieldDecimal `xml:"SumMiscellaneousCosts,omitempty" json:"SumMiscellaneousCosts,omitempty"`

	SumLabourCosts *FieldDecimal `xml:"SumLabourCosts,omitempty" json:"SumLabourCosts,omitempty"`

	CalculationDeductionsSummary *DeductionsSummary `xml:"CalculationDeductionsSummary,omitempty" json:"CalculationDeductionsSummary,omitempty"`

	AdditionalCostsFlatAmount *FieldDecimal `xml:"AdditionalCostsFlatAmount,omitempty" json:"AdditionalCostsFlatAmount,omitempty"`

	TotalNetDiscountExpert *FieldDecimal `xml:"TotalNetDiscountExpert,omitempty" json:"TotalNetDiscountExpert,omitempty"`

	TotalVATDiscountExpert *FieldDecimal `xml:"TotalVATDiscountExpert,omitempty" json:"TotalVATDiscountExpert,omitempty"`

	TotalGrossDiscountExpert *FieldDecimal `xml:"TotalGrossDiscountExpert,omitempty" json:"TotalGrossDiscountExpert,omitempty"`

	TotalPriceWear *FieldDecimal `xml:"TotalPriceWear,omitempty" json:"TotalPriceWear,omitempty"`

	TotalPriceWearRound *FieldDecimal `xml:"TotalPriceWearRound,omitempty" json:"TotalPriceWearRound,omitempty"`

	MetaPositions *MetaPositions `xml:"MetaPositions,omitempty" json:"MetaPositions,omitempty"`
}

type SparePartsCostsSummary struct {
	AllSum *FieldDecimal `xml:"AllSum,omitempty" json:"AllSum,omitempty"`

	ProcurementCosts *FieldDecimal `xml:"ProcurementCosts,omitempty" json:"ProcurementCosts,omitempty"`

	ProcurementCostsFromParts *FieldDecimal `xml:"ProcurementCostsFromParts,omitempty" json:"ProcurementCostsFromParts,omitempty"`

	ProcurementCostsFromPartsPercentage *FieldDecimal `xml:"ProcurementCostsFromPartsPercentage,omitempty" json:"ProcurementCostsFromPartsPercentage,omitempty"`

	ConsumablesSurcharge *FieldDecimal `xml:"ConsumablesSurcharge,omitempty" json:"ConsumablesSurcharge,omitempty"`

	ConsumablesSurchargePercentage *FieldDecimal `xml:"ConsumablesSurchargePercentage,omitempty" json:"ConsumablesSurchargePercentage,omitempty"`

	SurchargeDeduction *FieldDecimal `xml:"SurchargeDeduction,omitempty" json:"SurchargeDeduction,omitempty"`

	DisposalCostsSpareParts *FieldDecimal `xml:"DisposalCostsSpareParts,omitempty" json:"DisposalCostsSpareParts,omitempty"`

	DisposalCostsSparePartsPercentage *FieldDecimal `xml:"DisposalCostsSparePartsPercentage,omitempty" json:"DisposalCostsSparePartsPercentage,omitempty"`

	SmallMaterialsLumpSum *FieldDecimal `xml:"SmallMaterialsLumpSum,omitempty" json:"SmallMaterialsLumpSum,omitempty"`

	TotalSum *FieldDecimal `xml:"TotalSum,omitempty" json:"TotalSum,omitempty"`

	SparePartsTotalWear *FieldDecimal `xml:"SparePartsTotalWear,omitempty" json:"SparePartsTotalWear,omitempty"`

	SparePartsTotalPartsWear *FieldDecimal `xml:"SparePartsTotalPartsWear,omitempty" json:"SparePartsTotalPartsWear,omitempty"`

	SparePartsTotalTotalWear *FieldDecimal `xml:"SparePartsTotalTotalWear,omitempty" json:"SparePartsTotalTotalWear,omitempty"`
}

type AuxiliaryCostsSummary struct {
	AuxiliaryCosts *FieldDecimal `xml:"AuxiliaryCosts,omitempty" json:"AuxiliaryCosts,omitempty"`

	DentsAdhesiveMaterial *FieldDecimal `xml:"DentsAdhesiveMaterial,omitempty" json:"DentsAdhesiveMaterial,omitempty"`

	TotalSum *FieldDecimal `xml:"TotalSum,omitempty" json:"TotalSum,omitempty"`
}

type InspectionCostsSummary struct {
	InspectionCosts *FieldDecimal `xml:"InspectionCosts,omitempty" json:"InspectionCosts,omitempty"`

	TotalSum *FieldDecimal `xml:"TotalSum,omitempty" json:"TotalSum,omitempty"`
}

type LabourCostsSummary struct {
	AllSum *FieldDecimal `xml:"AllSum,omitempty" json:"AllSum,omitempty"`

	Bodywork *DetailBlockSummary `xml:"Bodywork,omitempty" json:"Bodywork,omitempty"`

	Electric *DetailBlockSummary `xml:"Electric,omitempty" json:"Electric,omitempty"`

	Mechanic *DetailBlockSummary `xml:"Mechanic,omitempty" json:"Mechanic,omitempty"`

	OpelGoodWill *DetailBlockSummary `xml:"OpelGoodWill,omitempty" json:"OpelGoodWill,omitempty"`

	DentsPress *DetailBlockSummary `xml:"DentsPress,omitempty" json:"DentsPress,omitempty"`

	DentsPrePress *DetailBlockSummary `xml:"DentsPrePress,omitempty" json:"DentsPrePress,omitempty"`

	DentsGlobal *DetailBlockSummary `xml:"DentsGlobal,omitempty" json:"DentsGlobal,omitempty"`

	DentsFlat *DetailBlockSummary `xml:"DentsFlat,omitempty" json:"DentsFlat,omitempty"`

	ParkingDents *DetailBlockSummary `xml:"ParkingDents,omitempty" json:"ParkingDents,omitempty"`

	ParkingDentsLacquerDeduction *DetailBlockSummary `xml:"ParkingDentsLacquerDeduction,omitempty" json:"ParkingDentsLacquerDeduction,omitempty"`

	TotalSum *FieldDecimal `xml:"TotalSum,omitempty" json:"TotalSum,omitempty"`

	Discount *Discount `xml:"Discount,omitempty" json:"Discount,omitempty"`

	Wages *DetailBlockSummaryWages `xml:"Wages,omitempty" json:"Wages,omitempty"`

	Works *Works `xml:"Works,omitempty" json:"Works,omitempty"`
}

type DetailBlockSummary struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs detailBlockSummary"`

	Type string `xml:"Type,omitempty" json:"Type,omitempty"`

	Units *FieldDecimal `xml:"Units,omitempty" json:"Units,omitempty"`

	PricePerUnit *FieldDecimal `xml:"PricePerUnit,omitempty" json:"PricePerUnit,omitempty"`

	PricePerUnitState *FieldString `xml:"PricePerUnitState,omitempty" json:"PricePerUnitState,omitempty"`

	FlatPrice *FieldDecimal `xml:"FlatPrice,omitempty" json:"FlatPrice,omitempty"`

	Discount *Discount `xml:"Discount,omitempty" json:"Discount,omitempty"`

	Price *FieldDecimal `xml:"Price,omitempty" json:"Price,omitempty"`

	Metallic *FieldDecimal `xml:"Metallic,omitempty" json:"Metallic,omitempty"`
}

type Discount struct {
	PriceBeforeDiscount *FieldDecimal `xml:"PriceBeforeDiscount,omitempty" json:"PriceBeforeDiscount,omitempty"`

	DiscountPercentage *FieldDecimal `xml:"DiscountPercentage,omitempty" json:"DiscountPercentage,omitempty"`

	Discount *FieldDecimal `xml:"Discount,omitempty" json:"Discount,omitempty"`
}

type DetailBlockSummaryWages struct {
	Wages []*DetailBlockSummary `xml:"Wages,omitempty" json:"Wages,omitempty"`
}

type LacquerCostsSummary struct {
	DiscountTotalFlat *Discount `xml:"DiscountTotalFlat,omitempty" json:"DiscountTotalFlat,omitempty"`

	TotalFlat *FieldDecimal `xml:"TotalFlat,omitempty" json:"TotalFlat,omitempty"`

	WageAndMaterial *DetailBlockSummary `xml:"WageAndMaterial,omitempty" json:"WageAndMaterial,omitempty"`

	Wage *DetailBlockSummary `xml:"Wage,omitempty" json:"Wage,omitempty"`

	SpotRepairWage *DetailBlockSummary `xml:"SpotRepairWage,omitempty" json:"SpotRepairWage,omitempty"`

	TotalWages *FieldDecimal `xml:"TotalWages,omitempty" json:"TotalWages,omitempty"`

	DentsCivdWage *DetailBlockSummary `xml:"DentsCivdWage,omitempty" json:"DentsCivdWage,omitempty"`

	DentsCivdMaterial *DetailBlockSummary `xml:"DentsCivdMaterial,omitempty" json:"DentsCivdMaterial,omitempty"`

	Material *LacquerMaterialSummary `xml:"Material,omitempty" json:"Material,omitempty"`

	TotalSum *FieldDecimal `xml:"TotalSum,omitempty" json:"TotalSum,omitempty"`

	TotalTimeUnits *FieldDecimal `xml:"TotalTimeUnits,omitempty" json:"TotalTimeUnits,omitempty"`
}

type LacquerMaterialSummary struct {
	FlatPercentage *FieldDecimal `xml:"FlatPercentage,omitempty" json:"FlatPercentage,omitempty"`

	FlatAmount *FieldDecimal `xml:"FlatAmount,omitempty" json:"FlatAmount,omitempty"`

	MaterialUnit *FieldString `xml:"MaterialUnit,omitempty" json:"MaterialUnit,omitempty"`

	Surface *DetailBlockSummary `xml:"Surface,omitempty" json:"Surface,omitempty"`

	Overhauling *DetailBlockSummary `xml:"Overhauling,omitempty" json:"Overhauling,omitempty"`

	Replacement *DetailBlockSummary `xml:"Replacement,omitempty" json:"Replacement,omitempty"`

	SpotRepair *DetailBlockSummary `xml:"SpotRepair,omitempty" json:"SpotRepair,omitempty"`

	LacquerMaterialManual *DetailBlockSummary `xml:"LacquerMaterialManual,omitempty" json:"LacquerMaterialManual,omitempty"`

	SpotRepairPrice *FieldDecimal `xml:"SpotRepairPrice,omitempty" json:"SpotRepairPrice,omitempty"`

	SpecialLacquerAwardN *FieldDecimal `xml:"SpecialLacquerAwardN,omitempty" json:"SpecialLacquerAwardN,omitempty"`

	LacquerConstants *LacquerConstantSequence `xml:"LacquerConstants,omitempty" json:"LacquerConstants,omitempty"`

	MaterialGroups *LacquerMaterialGroupSummarySequence `xml:"MaterialGroups,omitempty" json:"MaterialGroups,omitempty"`

	DiscountMaterial *Discount `xml:"DiscountMaterial,omitempty" json:"DiscountMaterial,omitempty"`

	TotalSum *FieldDecimal `xml:"TotalSum,omitempty" json:"TotalSum,omitempty"`

	DisposalCosts *FieldDecimal `xml:"DisposalCosts,omitempty" json:"DisposalCosts,omitempty"`

	SumMaterialCorrected *FieldDecimal `xml:"SumMaterialCorrected,omitempty" json:"SumMaterialCorrected,omitempty"`
}

type LacquerConstantSequence struct {
	LacquerConstant []*LacquerConstant `xml:"LacquerConstant,omitempty" json:"LacquerConstant,omitempty"`
}

type LacquerMaterialGroupSummarySequence struct {
	LacquerMaterialGroupSummary []*LacquerMaterialGroupSummary `xml:"LacquerMaterialGroupSummary,omitempty" json:"LacquerMaterialGroupSummary,omitempty"`
}

type SurchargesDiscountsCostsSummary struct {
	Total *FieldDecimal `xml:"Total,omitempty" json:"Total,omitempty"`

	TotalSumMax *FieldDecimal `xml:"TotalSumMax,omitempty" json:"TotalSumMax,omitempty"`
}

type DeductionsSummary struct {
	DeductionsTotalGross *FieldDecimal `xml:"DeductionsTotalGross,omitempty" json:"DeductionsTotalGross,omitempty"`

	DeductionsTotalNet *FieldDecimal `xml:"DeductionsTotalNet,omitempty" json:"DeductionsTotalNet,omitempty"`

	DeductionsTotalVAT *FieldDecimal `xml:"DeductionsTotalVAT,omitempty" json:"DeductionsTotalVAT,omitempty"`

	NfoGeneralSumGross *FieldDecimal `xml:"NfoGeneralSumGross,omitempty" json:"NfoGeneralSumGross,omitempty"`

	NfoGeneralSumNet *FieldDecimal `xml:"NfoGeneralSumNet,omitempty" json:"NfoGeneralSumNet,omitempty"`

	NfoMaterialSumGross *FieldDecimal `xml:"NfoMaterialSumGross,omitempty" json:"NfoMaterialSumGross,omitempty"`

	NfoMaterialSumNet *FieldDecimal `xml:"NfoMaterialSumNet,omitempty" json:"NfoMaterialSumNet,omitempty"`

	NfoLacquerSumGross *FieldDecimal `xml:"NfoLacquerSumGross,omitempty" json:"NfoLacquerSumGross,omitempty"`

	NfoLacquerSumNet *FieldDecimal `xml:"NfoLacquerSumNet,omitempty" json:"NfoLacquerSumNet,omitempty"`

	PreDamageSumGross *FieldDecimal `xml:"PreDamageSumGross,omitempty" json:"PreDamageSumGross,omitempty"`

	PreDamageSumNet *FieldDecimal `xml:"PreDamageSumNet,omitempty" json:"PreDamageSumNet,omitempty"`
}

type RepairProtocol struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs repairProtocol"`

	InvalidProcesses *RepairProcessList `xml:"InvalidProcesses,omitempty" json:"InvalidProcesses,omitempty"`

	UnspecificProcesses *RepairProcessList `xml:"UnspecificProcesses,omitempty" json:"UnspecificProcesses,omitempty"`

	PartOfCombinationProcesses *RepairProcessList `xml:"PartOfCombinationProcesses,omitempty" json:"PartOfCombinationProcesses,omitempty"`

	PartOfOtherProcesses *RepairProcessList `xml:"PartOfOtherProcesses,omitempty" json:"PartOfOtherProcesses,omitempty"`

	RemovedByCompositeProcesses *RepairProcessList `xml:"RemovedByCompositeProcesses,omitempty" json:"RemovedByCompositeProcesses,omitempty"`

	MissingLacquerInformationProcesses *RepairProcessList `xml:"MissingLacquerInformationProcesses,omitempty" json:"MissingLacquerInformationProcesses,omitempty"`
}

type RepairProcessList struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs repairProcessList"`

	RepairProcess []*RepairProcess `xml:"RepairProcess,omitempty" json:"RepairProcess,omitempty"`
}

type CalculationProtocol struct {
	ProtocolHints *ProtocolHints `xml:"ProtocolHints,omitempty" json:"ProtocolHints,omitempty"`

	RemovedRepairTypesProtocol *ProtocolEntriesWithRemoval `xml:"RemovedRepairTypesProtocol,omitempty" json:"RemovedRepairTypesProtocol,omitempty"`

	PartsWithoutWorkProtocol *ProtocolEntries `xml:"PartsWithoutWorkProtocol,omitempty" json:"PartsWithoutWorkProtocol,omitempty"`

	InvalidPositionsProtocol *ProtocolEntries `xml:"InvalidPositionsProtocol,omitempty" json:"InvalidPositionsProtocol,omitempty"`

	ImplausiblePositionsProtocol *ProtocolEntries `xml:"ImplausiblePositionsProtocol,omitempty" json:"ImplausiblePositionsProtocol,omitempty"`

	MissingInputProtocol *ProtocolEntries `xml:"MissingInputProtocol,omitempty" json:"MissingInputProtocol,omitempty"`

	UnspecificPositionsProtocol *ProtocolEntries `xml:"UnspecificPositionsProtocol,omitempty" json:"UnspecificPositionsProtocol,omitempty"`

	PartsOfOtherPositionProtocol *ProtocolEntriesWithRemoval `xml:"PartsOfOtherPositionProtocol,omitempty" json:"PartsOfOtherPositionProtocol,omitempty"`

	PartsOfCombinationPositionProtocol *ProtocolEntriesWithRemoval `xml:"PartsOfCombinationPositionProtocol,omitempty" json:"PartsOfCombinationPositionProtocol,omitempty"`

	RemovedByCompositePositionProtocol *ProtocolEntriesWithRemoval `xml:"RemovedByCompositePositionProtocol,omitempty" json:"RemovedByCompositePositionProtocol,omitempty"`

	MissingLacquerInformationProtocol *ProtocolEntries `xml:"MissingLacquerInformationProtocol,omitempty" json:"MissingLacquerInformationProtocol,omitempty"`

	PredamagePositionsProtocol *ProtocolEntries `xml:"PredamagePositionsProtocol,omitempty" json:"PredamagePositionsProtocol,omitempty"`

	SetupTimeRelevantPositionsProtocol *ProtocolEntries `xml:"SetupTimeRelevantPositionsProtocol,omitempty" json:"SetupTimeRelevantPositionsProtocol,omitempty"`

	WithoutUsedPriceProtocol *ProtocolEntries `xml:"WithoutUsedPriceProtocol,omitempty" json:"WithoutUsedPriceProtocol,omitempty"`

	WithoutManufacturerPriceProtocol *ProtocolEntries `xml:"WithoutManufacturerPriceProtocol,omitempty" json:"WithoutManufacturerPriceProtocol,omitempty"`

	WithLacquerBlendingProtocol *ProtocolEntries `xml:"WithLacquerBlendingProtocol,omitempty" json:"WithLacquerBlendingProtocol,omitempty"`

	SuppressedPositionsProtocol *SuppressedPositionsProtocol `xml:"SuppressedPositionsProtocol,omitempty" json:"SuppressedPositionsProtocol,omitempty"`

	DentPositionsProtocol *DentPositionsProtocol `xml:"DentPositionsProtocol,omitempty" json:"DentPositionsProtocol,omitempty"`

	PositionsWithMeasuresProtocol *PositionsWithMeasuresProtocol `xml:"PositionsWithMeasuresProtocol,omitempty" json:"PositionsWithMeasuresProtocol,omitempty"`

	PriceCorrectionsProtocol *PriceCorrectionsProtocol `xml:"PriceCorrectionsProtocol,omitempty" json:"PriceCorrectionsProtocol,omitempty"`

	AllinDeductionFromTotalInPercent *FieldDecimal `xml:"AllinDeductionFromTotalInPercent,omitempty" json:"AllinDeductionFromTotalInPercent,omitempty"`

	CalculationStatus *FieldInteger `xml:"CalculationStatus,omitempty" json:"CalculationStatus,omitempty"`

	PrintDate *FieldDate `xml:"PrintDate,omitempty" json:"PrintDate,omitempty"`

	IndicatorAniaCalculation *FieldDecimal `xml:"IndicatorAniaCalculation,omitempty" json:"IndicatorAniaCalculation,omitempty"`

	IndicatorDoubleRequest *FieldDecimal `xml:"IndicatorDoubleRequest,omitempty" json:"IndicatorDoubleRequest,omitempty"`

	IndicatorLacquerWaterbased *FieldDecimal `xml:"IndicatorLacquerWaterbased,omitempty" json:"IndicatorLacquerWaterbased,omitempty"`

	LastCalcUserId *FieldInteger `xml:"LastCalcUserId,omitempty" json:"LastCalcUserId,omitempty"`

	LastCalculationDate *FieldDateTime `xml:"LastCalculationDate,omitempty" json:"LastCalculationDate,omitempty"`

	LastCalculationUser *FieldString `xml:"LastCalculationUser,omitempty" json:"LastCalculationUser,omitempty"`

	StatusRepairCostsTakeover *FieldInteger `xml:"StatusRepairCostsTakeover,omitempty" json:"StatusRepairCostsTakeover,omitempty"`

	TransmissionState *FieldDecimal `xml:"TransmissionState,omitempty" json:"TransmissionState,omitempty"`

	ProtocolData *FieldString `xml:"ProtocolData,omitempty" json:"ProtocolData,omitempty"`
}

type ProtocolEntriesWithRemoval struct {
	ProtocolEntryWithRemoval []*ProtocolEntryWithRemoval `xml:"ProtocolEntryWithRemoval,omitempty" json:"ProtocolEntryWithRemoval,omitempty"`
}

type ProtocolEntries struct {
	ProtocolEntry []*ProtocolEntry `xml:"ProtocolEntry,omitempty" json:"ProtocolEntry,omitempty"`
}

type Legends struct {
	Legends []*Legend `xml:"legends,omitempty" json:"legends,omitempty"`
}

type Legend struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs legend"`

	Flag *FieldString `xml:"Flag,omitempty" json:"Flag,omitempty"`

	Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

	Key *FieldString `xml:"Key,omitempty" json:"Key,omitempty"`
}

type CalcResultItaly struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs calcResultItaly"`

	PositionsItaly *PositionsItaly `xml:"PositionsItaly,omitempty" json:"PositionsItaly,omitempty"`

	SummariesItaly *SummariesItaly `xml:"SummariesItaly,omitempty" json:"SummariesItaly,omitempty"`
}

type DomusCalcResult struct {
	XMLName xml.Name `xml:"http://www.dat.de/vxs domusCalcResult"`

	CalcResult *CalcResult `xml:"calcResult,omitempty" json:"calcResult,omitempty"`

	DomusAggregates *DomusAggregates `xml:"DomusAggregates,omitempty" json:"DomusAggregates,omitempty"`

	DomusLacquerExtraCharges *DomusLacquerExtraCharges `xml:"DomusLacquerExtraCharges,omitempty" json:"DomusLacquerExtraCharges,omitempty"`

	DomusExtraCharges *DomusExtraCharges `xml:"DomusExtraCharges,omitempty" json:"DomusExtraCharges,omitempty"`
}

type ReleaseRestriction string

const (
	ReleaseRestrictionALL ReleaseRestriction = "ALL"

	ReleaseRestrictionREPAIR ReleaseRestriction = "REPAIR"

	ReleaseRestrictionAPPRAISAL ReleaseRestriction = "APPRAISAL"

	ReleaseRestrictionGLASS ReleaseRestriction = "GLASS"

	ReleaseRestrictionAPPRAISALNEW ReleaseRestriction = "APPRAISALNEW"

	ReleaseRestrictionAPPRAISALSHORT ReleaseRestriction = "APPRAISALSHORT"

	ReleaseRestrictionTCO ReleaseRestriction = "TCO"

	ReleaseRestrictionAPPRAISAL2YNEW ReleaseRestriction = "APPRAISAL2YNEW"

	ReleaseRestrictionAPPRAISAL_AND_REPAIR ReleaseRestriction = "APPRAISAL_AND_REPAIR"

	ReleaseRestrictionTCO_NEW ReleaseRestriction = "TCO_NEW"

	ReleaseRestrictionCA_DATAENGINEERINGMODE ReleaseRestriction = "CA_DATAENGINEERINGMODE"

	ReleaseRestrictionVA_DATAENGINEERINGMODE ReleaseRestriction = "VA_DATAENGINEERINGMODE"

	ReleaseRestrictionCOMPREHENSIVE ReleaseRestriction = "COMPREHENSIVE"

	ReleaseRestrictionAPPRAISALNEWFORMER ReleaseRestriction = "APPRAISALNEWFORMER"

	ReleaseRestrictionREPAIR_OR_REPAIR_INCOMPLETE ReleaseRestriction = "REPAIR_OR_REPAIR_INCOMPLETE"

	ReleaseRestrictionCOMPREHENSIVE_OR_REPAIR_INCOMPLETE ReleaseRestriction = "COMPREHENSIVE_OR_REPAIR_INCOMPLETE"

	ReleaseRestrictionALL_OR_REPAIR_OR_APPRAISAL ReleaseRestriction = "ALL_OR_REPAIR_OR_APPRAISAL"
)

type VehicleCoverage string

const (
	VehicleCoverageALL VehicleCoverage = "ALL"

	VehicleCoverageWITH_MANUFACTURER_TEXTS VehicleCoverage = "WITH_MANUFACTURER_TEXTS"

	VehicleCoverageWITH_PRICE_LIST_TIME VehicleCoverage = "WITH_PRICE_LIST_TIME"
)

type MarketResearch string

const (
	MarketResearchUSE_DAT_COUNTRY_INDICATOR MarketResearch = "USE_DAT_COUNTRY_INDICATOR"

	MarketResearchCROSSBORDER MarketResearch = "CROSSBORDER"
)

type ManufacturerToyota string

const (
	ManufacturerToyotaTOYOTA ManufacturerToyota = "TOYOTA"

	ManufacturerToyotaLEXUS ManufacturerToyota = "LEXUS"
)

type BaseSelectionRequest BasicSelectionRequest

type VinByLicencePlateFranceResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService VinByLicencePlateFranceResponse"`

	Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

	LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

	InitialRegistration soap.XSDDateTime `xml:"initialRegistration,omitempty" json:"initialRegistration,omitempty"`
}

type VinByLicencePlateGermanyResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService VinByLicencePlateGermanyResponse"`

	Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

	LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

	Hsn string `xml:"hsn,omitempty" json:"hsn,omitempty"`

	Tsn string `xml:"tsn,omitempty" json:"tsn,omitempty"`

	Manufacturer string `xml:"manufacturer,omitempty" json:"manufacturer,omitempty"`

	ManufacturerType string `xml:"manufacturerType,omitempty" json:"manufacturerType,omitempty"`

	VentureCode string `xml:"ventureCode,omitempty" json:"ventureCode,omitempty"`

	ComprehensiveInsCompanyNr string `xml:"comprehensiveInsCompanyNr,omitempty" json:"comprehensiveInsCompanyNr,omitempty"`

	ComprehensiveCompanyName1 string `xml:"comprehensiveCompanyName1,omitempty" json:"comprehensiveCompanyName1,omitempty"`

	ComprehensiveCompanyName2 string `xml:"comprehensiveCompanyName2,omitempty" json:"comprehensiveCompanyName2,omitempty"`

	ComprehensiveCompanyName3 string `xml:"comprehensiveCompanyName3,omitempty" json:"comprehensiveCompanyName3,omitempty"`

	ComprehensiveBeginningDate string `xml:"comprehensiveBeginningDate,omitempty" json:"comprehensiveBeginningDate,omitempty"`

	ComprehensiveEndDate string `xml:"comprehensiveEndDate,omitempty" json:"comprehensiveEndDate,omitempty"`

	ComprehensivePolicyNr string `xml:"comprehensivePolicyNr,omitempty" json:"comprehensivePolicyNr,omitempty"`

	ComprehensiveInternalNote string `xml:"comprehensiveInternalNote,omitempty" json:"comprehensiveInternalNote,omitempty"`

	ComprehensiveContractType string `xml:"comprehensiveContractType,omitempty" json:"comprehensiveContractType,omitempty"`

	ComprehensiveFullDeductible string `xml:"comprehensiveFullDeductible,omitempty" json:"comprehensiveFullDeductible,omitempty"`

	ComprehensivePartDeductible string `xml:"comprehensivePartDeductible,omitempty" json:"comprehensivePartDeductible,omitempty"`

	AssistanceInsCompanyNr string `xml:"assistanceInsCompanyNr,omitempty" json:"assistanceInsCompanyNr,omitempty"`

	AssistanceCompanyName1 string `xml:"assistanceCompanyName1,omitempty" json:"assistanceCompanyName1,omitempty"`

	AssistanceCompanyName2 string `xml:"assistanceCompanyName2,omitempty" json:"assistanceCompanyName2,omitempty"`

	AssistanceCompanyName3 string `xml:"assistanceCompanyName3,omitempty" json:"assistanceCompanyName3,omitempty"`

	AssistanceBeginningDate string `xml:"assistanceBeginningDate,omitempty" json:"assistanceBeginningDate,omitempty"`

	AssistanceEndDate string `xml:"assistanceEndDate,omitempty" json:"assistanceEndDate,omitempty"`

	AssistancePolicyNr string `xml:"assistancePolicyNr,omitempty" json:"assistancePolicyNr,omitempty"`

	AssistanceInternalNote string `xml:"assistanceInternalNote,omitempty" json:"assistanceInternalNote,omitempty"`

	AssistanceContractType string `xml:"assistanceContractType,omitempty" json:"assistanceContractType,omitempty"`

	RegistrationYear string `xml:"registrationYear,omitempty" json:"registrationYear,omitempty"`
}

type VinByLicencePlateItalyResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService VinByLicencePlateItalyResponse"`

	Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

	LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

	InitialRegistration soap.XSDDateTime `xml:"initialRegistration,omitempty" json:"initialRegistration,omitempty"`

	ModelPermissionNumber string `xml:"modelPermissionNumber,omitempty" json:"modelPermissionNumber,omitempty"`

	EngineCode string `xml:"engineCode,omitempty" json:"engineCode,omitempty"`

	LastRevisionDate soap.XSDDateTime `xml:"lastRevisionDate,omitempty" json:"lastRevisionDate,omitempty"`
}

type VinByLicencePlateNetherlandsResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService VinByLicencePlateNetherlandsResponse"`

	Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

	LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`
}

type VinByLicencePlateSpainResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService VinByLicencePlateSpainResponse"`

	Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

	LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

	InitialRegistration soap.XSDDateTime `xml:"initialRegistration,omitempty" json:"initialRegistration,omitempty"`

	Capacity int64 `xml:"capacity,omitempty" json:"capacity,omitempty"`

	PowerKw float64 `xml:"powerKw,omitempty" json:"powerKw,omitempty"`

	CodeFuelMethod string `xml:"codeFuelMethod,omitempty" json:"codeFuelMethod,omitempty"`
}

type GetVinByLicencePlateItaly struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateItaly"`

	Request *VinByLicencePlateItalyRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type VinByLicencePlateItalyRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService vinByLicencePlateItalyRequest"`

	LicencePlate *string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`
}

type GetVinByLicencePlateItalyResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateItalyResponse"`

	VXS struct {
		Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

		LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

		InitialRegistration soap.XSDDateTime `xml:"initialRegistration,omitempty" json:"initialRegistration,omitempty"`

		ModelPermissionNumber string `xml:"modelPermissionNumber,omitempty" json:"modelPermissionNumber,omitempty"`

		EngineCode string `xml:"engineCode,omitempty" json:"engineCode,omitempty"`

		LastRevisionDate soap.XSDDateTime `xml:"lastRevisionDate,omitempty" json:"lastRevisionDate,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type GetVehicleIdentificationByNationalCodeAustria struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByNationalCodeAustria"`

	Request *NationalCodeAustriaSelectionRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type NationalCodeAustriaSelectionRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService nationalCodeAustriaSelectionRequest"`

	Locale *Locale `xml:"locale,omitempty" json:"locale,omitempty"`

	NationalCode string `xml:"nationalCode,omitempty" json:"nationalCode,omitempty"`

	Restriction *ReleaseRestriction `xml:"restriction,omitempty" json:"restriction,omitempty"`
}

type Locale struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService locale"`

	Country string `xml:"country,attr,omitempty" json:"country,omitempty"`

	DatCountryIndicator string `xml:"datCountryIndicator,attr,omitempty" json:"datCountryIndicator,omitempty"`

	Language string `xml:"language,attr,omitempty" json:"language,omitempty"`
}

type GetVehicleIdentificationByNationalCodeAustriaResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByNationalCodeAustriaResponse"`

	VXS struct {
		Dossier []*Dossier `xml:"Dossier,omitempty" json:"Dossier,omitempty"`

		Source string `xml:"source,attr,omitempty" json:"source,omitempty"`

		Type string `xml:"type,attr,omitempty" json:"type,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type GetVehicleIdentificationByVin struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByVin"`

	Request *VinSelectionRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type VinSelectionRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService vinSelectionRequest"`

	*AbstractSelectionRequest

	ConstructionTime *int32 `xml:"constructionTime,omitempty" json:"constructionTime,omitempty"`

	Coverage []*VehicleCoverage `xml:"coverage,omitempty" json:"coverage,omitempty"`

	MarketResearch *MarketResearch `xml:"marketResearch,omitempty" json:"marketResearch,omitempty"`

	Restriction *ReleaseRestriction `xml:"restriction,omitempty" json:"restriction,omitempty"`

	Vin string `xml:"vin,omitempty" json:"vin,omitempty"`
}

type AbstractSelectionRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService abstractSelectionRequest"`

	Locale *Locale `xml:"locale,omitempty" json:"locale,omitempty"`

	SessionID string `xml:"sessionID,omitempty" json:"sessionID,omitempty"`
}

type GetVehicleIdentificationByVinResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByVinResponse"`

	VXS struct {
		Dossier []*Dossier `xml:"Dossier,omitempty" json:"Dossier,omitempty"`

		Source string `xml:"source,attr,omitempty" json:"source,omitempty"`

		Type string `xml:"type,attr,omitempty" json:"type,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type GetVehicleIdentificationByTypecode struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByTypecode"`

	Request *TypecodeSelectionRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type TypecodeSelectionRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService typecodeSelectionRequest"`

	*AbstractSelectionRequest

	ColorCode []*string `xml:"colorCode,omitempty" json:"colorCode,omitempty"`

	Coverage []*VehicleCoverage `xml:"coverage,omitempty" json:"coverage,omitempty"`

	EquipmentCodes []*string `xml:"equipmentCodes,omitempty" json:"equipmentCodes,omitempty"`

	ManufacturerKey int32 `xml:"manufacturerKey,omitempty" json:"manufacturerKey,omitempty"`

	//ProductionDate *AnySimpleType `xml:"productionDate,omitempty" json:"productionDate,omitempty"`

	Restriction *ReleaseRestriction `xml:"restriction,omitempty" json:"restriction,omitempty"`

	TypeCode string `xml:"typeCode,omitempty" json:"typeCode,omitempty"`
}

type GetVehicleIdentificationByTypecodeResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByTypecodeResponse"`

	VXS struct {
		Dossier []*Dossier `xml:"Dossier,omitempty" json:"Dossier,omitempty"`

		Source string `xml:"source,attr,omitempty" json:"source,omitempty"`

		Type string `xml:"type,attr,omitempty" json:"type,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type OrderMarkedVin struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService orderMarkedVin"`

	Request *OrderMarkedVinRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type OrderMarkedVinRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService orderMarkedVinRequest"`

	ClaimNumber *string `xml:"claimNumber,omitempty" json:"claimNumber,omitempty"`

	Contact string `xml:"contact,omitempty" json:"contact,omitempty"`

	Email string `xml:"email,omitempty" json:"email,omitempty"`

	Locale *Locale `xml:"locale,omitempty" json:"locale,omitempty"`

	Telephone string `xml:"telephone,omitempty" json:"telephone,omitempty"`

	Vin string `xml:"vin,omitempty" json:"vin,omitempty"`
}

type OrderMarkedVinResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService orderMarkedVinResponse"`

	Result bool `xml:"result,omitempty" json:"result,omitempty"`
}

type GetVehicleIdentificationByKba struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByKba"`

	Request *KbaSelectionRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type KbaSelectionRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService kbaSelectionRequest"`

	Kba string `xml:"kba,omitempty" json:"kba,omitempty"`

	Locale *Locale `xml:"locale,omitempty" json:"locale,omitempty"`

	Restriction *ReleaseRestriction `xml:"restriction,omitempty" json:"restriction,omitempty"`
}

type GetVehicleIdentificationByKbaResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByKbaResponse"`

	VXS struct {
		Dossier []*Dossier `xml:"Dossier,omitempty" json:"Dossier,omitempty"`

		Source string `xml:"source,attr,omitempty" json:"source,omitempty"`

		Type string `xml:"type,attr,omitempty" json:"type,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type GetVinByLicencePlateSpain struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateSpain"`

	Request *VinByLicencePlateSpainRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type VinByLicencePlateSpainRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService vinByLicencePlateSpainRequest"`

	LicencePlate *string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`
}

type GetVinByLicencePlateSpainResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateSpainResponse"`

	VinByLicencePlateSpainResponse struct {
		Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

		LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

		InitialRegistration soap.XSDDateTime `xml:"initialRegistration,omitempty" json:"initialRegistration,omitempty"`

		Capacity int64 `xml:"capacity,omitempty" json:"capacity,omitempty"`

		PowerKw float64 `xml:"powerKw,omitempty" json:"powerKw,omitempty"`

		CodeFuelMethod string `xml:"codeFuelMethod,omitempty" json:"codeFuelMethod,omitempty"`
	} `xml:"VinByLicencePlateSpainResponse,omitempty" json:"VinByLicencePlateSpainResponse,omitempty"`
}

type GetVehicleTranslation struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleTranslation"`

	Request *VehicleTranslationRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type VehicleTranslationRequest struct {
	*ConstructionPeriodSelectionRequest

	ConstructionTime int32 `xml:"constructionTime,omitempty" json:"constructionTime,omitempty"`

	Language []*string `xml:"language,omitempty" json:"language,omitempty"`

	SpecialEquipmentId []*int32 `xml:"specialEquipmentId,omitempty" json:"specialEquipmentId,omitempty"`
}

type ConstructionPeriodSelectionRequest struct {
	*PriceFocusSelectionRequest

	Container string `xml:"container,omitempty" json:"container,omitempty"`
}

type PriceFocusSelectionRequest struct {
	*BasicSelectionRequest

	DatECode string `xml:"datECode,omitempty" json:"datECode,omitempty"`
}

type BasicSelectionRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService BaseSelectionRequest"`

	*AbstractSelectionRequest

	ConstructionTimeFrom *int32 `xml:"constructionTimeFrom,omitempty" json:"constructionTimeFrom,omitempty"`

	ConstructionTimeTo *int32 `xml:"constructionTimeTo,omitempty" json:"constructionTimeTo,omitempty"`

	Restriction *ReleaseRestriction `xml:"restriction,omitempty" json:"restriction,omitempty"`
}

type GetVehicleTranslationResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleTranslationResponse"`

	VXS struct {
		Dossier []*Dossier `xml:"Dossier,omitempty" json:"Dossier,omitempty"`

		Source string `xml:"source,attr,omitempty" json:"source,omitempty"`

		Type string `xml:"type,attr,omitempty" json:"type,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type GetVinByLicencePlateGermany struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateGermany"`

	Request *VinByLicencePlateGermanyRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type VinByLicencePlateGermanyRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService vinByLicencePlateGermanyRequest"`

	InsuranceNr *string `xml:"insuranceNr,omitempty" json:"insuranceNr,omitempty"`

	LicencePlate *string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

	ReferenceDate *string `xml:"referenceDate,omitempty" json:"referenceDate,omitempty"`
}

type GetVinByLicencePlateGermanyResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateGermanyResponse"`

	LicencePlateGermanyResponse struct {
		Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

		LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

		Hsn string `xml:"hsn,omitempty" json:"hsn,omitempty"`

		Tsn string `xml:"tsn,omitempty" json:"tsn,omitempty"`

		Manufacturer string `xml:"manufacturer,omitempty" json:"manufacturer,omitempty"`

		ManufacturerType string `xml:"manufacturerType,omitempty" json:"manufacturerType,omitempty"`

		VentureCode string `xml:"ventureCode,omitempty" json:"ventureCode,omitempty"`

		ComprehensiveInsCompanyNr string `xml:"comprehensiveInsCompanyNr,omitempty" json:"comprehensiveInsCompanyNr,omitempty"`

		ComprehensiveCompanyName1 string `xml:"comprehensiveCompanyName1,omitempty" json:"comprehensiveCompanyName1,omitempty"`

		ComprehensiveCompanyName2 string `xml:"comprehensiveCompanyName2,omitempty" json:"comprehensiveCompanyName2,omitempty"`

		ComprehensiveCompanyName3 string `xml:"comprehensiveCompanyName3,omitempty" json:"comprehensiveCompanyName3,omitempty"`

		ComprehensiveBeginningDate string `xml:"comprehensiveBeginningDate,omitempty" json:"comprehensiveBeginningDate,omitempty"`

		ComprehensiveEndDate string `xml:"comprehensiveEndDate,omitempty" json:"comprehensiveEndDate,omitempty"`

		ComprehensivePolicyNr string `xml:"comprehensivePolicyNr,omitempty" json:"comprehensivePolicyNr,omitempty"`

		ComprehensiveInternalNote string `xml:"comprehensiveInternalNote,omitempty" json:"comprehensiveInternalNote,omitempty"`

		ComprehensiveContractType string `xml:"comprehensiveContractType,omitempty" json:"comprehensiveContractType,omitempty"`

		ComprehensiveFullDeductible string `xml:"comprehensiveFullDeductible,omitempty" json:"comprehensiveFullDeductible,omitempty"`

		ComprehensivePartDeductible string `xml:"comprehensivePartDeductible,omitempty" json:"comprehensivePartDeductible,omitempty"`

		AssistanceInsCompanyNr string `xml:"assistanceInsCompanyNr,omitempty" json:"assistanceInsCompanyNr,omitempty"`

		AssistanceCompanyName1 string `xml:"assistanceCompanyName1,omitempty" json:"assistanceCompanyName1,omitempty"`

		AssistanceCompanyName2 string `xml:"assistanceCompanyName2,omitempty" json:"assistanceCompanyName2,omitempty"`

		AssistanceCompanyName3 string `xml:"assistanceCompanyName3,omitempty" json:"assistanceCompanyName3,omitempty"`

		AssistanceBeginningDate string `xml:"assistanceBeginningDate,omitempty" json:"assistanceBeginningDate,omitempty"`

		AssistanceEndDate string `xml:"assistanceEndDate,omitempty" json:"assistanceEndDate,omitempty"`

		AssistancePolicyNr string `xml:"assistancePolicyNr,omitempty" json:"assistancePolicyNr,omitempty"`

		AssistanceInternalNote string `xml:"assistanceInternalNote,omitempty" json:"assistanceInternalNote,omitempty"`

		AssistanceContractType string `xml:"assistanceContractType,omitempty" json:"assistanceContractType,omitempty"`

		RegistrationYear string `xml:"registrationYear,omitempty" json:"registrationYear,omitempty"`
	} `xml:"licencePlateGermanyResponse,omitempty" json:"licencePlateGermanyResponse,omitempty"`
}

type GetSupportedVinWmi struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getSupportedVinWmi"`

	Request *AbstractSelectionRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type GetSupportedVinWmiResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getSupportedVinWmiResponse"`

	Wmi []*StringStringPair `xml:"wmi,omitempty" json:"wmi,omitempty"`
}

type StringStringPair struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService stringStringPair"`

	Key string `xml:"key,attr,omitempty" json:"key,omitempty"`

	Value string `xml:"value,attr,omitempty" json:"value,omitempty"`
}

type GetVinByLicencePlateNetherlands struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateNetherlands"`

	Request *VinByLicencePlateNetherlandsRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type VinByLicencePlateNetherlandsRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService vinByLicencePlateNetherlandsRequest"`

	LicencePlate *string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`
}

type GetVinByLicencePlateNetherlandsResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateNetherlandsResponse"`

	LicencePlateNetherlandsResponse struct {
		Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

		LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`
	} `xml:"licencePlateNetherlandsResponse,omitempty" json:"licencePlateNetherlandsResponse,omitempty"`
}

type GetVehicleIdentification struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentification"`

	Request *VehicleSelectionRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type VehicleSelectionRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService vehicleSelectionRequest"`

	*ConstructionPeriodSelectionRequest

	ConstructionTime int32 `xml:"constructionTime,omitempty" json:"constructionTime,omitempty"`
}

type GetVehicleIdentificationResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationResponse"`

	VXS struct {
		Name *FieldString `xml:"Name,omitempty" json:"Name,omitempty"`

		Description *FieldString `xml:"Description,omitempty" json:"Description,omitempty"`

		UUID *FieldString `xml:"UUID,omitempty" json:"UUID,omitempty"`

		ExternalId *FieldString `xml:"ExternalId,omitempty" json:"ExternalId,omitempty"`

		IdSD2 *FieldString12 `xml:"IdSD2,omitempty" json:"IdSD2,omitempty"`

		IdSDo *FieldInteger `xml:"IdSDo,omitempty" json:"IdSDo,omitempty"`

		IdSD3Local *FieldInteger `xml:"IdSD3Local,omitempty" json:"IdSD3Local,omitempty"`

		DossierId *FieldInteger `xml:"DossierId,omitempty" json:"DossierId,omitempty"`

		IdSD3Network *FieldInteger `xml:"IdSD3Network,omitempty" json:"IdSD3Network,omitempty"`

		IdExtern *FieldString40 `xml:"IdExtern,omitempty" json:"IdExtern,omitempty"`

		Country *FieldString3 `xml:"Country,omitempty" json:"Country,omitempty"`

		Language *FieldString5 `xml:"Language,omitempty" json:"Language,omitempty"`

		DataVersion *FieldDecimal `xml:"DataVersion,omitempty" json:"DataVersion,omitempty"`

		Currency *FieldString3 `xml:"Currency,omitempty" json:"Currency,omitempty"`

		DatCustomerId *FieldString10 `xml:"DatCustomerId,omitempty" json:"DatCustomerId,omitempty"`

		MerchandId *FieldDecimal `xml:"MerchandId,omitempty" json:"MerchandId,omitempty"`

		DossierType *FieldString `xml:"DossierType,omitempty" json:"DossierType,omitempty"`

		DossierOrigin *FieldString `xml:"DossierOrigin,omitempty" json:"DossierOrigin,omitempty"`

		CreateDate *FieldDateTime `xml:"CreateDate,omitempty" json:"CreateDate,omitempty"`

		CreateUser *FieldString `xml:"CreateUser,omitempty" json:"CreateUser,omitempty"`

		ChangeDate *FieldDateTime `xml:"ChangeDate,omitempty" json:"ChangeDate,omitempty"`

		ChangeUser *FieldString `xml:"ChangeUser,omitempty" json:"ChangeUser,omitempty"`

		CDYear *FieldInteger `xml:"CDYear,omitempty" json:"CDYear,omitempty"`

		CDMonth *FieldInteger `xml:"CDMonth,omitempty" json:"CDMonth,omitempty"`

		ProcedureType *FieldString `xml:"ProcedureType,omitempty" json:"ProcedureType,omitempty"`

		DatCustomerAddress *Address `xml:"DatCustomerAddress,omitempty" json:"DatCustomerAddress,omitempty"`

		Vehicle *Vehicle `xml:"Vehicle,omitempty" json:"Vehicle,omitempty"`

		Images *Images `xml:"Images,omitempty" json:"Images,omitempty"`

		ImageList *ImageList `xml:"ImageList,omitempty" json:"ImageList,omitempty"`

		VAT *VAT `xml:"VAT,omitempty" json:"VAT,omitempty"`

		Management AnyType `xml:"Management,omitempty" json:"Management,omitempty"`

		TradingData *TradingData `xml:"TradingData,omitempty" json:"TradingData,omitempty"`

		Labelling *Labelling `xml:"Labelling,omitempty" json:"Labelling,omitempty"`

		ContractData *ContractData `xml:"ContractData,omitempty" json:"ContractData,omitempty"`

		Valuation *Valuation `xml:"Valuation,omitempty" json:"Valuation,omitempty"`

		Compare *Compare `xml:"Compare,omitempty" json:"Compare,omitempty"`

		RepairCalculation *RepairCalculation `xml:"RepairCalculation,omitempty" json:"RepairCalculation,omitempty"`

		RepairOrder *RepairOrder `xml:"RepairOrder,omitempty" json:"RepairOrder,omitempty"`

		SparePartPositions *SparePartPositions `xml:"SparePartPositions,omitempty" json:"SparePartPositions,omitempty"`

		MaintenanceIntervals *MaintenanceIntervals `xml:"MaintenanceIntervals,omitempty" json:"MaintenanceIntervals,omitempty"`

		Comments *Comments `xml:"Comments,omitempty" json:"Comments,omitempty"`

		Attachments *Attachments `xml:"Attachments,omitempty" json:"Attachments,omitempty"`

		AdditionalVehicles *AdditionalVehicles `xml:"AdditionalVehicles,omitempty" json:"AdditionalVehicles,omitempty"`

		ChangeUserId *FieldInteger `xml:"ChangeUserId,omitempty" json:"ChangeUserId,omitempty"`

		CreateUserId *FieldInteger `xml:"CreateUserId,omitempty" json:"CreateUserId,omitempty"`

		WearCalculation *FieldBoolean `xml:"WearCalculation,omitempty" json:"WearCalculation,omitempty"`

		InsuranceClaim *FieldBoolean `xml:"InsuranceClaim,omitempty" json:"InsuranceClaim,omitempty"`

		AdditionalServices *AdditionalServices `xml:"AdditionalServices,omitempty" json:"AdditionalServices,omitempty"`

		ProcessManagement *ProcessManagement `xml:"ProcessManagement,omitempty" json:"ProcessManagement,omitempty"`

		TradingActivity *TradingActivity `xml:"TradingActivity,omitempty" json:"TradingActivity,omitempty"`

		TradingAdditional *TradingAdditional `xml:"TradingAdditional,omitempty" json:"TradingAdditional,omitempty"`

		MetaPositions *MetaPositions `xml:"MetaPositions,omitempty" json:"MetaPositions,omitempty"`

		TelematicData *TelematicData `xml:"TelematicData,omitempty" json:"TelematicData,omitempty"`

		Overwrite bool `xml:"overwrite,attr,omitempty" json:"overwrite,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type GetVinByLicencePlateFrance struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateFrance"`

	Request *VinByLicencePlateFranceRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type VinByLicencePlateFranceRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService vinByLicencePlateFranceRequest"`

	LicencePlate *string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`
}

type GetVinByLicencePlateFranceResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByLicencePlateFranceResponse"`

	VXS struct {
		Vin string `xml:"vin,omitempty" json:"vin,omitempty"`

		LicencePlate string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

		InitialRegistration soap.XSDDateTime `xml:"initialRegistration,omitempty" json:"initialRegistration,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type GetVehicleIdentificationByTypecodeToyota struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByTypecodeToyota"`

	Request *TypecodeSelectionToyotaRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type TypecodeSelectionToyotaRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService typecodeSelectionToyotaRequest"`

	*AbstractSelectionRequest

	ColorCode []*string `xml:"colorCode,omitempty" json:"colorCode,omitempty"`

	Coverage []*VehicleCoverage `xml:"coverage,omitempty" json:"coverage,omitempty"`

	EquipmentCode []*string `xml:"equipmentCode,omitempty" json:"equipmentCode,omitempty"`

	Manufacturer *ManufacturerToyota `xml:"manufacturer,omitempty" json:"manufacturer,omitempty"`

	//ProductionDate *AnySimpleType `xml:"productionDate,omitempty" json:"productionDate,omitempty"`

	Restriction *ReleaseRestriction `xml:"restriction,omitempty" json:"restriction,omitempty"`

	TypeCode string `xml:"typeCode,omitempty" json:"typeCode,omitempty"`
}

type GetVehicleIdentificationByTypecodeToyotaResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByTypecodeToyotaResponse"`

	VXS struct {
		Dossier []*Dossier `xml:"Dossier,omitempty" json:"Dossier,omitempty"`

		Source string `xml:"source,attr,omitempty" json:"source,omitempty"`

		Type string `xml:"type,attr,omitempty" json:"type,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type GetVehicleIdentificationByCodeSwitzerland struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByCodeSwitzerland"`

	Request *CodeSwitzerlandSelectionRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type CodeSwitzerlandSelectionRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService codeSwitzerlandSelectionRequest"`

	BaseNumber *string `xml:"baseNumber,omitempty" json:"baseNumber,omitempty"`

	LicencePlate *string `xml:"licencePlate,omitempty" json:"licencePlate,omitempty"`

	Locale *Locale `xml:"locale,omitempty" json:"locale,omitempty"`

	Restriction *ReleaseRestriction `xml:"restriction,omitempty" json:"restriction,omitempty"`

	TypeNoteNumber *string `xml:"typeNoteNumber,omitempty" json:"typeNoteNumber,omitempty"`
}

type GetVehicleIdentificationByCodeSwitzerlandResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVehicleIdentificationByCodeSwitzerlandResponse"`

	VXS struct {
		Dossier []*Dossier `xml:"Dossier,omitempty" json:"Dossier,omitempty"`

		Source string `xml:"source,attr,omitempty" json:"source,omitempty"`

		Type string `xml:"type,attr,omitempty" json:"type,omitempty"`
	} `xml:"VXS,omitempty" json:"VXS,omitempty"`
}

type GetVinByOcr struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByOcr"`

	Request *VinOcrRequest `xml:"request,omitempty" json:"request,omitempty"`
}

type VinOcrRequest struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService vinOcrRequest"`

	ImageBase64 *string `xml:"imageBase64,omitempty" json:"imageBase64,omitempty"`
}

type GetVinByOcrResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService getVinByOcrResponse"`

	Vin *VinOcrResponse `xml:"vin,omitempty" json:"vin,omitempty"`
}

type VinOcrResponse struct {
	XMLName xml.Name `xml:"http://sphinx.dat.de/services/VehicleIdentificationService vinOcrResponse"`

	Vin *string `xml:"vin,omitempty" json:"vin,omitempty"`
}

type VehicleIdentificationService interface {
	GetVehicleIdentificationByTypecode(request *GetVehicleIdentificationByTypecode) (*GetVehicleIdentificationByTypecodeResponse, error)

	GetVehicleIdentificationByTypecodeContext(ctx context.Context, request *GetVehicleIdentificationByTypecode) (*GetVehicleIdentificationByTypecodeResponse, error)

	GetVehicleIdentificationByTypecodeToyota(request *GetVehicleIdentificationByTypecodeToyota) (*GetVehicleIdentificationByTypecodeToyotaResponse, error)

	GetVehicleIdentificationByTypecodeToyotaContext(ctx context.Context, request *GetVehicleIdentificationByTypecodeToyota) (*GetVehicleIdentificationByTypecodeToyotaResponse, error)

	GetVehicleIdentificationByNationalCodeAustria(request *GetVehicleIdentificationByNationalCodeAustria) (*GetVehicleIdentificationByNationalCodeAustriaResponse, error)

	GetVehicleIdentificationByNationalCodeAustriaContext(ctx context.Context, request *GetVehicleIdentificationByNationalCodeAustria) (*GetVehicleIdentificationByNationalCodeAustriaResponse, error)

	GetVehicleIdentificationByCodeSwitzerland(request *GetVehicleIdentificationByCodeSwitzerland) (*GetVehicleIdentificationByCodeSwitzerlandResponse, error)

	GetVehicleIdentificationByCodeSwitzerlandContext(ctx context.Context, request *GetVehicleIdentificationByCodeSwitzerland) (*GetVehicleIdentificationByCodeSwitzerlandResponse, error)

	OrderMarkedVin(request *OrderMarkedVin) (*OrderMarkedVinResponse, error)

	OrderMarkedVinContext(ctx context.Context, request *OrderMarkedVin) (*OrderMarkedVinResponse, error)

	GetVehicleIdentification(request *GetVehicleIdentification) (*GetVehicleIdentificationResponse, error)

	GetVehicleIdentificationContext(ctx context.Context, request *GetVehicleIdentification) (*GetVehicleIdentificationResponse, error)

	GetSupportedVinWmi(request *GetSupportedVinWmi) (*GetSupportedVinWmiResponse, error)

	GetSupportedVinWmiContext(ctx context.Context, request *GetSupportedVinWmi) (*GetSupportedVinWmiResponse, error)

	GetVehicleTranslation(request *GetVehicleTranslation) (*GetVehicleTranslationResponse, error)

	GetVehicleTranslationContext(ctx context.Context, request *GetVehicleTranslation) (*GetVehicleTranslationResponse, error)

	GetVehicleIdentificationByVin(request *GetVehicleIdentificationByVin) (*GetVehicleIdentificationByVinResponse, error)

	GetVehicleIdentificationByVinContext(ctx context.Context, request *GetVehicleIdentificationByVin) (*GetVehicleIdentificationByVinResponse, error)

	GetVinByOcr(request *GetVinByOcr) (*GetVinByOcrResponse, error)

	GetVinByOcrContext(ctx context.Context, request *GetVinByOcr) (*GetVinByOcrResponse, error)

	GetVinByLicencePlateFrance(request *GetVinByLicencePlateFrance) (*GetVinByLicencePlateFranceResponse, error)

	GetVinByLicencePlateFranceContext(ctx context.Context, request *GetVinByLicencePlateFrance) (*GetVinByLicencePlateFranceResponse, error)

	GetVinByLicencePlateItaly(request *GetVinByLicencePlateItaly) (*GetVinByLicencePlateItalyResponse, error)

	GetVinByLicencePlateItalyContext(ctx context.Context, request *GetVinByLicencePlateItaly) (*GetVinByLicencePlateItalyResponse, error)

	GetVinByLicencePlateSpain(request *GetVinByLicencePlateSpain) (*GetVinByLicencePlateSpainResponse, error)

	GetVinByLicencePlateSpainContext(ctx context.Context, request *GetVinByLicencePlateSpain) (*GetVinByLicencePlateSpainResponse, error)

	GetVehicleIdentificationByKba(request *GetVehicleIdentificationByKba) (*GetVehicleIdentificationByKbaResponse, error)

	GetVehicleIdentificationByKbaContext(ctx context.Context, request *GetVehicleIdentificationByKba) (*GetVehicleIdentificationByKbaResponse, error)

	GetVinByLicencePlateNetherlands(request *GetVinByLicencePlateNetherlands) (*GetVinByLicencePlateNetherlandsResponse, error)

	GetVinByLicencePlateNetherlandsContext(ctx context.Context, request *GetVinByLicencePlateNetherlands) (*GetVinByLicencePlateNetherlandsResponse, error)

	GetVinByLicencePlateGermany(request *GetVinByLicencePlateGermany) (*GetVinByLicencePlateGermanyResponse, error)

	GetVinByLicencePlateGermanyContext(ctx context.Context, request *GetVinByLicencePlateGermany) (*GetVinByLicencePlateGermanyResponse, error)
}

type vehicleIdentificationService struct {
	client *soap.Client
}

func NewVehicleIdentificationService(client *soap.Client) VehicleIdentificationService {
	return &vehicleIdentificationService{
		client: client,
	}
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByTypecodeContext(ctx context.Context, request *GetVehicleIdentificationByTypecode) (*GetVehicleIdentificationByTypecodeResponse, error) {
	response := new(GetVehicleIdentificationByTypecodeResponse)
	err := service.client.CallContext(ctx, "getVehicleIdentificationByTypecode", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByTypecode(request *GetVehicleIdentificationByTypecode) (*GetVehicleIdentificationByTypecodeResponse, error) {
	return service.GetVehicleIdentificationByTypecodeContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByTypecodeToyotaContext(ctx context.Context, request *GetVehicleIdentificationByTypecodeToyota) (*GetVehicleIdentificationByTypecodeToyotaResponse, error) {
	response := new(GetVehicleIdentificationByTypecodeToyotaResponse)
	err := service.client.CallContext(ctx, "getVehicleIdentificationByTypecodeToyota", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByTypecodeToyota(request *GetVehicleIdentificationByTypecodeToyota) (*GetVehicleIdentificationByTypecodeToyotaResponse, error) {
	return service.GetVehicleIdentificationByTypecodeToyotaContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByNationalCodeAustriaContext(ctx context.Context, request *GetVehicleIdentificationByNationalCodeAustria) (*GetVehicleIdentificationByNationalCodeAustriaResponse, error) {
	response := new(GetVehicleIdentificationByNationalCodeAustriaResponse)
	err := service.client.CallContext(ctx, "getVehicleIdentificationByNationalCodeAustria", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByNationalCodeAustria(request *GetVehicleIdentificationByNationalCodeAustria) (*GetVehicleIdentificationByNationalCodeAustriaResponse, error) {
	return service.GetVehicleIdentificationByNationalCodeAustriaContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByCodeSwitzerlandContext(ctx context.Context, request *GetVehicleIdentificationByCodeSwitzerland) (*GetVehicleIdentificationByCodeSwitzerlandResponse, error) {
	response := new(GetVehicleIdentificationByCodeSwitzerlandResponse)
	err := service.client.CallContext(ctx, "getVehicleIdentificationByCodeSwitzerland", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByCodeSwitzerland(request *GetVehicleIdentificationByCodeSwitzerland) (*GetVehicleIdentificationByCodeSwitzerlandResponse, error) {
	return service.GetVehicleIdentificationByCodeSwitzerlandContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) OrderMarkedVinContext(ctx context.Context, request *OrderMarkedVin) (*OrderMarkedVinResponse, error) {
	response := new(OrderMarkedVinResponse)
	err := service.client.CallContext(ctx, "orderMarkedVin", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) OrderMarkedVin(request *OrderMarkedVin) (*OrderMarkedVinResponse, error) {
	return service.OrderMarkedVinContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVehicleIdentificationContext(ctx context.Context, request *GetVehicleIdentification) (*GetVehicleIdentificationResponse, error) {
	response := new(GetVehicleIdentificationResponse)
	err := service.client.CallContext(ctx, "getVehicleIdentification", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVehicleIdentification(request *GetVehicleIdentification) (*GetVehicleIdentificationResponse, error) {
	return service.GetVehicleIdentificationContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetSupportedVinWmiContext(ctx context.Context, request *GetSupportedVinWmi) (*GetSupportedVinWmiResponse, error) {
	response := new(GetSupportedVinWmiResponse)
	err := service.client.CallContext(ctx, "getSupportedVinWmi", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetSupportedVinWmi(request *GetSupportedVinWmi) (*GetSupportedVinWmiResponse, error) {
	return service.GetSupportedVinWmiContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVehicleTranslationContext(ctx context.Context, request *GetVehicleTranslation) (*GetVehicleTranslationResponse, error) {
	response := new(GetVehicleTranslationResponse)
	err := service.client.CallContext(ctx, "getVehicleTranslation", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVehicleTranslation(request *GetVehicleTranslation) (*GetVehicleTranslationResponse, error) {
	return service.GetVehicleTranslationContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByVinContext(ctx context.Context, request *GetVehicleIdentificationByVin) (*GetVehicleIdentificationByVinResponse, error) {
	response := new(GetVehicleIdentificationByVinResponse)
	err := service.client.CallContext(ctx, "getVehicleIdentificationByVin", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByVin(request *GetVehicleIdentificationByVin) (*GetVehicleIdentificationByVinResponse, error) {
	return service.GetVehicleIdentificationByVinContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVinByOcrContext(ctx context.Context, request *GetVinByOcr) (*GetVinByOcrResponse, error) {
	response := new(GetVinByOcrResponse)
	err := service.client.CallContext(ctx, "getVinByOcr", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVinByOcr(request *GetVinByOcr) (*GetVinByOcrResponse, error) {
	return service.GetVinByOcrContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVinByLicencePlateFranceContext(ctx context.Context, request *GetVinByLicencePlateFrance) (*GetVinByLicencePlateFranceResponse, error) {
	response := new(GetVinByLicencePlateFranceResponse)
	err := service.client.CallContext(ctx, "getVinByLicencePlateFrance", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVinByLicencePlateFrance(request *GetVinByLicencePlateFrance) (*GetVinByLicencePlateFranceResponse, error) {
	return service.GetVinByLicencePlateFranceContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVinByLicencePlateItalyContext(ctx context.Context, request *GetVinByLicencePlateItaly) (*GetVinByLicencePlateItalyResponse, error) {
	response := new(GetVinByLicencePlateItalyResponse)
	err := service.client.CallContext(ctx, "getVinByLicencePlateItaly", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVinByLicencePlateItaly(request *GetVinByLicencePlateItaly) (*GetVinByLicencePlateItalyResponse, error) {
	return service.GetVinByLicencePlateItalyContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVinByLicencePlateSpainContext(ctx context.Context, request *GetVinByLicencePlateSpain) (*GetVinByLicencePlateSpainResponse, error) {
	response := new(GetVinByLicencePlateSpainResponse)
	err := service.client.CallContext(ctx, "getVinByLicencePlateSpain", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVinByLicencePlateSpain(request *GetVinByLicencePlateSpain) (*GetVinByLicencePlateSpainResponse, error) {
	return service.GetVinByLicencePlateSpainContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByKbaContext(ctx context.Context, request *GetVehicleIdentificationByKba) (*GetVehicleIdentificationByKbaResponse, error) {
	response := new(GetVehicleIdentificationByKbaResponse)
	err := service.client.CallContext(ctx, "getVehicleIdentificationByKba", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVehicleIdentificationByKba(request *GetVehicleIdentificationByKba) (*GetVehicleIdentificationByKbaResponse, error) {
	return service.GetVehicleIdentificationByKbaContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVinByLicencePlateNetherlandsContext(ctx context.Context, request *GetVinByLicencePlateNetherlands) (*GetVinByLicencePlateNetherlandsResponse, error) {
	response := new(GetVinByLicencePlateNetherlandsResponse)
	err := service.client.CallContext(ctx, "getVinByLicencePlateNetherlands", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVinByLicencePlateNetherlands(request *GetVinByLicencePlateNetherlands) (*GetVinByLicencePlateNetherlandsResponse, error) {
	return service.GetVinByLicencePlateNetherlandsContext(
		context.Background(),
		request,
	)
}

func (service *vehicleIdentificationService) GetVinByLicencePlateGermanyContext(ctx context.Context, request *GetVinByLicencePlateGermany) (*GetVinByLicencePlateGermanyResponse, error) {
	response := new(GetVinByLicencePlateGermanyResponse)
	err := service.client.CallContext(ctx, "getVinByLicencePlateGermany", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *vehicleIdentificationService) GetVinByLicencePlateGermany(request *GetVinByLicencePlateGermany) (*GetVinByLicencePlateGermanyResponse, error) {
	return service.GetVinByLicencePlateGermanyContext(
		context.Background(),
		request,
	)
}
