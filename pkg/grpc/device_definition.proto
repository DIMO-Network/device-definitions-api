syntax = "proto3";

import "google/protobuf/timestamp.proto";

option go_package = "github.com/DIMO-Network/device-definitions-api/pkg/grpc";

package grpc;

message GetDeviceDefinitionRequest {
	repeated string ids = 1;
}

message GetDeviceDefinitionResponse {
	repeated GetDeviceDefinitionItemResponse device_definitions = 1;
}

message GetDeviceDefinitionItemResponse {
	string device_definition_id = 1;
	string name = 2;
	string image_url = 3;
	repeated  CompatibleIntegrations compatible_integrations = 4;
	Type type = 5;
	VehicleInfo vehicle_data = 6;
	bool  verified = 7;
	repeated  DeviceIntegrations device_integrations = 8;
	Make make = 9;
	repeated DeviceStyles device_styles = 10;

	message CompatibleIntegrations {
		string id = 1;
		string  type = 2;
		string  style = 3;
		string  vendor = 4;
		string  region = 5;
		string  country = 6;
		string  capabilities = 7;
	}

	message Type {
		string type = 1;
		string  make = 2;
		string  model = 3;
		int32 year = 4;
		repeated string sub_models = 5;
	}

	message DeviceIntegrations {
		string id = 1;		
		string type = 2;
		string style = 3;
		string vendor = 4;
		string region = 5;
		string country = 6;
		string capabilities = 7;
		string deviceDefinitionId = 8;
	}

	message DeviceStyles {
		string id = 1;
		string source = 2;
		string name = 3;
		string subModel = 4;
		string deviceDefinitionId = 5;
		string external_style_id = 6;
	}

	message Make {
		string id = 1;
		string name = 2;
		string logo_url = 3;
		string oem_platform_name = 4;
		uint64 token_id = 5;
	}
}


message VehicleInfo {
	string fuel_type = 1;
	string driven_wheels = 2;
	int32 number_of_doors = 3;
	int32 base_MSRP = 4;
	string EPA_class = 5;
	string vehicle_type = 6;
	float MPG_highway = 7;
	float MPG_city = 8;
	float fuel_tank_capacity_gal = 9;
	float MPG = 10;
}

message GetDeviceDefinitionByMMYRequest {
	string make = 1;
	string makeID = 2;
	string model = 3;
	int32 year = 4;
}

message GetIntegrationResponse {
	repeated GetIntegrationItemResponse integrations = 1;
}

message EmptyRequest
{

}

message GetIntegrationItemResponse {
	string id = 1;
	string type = 2;
	string style = 3;
	string vendor = 4;
	int32 auto_pi_default_template_id = 5;
	GetAutoPiPowertrainTemplate auto_pi_powertrain_template = 6;

	message  GetAutoPiPowertrainTemplate {
		int32 BEV = 1;
		int32 HEV = 2;
		int32 ICE = 3;
		int32 PHEV = 4;
	}
}

message GetDeviceDefinitionIntegrationResponse{
	repeated GetDeviceDefinitionIntegrationItemResponse integrations = 1;
}

message GetDeviceDefinitionIntegrationItemResponse {
	string id = 1;
	string type = 2;
	string style = 3;
	string vendor = 4;
	string region = 5;
	string country = 6;
	string capabilities = 7;
}

message GetDeviceDefinitionIntegrationRequest {
	string id = 1;
}

message CreateDeviceDefinitionRequest {
 string make = 1;
 string model = 2;
 int32 year = 3;
 string source = 4;
}

message CreateDeviceDefinitionResponse {
	string id = 1;
}


message CreateDeviceIntegrationRequest {
	string device_definition_id = 1;
	string integration_id = 2;
	string region = 3;
}

message CreateDeviceIntegrationResponse {
	string id = 1;
}

message UpdateDeviceDefinitionRequest {
	string device_definition_id = 1;
	VehicleInfo vehicle_data = 2;
	string source = 3;
	string image_URL = 4;
	bool verified = 5;
	string model = 6;
	int32 year = 7;
	string device_make_ID = 8;
	repeated DeviceStyles device_styles = 9;
	repeated DeviceIntegrations device_integrations = 10;

	message DeviceStyles {
		string id = 1;
		string name = 2;
		string external_style_id = 3;
		string source = 4;
		google.protobuf.Timestamp created_at = 5;
		google.protobuf.Timestamp updated_at = 6;
		string sub_model = 7;
	}

	message DeviceIntegrations {
		string integration_id = 1;
		string region = 2;
		google.protobuf.Timestamp created_at = 3;
		google.protobuf.Timestamp updated_at = 4;
		string capabilities = 5;
	}

}

message UpdateDeviceDefinitionResponse {
	string id = 1;
}

message UpdateDeviceDefinitionImageRequest {
	string device_definition_id = 1;
	string image_url = 2;
}

message GetDeviceDefinitionAllResponse {
	repeated GetDeviceDefinitionAllItemResponse items = 1;
}

message GetDeviceDefinitionAllItemResponse {
	string make = 1;
	repeated GetDeviceModels models = 2;

	message GetDeviceModels {
		string model = 1;
		repeated GetDeviceModelYears years = 2;
	}

	message GetDeviceModelYears {
		int32 year = 1;
		string DeviceDefinitionID = 2;
	}
}

message FilterDeviceDefinitionRequest {
	string MakeID = 1;
	string IntegrationID = 2;
	string DeviceDefinitionID = 3;
	int32 Year = 4;
	string Model = 5;
	repeated string VerifiedVinList = 6;
	int32 PageIndex = 7;
	int32 PageSize = 8;
}

message GetFilteredDeviceDefinitionsResponse {
	repeated FilterDeviceDefinitionsReponse Items = 1;
}

message FilterDeviceDefinitionsReponse {
	string ID = 1;
	string Model = 2;
	int32 Year = 3;
	string ImageUrl = 4;
	int64 CreatedAt = 5;
	int64 UpdatedAt = 6;
	string Metadata = 7;
	string Source = 8;
	bool Verified = 9;
	string External = 10;
	string DeviceMakeID = 11;
	string Make = 12;
}

message CreateDeviceStyleRequest {
	string DeviceDefinitionID = 1;
	string Name = 2;
	string ExternalStyleID = 3;
	string Source = 4;
	string SubModel = 5;
}

message CreateDeviceStyleResponse {
	string ID = 1;
}

message GetDeviceCompatibilityListRequest {
	string makeId = 1;
}

message Features {
	string key = 1;
	int32 support_level = 2;
}

message DeviceCompatibilityList {
	string model = 1;
	int32 year = 2;
	repeated Features features = 3;
}

message GetDeviceCompatibilityListResponse {
	string make = 1;
	repeated DeviceCompatibilityList device_compatibilities = 2;
}

service DeviceDefinitionService {
	rpc GetDeviceDefinitionByID(GetDeviceDefinitionRequest) returns (GetDeviceDefinitionResponse);
	rpc GetDeviceDefinitionByMMY(GetDeviceDefinitionByMMYRequest) returns (GetDeviceDefinitionItemResponse);
	rpc GetIntegrations(EmptyRequest) returns (GetIntegrationResponse);
	rpc GetDeviceDefinitionIntegration(GetDeviceDefinitionIntegrationRequest) returns (GetDeviceDefinitionIntegrationResponse);
	rpc CreateDeviceDefinition(CreateDeviceDefinitionRequest) returns (CreateDeviceDefinitionResponse);
	rpc CreateDeviceIntegration(CreateDeviceIntegrationRequest) returns (CreateDeviceIntegrationResponse);
	rpc CreateDeviceStyle(CreateDeviceStyleRequest) returns (CreateDeviceStyleResponse);
	rpc UpdateDeviceDefinition(UpdateDeviceDefinitionRequest) returns (UpdateDeviceDefinitionResponse);
	rpc SetDeviceDefinitionImage(UpdateDeviceDefinitionImageRequest) returns (UpdateDeviceDefinitionResponse);
	rpc GetDeviceDefinitionAll(EmptyRequest) returns (GetDeviceDefinitionAllResponse);
	rpc GetFilteredDeviceDefinition(FilterDeviceDefinitionRequest) returns (GetFilteredDeviceDefinitionsResponse);
	rpc GetDeviceCompaitibility(GetDeviceCompatibilityListRequest) returns (GetDeviceCompatibilityListResponse);
}