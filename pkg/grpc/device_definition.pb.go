// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: pkg/grpc/device_definition.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDeviceDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *GetDeviceDefinitionRequest) Reset() {
	*x = GetDeviceDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionRequest) ProtoMessage() {}

func (x *GetDeviceDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{0}
}

func (x *GetDeviceDefinitionRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetDeviceDefinitionBySlugRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	Year int32  `protobuf:"varint,2,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *GetDeviceDefinitionBySlugRequest) Reset() {
	*x = GetDeviceDefinitionBySlugRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionBySlugRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionBySlugRequest) ProtoMessage() {}

func (x *GetDeviceDefinitionBySlugRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionBySlugRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionBySlugRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{1}
}

func (x *GetDeviceDefinitionBySlugRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *GetDeviceDefinitionBySlugRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type GetDeviceDefinitionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDefinitions []*GetDeviceDefinitionItemResponse `protobuf:"bytes,1,rep,name=device_definitions,json=deviceDefinitions,proto3" json:"device_definitions,omitempty"`
}

func (x *GetDeviceDefinitionResponse) Reset() {
	*x = GetDeviceDefinitionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionResponse) ProtoMessage() {}

func (x *GetDeviceDefinitionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{2}
}

func (x *GetDeviceDefinitionResponse) GetDeviceDefinitions() []*GetDeviceDefinitionItemResponse {
	if x != nil {
		return x.DeviceDefinitions
	}
	return nil
}

type GetDeviceDefinitionItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDefinitionId string      `protobuf:"bytes,1,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	Name               string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl           string      `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Type               *DeviceType `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// Deprecated: Do not use.
	VehicleData        *VehicleInfo         `protobuf:"bytes,5,opt,name=vehicle_data,json=vehicleData,proto3" json:"vehicle_data,omitempty"`
	Verified           bool                 `protobuf:"varint,6,opt,name=verified,proto3" json:"verified,omitempty"`
	DeviceIntegrations []*DeviceIntegration `protobuf:"bytes,7,rep,name=device_integrations,json=deviceIntegrations,proto3" json:"device_integrations,omitempty"`
	Make               *DeviceMake          `protobuf:"bytes,8,opt,name=make,proto3" json:"make,omitempty"`
	DeviceStyles       []*DeviceStyle       `protobuf:"bytes,9,rep,name=device_styles,json=deviceStyles,proto3" json:"device_styles,omitempty"`
	// Deprecated: Do not use.
	Source string `protobuf:"bytes,10,opt,name=source,proto3" json:"source,omitempty"`
	// Deprecated: Do not use.
	ExternalId         string                 `protobuf:"bytes,11,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	DeviceAttributes   []*DeviceTypeAttribute `protobuf:"bytes,12,rep,name=device_attributes,json=deviceAttributes,proto3" json:"device_attributes,omitempty"`
	ExternalIds        []*ExternalID          `protobuf:"bytes,13,rep,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
	HardwareTemplateId string                 `protobuf:"bytes,14,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *GetDeviceDefinitionItemResponse) Reset() {
	*x = GetDeviceDefinitionItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionItemResponse) ProtoMessage() {}

func (x *GetDeviceDefinitionItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionItemResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionItemResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{3}
}

func (x *GetDeviceDefinitionItemResponse) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *GetDeviceDefinitionItemResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDeviceDefinitionItemResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GetDeviceDefinitionItemResponse) GetType() *DeviceType {
	if x != nil {
		return x.Type
	}
	return nil
}

// Deprecated: Do not use.
func (x *GetDeviceDefinitionItemResponse) GetVehicleData() *VehicleInfo {
	if x != nil {
		return x.VehicleData
	}
	return nil
}

func (x *GetDeviceDefinitionItemResponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *GetDeviceDefinitionItemResponse) GetDeviceIntegrations() []*DeviceIntegration {
	if x != nil {
		return x.DeviceIntegrations
	}
	return nil
}

func (x *GetDeviceDefinitionItemResponse) GetMake() *DeviceMake {
	if x != nil {
		return x.Make
	}
	return nil
}

func (x *GetDeviceDefinitionItemResponse) GetDeviceStyles() []*DeviceStyle {
	if x != nil {
		return x.DeviceStyles
	}
	return nil
}

// Deprecated: Do not use.
func (x *GetDeviceDefinitionItemResponse) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// Deprecated: Do not use.
func (x *GetDeviceDefinitionItemResponse) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *GetDeviceDefinitionItemResponse) GetDeviceAttributes() []*DeviceTypeAttribute {
	if x != nil {
		return x.DeviceAttributes
	}
	return nil
}

func (x *GetDeviceDefinitionItemResponse) GetExternalIds() []*ExternalID {
	if x != nil {
		return x.ExternalIds
	}
	return nil
}

func (x *GetDeviceDefinitionItemResponse) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type GetDevicesMMYResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device []*GetDevicesMMYItemResponse `protobuf:"bytes,1,rep,name=device,proto3" json:"device,omitempty"`
}

func (x *GetDevicesMMYResponse) Reset() {
	*x = GetDevicesMMYResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesMMYResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesMMYResponse) ProtoMessage() {}

func (x *GetDevicesMMYResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesMMYResponse.ProtoReflect.Descriptor instead.
func (*GetDevicesMMYResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{4}
}

func (x *GetDevicesMMYResponse) GetDevice() []*GetDevicesMMYItemResponse {
	if x != nil {
		return x.Device
	}
	return nil
}

type GetDevicesMMYItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Make               string `protobuf:"bytes,1,opt,name=make,proto3" json:"make,omitempty"`
	Model              string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Year               int32  `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	Id                 string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	HardwareTemplateId string `protobuf:"bytes,5,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *GetDevicesMMYItemResponse) Reset() {
	*x = GetDevicesMMYItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesMMYItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesMMYItemResponse) ProtoMessage() {}

func (x *GetDevicesMMYItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesMMYItemResponse.ProtoReflect.Descriptor instead.
func (*GetDevicesMMYItemResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{5}
}

func (x *GetDevicesMMYItemResponse) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *GetDevicesMMYItemResponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GetDevicesMMYItemResponse) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetDevicesMMYItemResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDevicesMMYItemResponse) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type ExternalID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor string `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Id     string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExternalID) Reset() {
	*x = ExternalID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalID) ProtoMessage() {}

func (x *ExternalID) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalID.ProtoReflect.Descriptor instead.
func (*ExternalID) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{6}
}

func (x *ExternalID) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *ExternalID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RideGuideLink string `protobuf:"bytes,1,opt,name=RideGuideLink,proto3" json:"RideGuideLink,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{7}
}

func (x *Metadata) GetRideGuideLink() string {
	if x != nil {
		return x.RideGuideLink
	}
	return ""
}

type DeviceTypeAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label        string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Type         string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Required     bool     `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue string   `protobuf:"bytes,5,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Value        string   `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Options      []string `protobuf:"bytes,7,rep,name=options,proto3" json:"options,omitempty"`
	Description  string   `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *DeviceTypeAttribute) Reset() {
	*x = DeviceTypeAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeAttribute) ProtoMessage() {}

func (x *DeviceTypeAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeAttribute.ProtoReflect.Descriptor instead.
func (*DeviceTypeAttribute) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{8}
}

func (x *DeviceTypeAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceTypeAttribute) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *DeviceTypeAttribute) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeviceTypeAttribute) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *DeviceTypeAttribute) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *DeviceTypeAttribute) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DeviceTypeAttribute) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *DeviceTypeAttribute) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeviceTypeAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DeviceTypeAttributeRequest) Reset() {
	*x = DeviceTypeAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeAttributeRequest) ProtoMessage() {}

func (x *DeviceTypeAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeviceTypeAttributeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{9}
}

func (x *DeviceTypeAttributeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceTypeAttributeRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type DeviceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Make      string   `protobuf:"bytes,2,opt,name=make,proto3" json:"make,omitempty"`
	Model     string   `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Year      int32    `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	SubModels []string `protobuf:"bytes,5,rep,name=sub_models,json=subModels,proto3" json:"sub_models,omitempty"`
	MakeSlug  string   `protobuf:"bytes,6,opt,name=make_slug,json=makeSlug,proto3" json:"make_slug,omitempty"`
	ModelSlug string   `protobuf:"bytes,7,opt,name=model_slug,json=modelSlug,proto3" json:"model_slug,omitempty"`
}

func (x *DeviceType) Reset() {
	*x = DeviceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceType) ProtoMessage() {}

func (x *DeviceType) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceType.ProtoReflect.Descriptor instead.
func (*DeviceType) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{10}
}

func (x *DeviceType) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DeviceType) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *DeviceType) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *DeviceType) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *DeviceType) GetSubModels() []string {
	if x != nil {
		return x.SubModels
	}
	return nil
}

func (x *DeviceType) GetMakeSlug() string {
	if x != nil {
		return x.MakeSlug
	}
	return ""
}

func (x *DeviceType) GetModelSlug() string {
	if x != nil {
		return x.ModelSlug
	}
	return ""
}

type DeviceStyle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Source             string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Name               string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	SubModel           string                 `protobuf:"bytes,4,opt,name=sub_model,json=subModel,proto3" json:"sub_model,omitempty"`
	DeviceDefinitionId string                 `protobuf:"bytes,5,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	ExternalStyleId    string                 `protobuf:"bytes,6,opt,name=external_style_id,json=externalStyleId,proto3" json:"external_style_id,omitempty"`
	HardwareTemplateId string                 `protobuf:"bytes,7,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
	DeviceAttributes   []*DeviceTypeAttribute `protobuf:"bytes,8,rep,name=device_attributes,json=deviceAttributes,proto3" json:"device_attributes,omitempty"`
}

func (x *DeviceStyle) Reset() {
	*x = DeviceStyle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceStyle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStyle) ProtoMessage() {}

func (x *DeviceStyle) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceStyle.ProtoReflect.Descriptor instead.
func (*DeviceStyle) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{11}
}

func (x *DeviceStyle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceStyle) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DeviceStyle) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceStyle) GetSubModel() string {
	if x != nil {
		return x.SubModel
	}
	return ""
}

func (x *DeviceStyle) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *DeviceStyle) GetExternalStyleId() string {
	if x != nil {
		return x.ExternalStyleId
	}
	return ""
}

func (x *DeviceStyle) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

func (x *DeviceStyle) GetDeviceAttributes() []*DeviceTypeAttribute {
	if x != nil {
		return x.DeviceAttributes
	}
	return nil
}

type DeviceMake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LogoUrl         string `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	OemPlatformName string `protobuf:"bytes,4,opt,name=oem_platform_name,json=oemPlatformName,proto3" json:"oem_platform_name,omitempty"`
	TokenId         uint64 `protobuf:"varint,5,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	NameSlug        string `protobuf:"bytes,6,opt,name=name_slug,json=nameSlug,proto3" json:"name_slug,omitempty"`
	// Deprecated: Do not use.
	ExternalIds        string                 `protobuf:"bytes,7,opt,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
	ExternalIdsTyped   []*ExternalID          `protobuf:"bytes,8,rep,name=external_ids_typed,json=externalIdsTyped,proto3" json:"external_ids_typed,omitempty"`
	Metadata           *Metadata              `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	HardwareTemplateId string                 `protobuf:"bytes,10,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *DeviceMake) Reset() {
	*x = DeviceMake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceMake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceMake) ProtoMessage() {}

func (x *DeviceMake) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceMake.ProtoReflect.Descriptor instead.
func (*DeviceMake) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{12}
}

func (x *DeviceMake) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceMake) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DeviceMake) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *DeviceMake) GetOemPlatformName() string {
	if x != nil {
		return x.OemPlatformName
	}
	return ""
}

func (x *DeviceMake) GetTokenId() uint64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *DeviceMake) GetNameSlug() string {
	if x != nil {
		return x.NameSlug
	}
	return ""
}

// Deprecated: Do not use.
func (x *DeviceMake) GetExternalIds() string {
	if x != nil {
		return x.ExternalIds
	}
	return ""
}

func (x *DeviceMake) GetExternalIdsTyped() []*ExternalID {
	if x != nil {
		return x.ExternalIdsTyped
	}
	return nil
}

func (x *DeviceMake) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DeviceMake) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

func (x *DeviceMake) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeviceMake) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VehicleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuelType            string  `protobuf:"bytes,1,opt,name=fuel_type,json=fuelType,proto3" json:"fuel_type,omitempty"`
	DrivenWheels        string  `protobuf:"bytes,2,opt,name=driven_wheels,json=drivenWheels,proto3" json:"driven_wheels,omitempty"`
	NumberOfDoors       int32   `protobuf:"varint,3,opt,name=number_of_doors,json=numberOfDoors,proto3" json:"number_of_doors,omitempty"`
	Base_MSRP           int32   `protobuf:"varint,4,opt,name=base_MSRP,json=baseMSRP,proto3" json:"base_MSRP,omitempty"`
	EPAClass            string  `protobuf:"bytes,5,opt,name=EPA_class,json=EPAClass,proto3" json:"EPA_class,omitempty"`
	VehicleType         string  `protobuf:"bytes,6,opt,name=vehicle_type,json=vehicleType,proto3" json:"vehicle_type,omitempty"`
	MPGHighway          float32 `protobuf:"fixed32,7,opt,name=MPG_highway,json=MPGHighway,proto3" json:"MPG_highway,omitempty"`
	MPGCity             float32 `protobuf:"fixed32,8,opt,name=MPG_city,json=MPGCity,proto3" json:"MPG_city,omitempty"`
	FuelTankCapacityGal float32 `protobuf:"fixed32,9,opt,name=fuel_tank_capacity_gal,json=fuelTankCapacityGal,proto3" json:"fuel_tank_capacity_gal,omitempty"`
	MPG                 float32 `protobuf:"fixed32,10,opt,name=MPG,proto3" json:"MPG,omitempty"`
}

func (x *VehicleInfo) Reset() {
	*x = VehicleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VehicleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VehicleInfo) ProtoMessage() {}

func (x *VehicleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VehicleInfo.ProtoReflect.Descriptor instead.
func (*VehicleInfo) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{13}
}

func (x *VehicleInfo) GetFuelType() string {
	if x != nil {
		return x.FuelType
	}
	return ""
}

func (x *VehicleInfo) GetDrivenWheels() string {
	if x != nil {
		return x.DrivenWheels
	}
	return ""
}

func (x *VehicleInfo) GetNumberOfDoors() int32 {
	if x != nil {
		return x.NumberOfDoors
	}
	return 0
}

func (x *VehicleInfo) GetBase_MSRP() int32 {
	if x != nil {
		return x.Base_MSRP
	}
	return 0
}

func (x *VehicleInfo) GetEPAClass() string {
	if x != nil {
		return x.EPAClass
	}
	return ""
}

func (x *VehicleInfo) GetVehicleType() string {
	if x != nil {
		return x.VehicleType
	}
	return ""
}

func (x *VehicleInfo) GetMPGHighway() float32 {
	if x != nil {
		return x.MPGHighway
	}
	return 0
}

func (x *VehicleInfo) GetMPGCity() float32 {
	if x != nil {
		return x.MPGCity
	}
	return 0
}

func (x *VehicleInfo) GetFuelTankCapacityGal() float32 {
	if x != nil {
		return x.FuelTankCapacityGal
	}
	return 0
}

func (x *VehicleInfo) GetMPG() float32 {
	if x != nil {
		return x.MPG
	}
	return 0
}

type GetDeviceDefinitionByMMYRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Make   string `protobuf:"bytes,1,opt,name=make,proto3" json:"make,omitempty"`
	MakeID string `protobuf:"bytes,2,opt,name=makeID,proto3" json:"makeID,omitempty"`
	Model  string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Year   int32  `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
}

func (x *GetDeviceDefinitionByMMYRequest) Reset() {
	*x = GetDeviceDefinitionByMMYRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionByMMYRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionByMMYRequest) ProtoMessage() {}

func (x *GetDeviceDefinitionByMMYRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionByMMYRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionByMMYRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{14}
}

func (x *GetDeviceDefinitionByMMYRequest) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *GetDeviceDefinitionByMMYRequest) GetMakeID() string {
	if x != nil {
		return x.MakeID
	}
	return ""
}

func (x *GetDeviceDefinitionByMMYRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GetDeviceDefinitionByMMYRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type GetDeviceDefinitionBySourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *GetDeviceDefinitionBySourceRequest) Reset() {
	*x = GetDeviceDefinitionBySourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionBySourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionBySourceRequest) ProtoMessage() {}

func (x *GetDeviceDefinitionBySourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionBySourceRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionBySourceRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{15}
}

func (x *GetDeviceDefinitionBySourceRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type GetIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations []*Integration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`
}

func (x *GetIntegrationResponse) Reset() {
	*x = GetIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationResponse) ProtoMessage() {}

func (x *GetIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationResponse.ProtoReflect.Descriptor instead.
func (*GetIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{16}
}

func (x *GetIntegrationResponse) GetIntegrations() []*Integration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

type Integration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       string                                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                     string                                `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Style                    string                                `protobuf:"bytes,3,opt,name=style,proto3" json:"style,omitempty"`
	Vendor                   string                                `protobuf:"bytes,4,opt,name=vendor,proto3" json:"vendor,omitempty"`
	AutoPiDefaultTemplateId  int32                                 `protobuf:"varint,5,opt,name=auto_pi_default_template_id,json=autoPiDefaultTemplateId,proto3" json:"auto_pi_default_template_id,omitempty"`
	AutoPiPowertrainTemplate *Integration_AutoPiPowertrainTemplate `protobuf:"bytes,6,opt,name=auto_pi_powertrain_template,json=autoPiPowertrainTemplate,proto3" json:"auto_pi_powertrain_template,omitempty"`
	RefreshLimitSecs         int32                                 `protobuf:"varint,7,opt,name=refresh_limit_secs,json=refreshLimitSecs,proto3" json:"refresh_limit_secs,omitempty"`
	// token_id can have a 0 value, which means it has not yet been minted and no token id has been assigned. This case should be checked for and handled.
	TokenId             uint64 `protobuf:"varint,8,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Points              int64  `protobuf:"varint,9,opt,name=points,proto3" json:"points,omitempty"`
	ManufacturerTokenId uint64 `protobuf:"varint,10,opt,name=manufacturer_token_id,json=manufacturerTokenId,proto3" json:"manufacturer_token_id,omitempty"`
}

func (x *Integration) Reset() {
	*x = Integration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration) ProtoMessage() {}

func (x *Integration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration.ProtoReflect.Descriptor instead.
func (*Integration) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{17}
}

func (x *Integration) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Integration) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Integration) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *Integration) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *Integration) GetAutoPiDefaultTemplateId() int32 {
	if x != nil {
		return x.AutoPiDefaultTemplateId
	}
	return 0
}

func (x *Integration) GetAutoPiPowertrainTemplate() *Integration_AutoPiPowertrainTemplate {
	if x != nil {
		return x.AutoPiPowertrainTemplate
	}
	return nil
}

func (x *Integration) GetRefreshLimitSecs() int32 {
	if x != nil {
		return x.RefreshLimitSecs
	}
	return 0
}

func (x *Integration) GetTokenId() uint64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *Integration) GetPoints() int64 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *Integration) GetManufacturerTokenId() uint64 {
	if x != nil {
		return x.ManufacturerTokenId
	}
	return 0
}

type DeviceIntegration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integration *Integration `protobuf:"bytes,1,opt,name=integration,proto3" json:"integration,omitempty"`
	Region      string       `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// Deprecated: Do not use.
	Capabilities       string                      `protobuf:"bytes,3,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	DeviceDefinitionId string                      `protobuf:"bytes,4,opt,name=deviceDefinitionId,proto3" json:"deviceDefinitionId,omitempty"`
	Features           []*DeviceIntegrationFeature `protobuf:"bytes,5,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *DeviceIntegration) Reset() {
	*x = DeviceIntegration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceIntegration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceIntegration) ProtoMessage() {}

func (x *DeviceIntegration) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceIntegration.ProtoReflect.Descriptor instead.
func (*DeviceIntegration) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{18}
}

func (x *DeviceIntegration) GetIntegration() *Integration {
	if x != nil {
		return x.Integration
	}
	return nil
}

func (x *DeviceIntegration) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// Deprecated: Do not use.
func (x *DeviceIntegration) GetCapabilities() string {
	if x != nil {
		return x.Capabilities
	}
	return ""
}

func (x *DeviceIntegration) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *DeviceIntegration) GetFeatures() []*DeviceIntegrationFeature {
	if x != nil {
		return x.Features
	}
	return nil
}

type DeviceIntegrationFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureKey   string `protobuf:"bytes,1,opt,name=feature_key,json=featureKey,proto3" json:"feature_key,omitempty"`
	SupportLevel int32  `protobuf:"varint,2,opt,name=support_level,json=supportLevel,proto3" json:"support_level,omitempty"`
}

func (x *DeviceIntegrationFeature) Reset() {
	*x = DeviceIntegrationFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceIntegrationFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceIntegrationFeature) ProtoMessage() {}

func (x *DeviceIntegrationFeature) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceIntegrationFeature.ProtoReflect.Descriptor instead.
func (*DeviceIntegrationFeature) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{19}
}

func (x *DeviceIntegrationFeature) GetFeatureKey() string {
	if x != nil {
		return x.FeatureKey
	}
	return ""
}

func (x *DeviceIntegrationFeature) GetSupportLevel() int32 {
	if x != nil {
		return x.SupportLevel
	}
	return 0
}

type GetDeviceDefinitionIntegrationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Integrations []*DeviceIntegration `protobuf:"bytes,1,rep,name=integrations,proto3" json:"integrations,omitempty"`
}

func (x *GetDeviceDefinitionIntegrationResponse) Reset() {
	*x = GetDeviceDefinitionIntegrationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionIntegrationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionIntegrationResponse) ProtoMessage() {}

func (x *GetDeviceDefinitionIntegrationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionIntegrationResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionIntegrationResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{20}
}

func (x *GetDeviceDefinitionIntegrationResponse) GetIntegrations() []*DeviceIntegration {
	if x != nil {
		return x.Integrations
	}
	return nil
}

type GetDeviceDefinitionIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeviceDefinitionIntegrationRequest) Reset() {
	*x = GetDeviceDefinitionIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionIntegrationRequest) ProtoMessage() {}

func (x *GetDeviceDefinitionIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionIntegrationRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{21}
}

func (x *GetDeviceDefinitionIntegrationRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateDeviceDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Make               string                        `protobuf:"bytes,1,opt,name=make,proto3" json:"make,omitempty"`
	Model              string                        `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Year               int32                         `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	Source             string                        `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	DeviceTypeId       string                        `protobuf:"bytes,5,opt,name=device_type_id,json=deviceTypeId,proto3" json:"device_type_id,omitempty"`
	DeviceAttributes   []*DeviceTypeAttributeRequest `protobuf:"bytes,6,rep,name=device_attributes,json=deviceAttributes,proto3" json:"device_attributes,omitempty"`
	HardwareTemplateId string                        `protobuf:"bytes,7,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
	Verified           bool                          `protobuf:"varint,8,opt,name=verified,proto3" json:"verified,omitempty"`
}

func (x *CreateDeviceDefinitionRequest) Reset() {
	*x = CreateDeviceDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceDefinitionRequest) ProtoMessage() {}

func (x *CreateDeviceDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceDefinitionRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{22}
}

func (x *CreateDeviceDefinitionRequest) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *CreateDeviceDefinitionRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CreateDeviceDefinitionRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *CreateDeviceDefinitionRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CreateDeviceDefinitionRequest) GetDeviceTypeId() string {
	if x != nil {
		return x.DeviceTypeId
	}
	return ""
}

func (x *CreateDeviceDefinitionRequest) GetDeviceAttributes() []*DeviceTypeAttributeRequest {
	if x != nil {
		return x.DeviceAttributes
	}
	return nil
}

func (x *CreateDeviceDefinitionRequest) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

func (x *CreateDeviceDefinitionRequest) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

type CreateDeviceIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDefinitionId string                                      `protobuf:"bytes,1,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	IntegrationId      string                                      `protobuf:"bytes,2,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Region             string                                      `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Features           []*DeviceIntegrationFeatureAttributeRequest `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *CreateDeviceIntegrationRequest) Reset() {
	*x = CreateDeviceIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceIntegrationRequest) ProtoMessage() {}

func (x *CreateDeviceIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceIntegrationRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{23}
}

func (x *CreateDeviceIntegrationRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *CreateDeviceIntegrationRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *CreateDeviceIntegrationRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CreateDeviceIntegrationRequest) GetFeatures() []*DeviceIntegrationFeatureAttributeRequest {
	if x != nil {
		return x.Features
	}
	return nil
}

type DeviceIntegrationFeatureAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeatureKey   string `protobuf:"bytes,1,opt,name=feature_key,json=featureKey,proto3" json:"feature_key,omitempty"`
	SupportLevel int32  `protobuf:"varint,2,opt,name=support_level,json=supportLevel,proto3" json:"support_level,omitempty"`
}

func (x *DeviceIntegrationFeatureAttributeRequest) Reset() {
	*x = DeviceIntegrationFeatureAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceIntegrationFeatureAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceIntegrationFeatureAttributeRequest) ProtoMessage() {}

func (x *DeviceIntegrationFeatureAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceIntegrationFeatureAttributeRequest.ProtoReflect.Descriptor instead.
func (*DeviceIntegrationFeatureAttributeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{24}
}

func (x *DeviceIntegrationFeatureAttributeRequest) GetFeatureKey() string {
	if x != nil {
		return x.FeatureKey
	}
	return ""
}

func (x *DeviceIntegrationFeatureAttributeRequest) GetSupportLevel() int32 {
	if x != nil {
		return x.SupportLevel
	}
	return 0
}

type BaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{25}
}

func (x *BaseResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateDeviceDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDefinitionId string `protobuf:"bytes,1,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	// Deprecated: Do not use.
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	// Deprecated: Do not use.
	ImageUrl           string                                              `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Verified           bool                                                `protobuf:"varint,5,opt,name=verified,proto3" json:"verified,omitempty"`
	Model              string                                              `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	Year               int32                                               `protobuf:"varint,7,opt,name=year,proto3" json:"year,omitempty"`
	DeviceMakeId       string                                              `protobuf:"bytes,8,opt,name=device_make_id,json=deviceMakeId,proto3" json:"device_make_id,omitempty"`
	DeviceStyles       []*UpdateDeviceDefinitionRequest_DeviceStyles       `protobuf:"bytes,9,rep,name=device_styles,json=deviceStyles,proto3" json:"device_styles,omitempty"`
	DeviceIntegrations []*UpdateDeviceDefinitionRequest_DeviceIntegrations `protobuf:"bytes,10,rep,name=device_integrations,json=deviceIntegrations,proto3" json:"device_integrations,omitempty"`
	// Deprecated: Do not use.
	ExternalId         string                        `protobuf:"bytes,11,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	DeviceTypeId       string                        `protobuf:"bytes,12,opt,name=device_type_id,json=deviceTypeId,proto3" json:"device_type_id,omitempty"`
	DeviceAttributes   []*DeviceTypeAttributeRequest `protobuf:"bytes,13,rep,name=device_attributes,json=deviceAttributes,proto3" json:"device_attributes,omitempty"`
	ExternalIds        []*ExternalID                 `protobuf:"bytes,14,rep,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
	HardwareTemplateId string                        `protobuf:"bytes,15,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *UpdateDeviceDefinitionRequest) Reset() {
	*x = UpdateDeviceDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceDefinitionRequest) ProtoMessage() {}

func (x *UpdateDeviceDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceDefinitionRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateDeviceDefinitionRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

// Deprecated: Do not use.
func (x *UpdateDeviceDefinitionRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

// Deprecated: Do not use.
func (x *UpdateDeviceDefinitionRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *UpdateDeviceDefinitionRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *UpdateDeviceDefinitionRequest) GetDeviceMakeId() string {
	if x != nil {
		return x.DeviceMakeId
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest) GetDeviceStyles() []*UpdateDeviceDefinitionRequest_DeviceStyles {
	if x != nil {
		return x.DeviceStyles
	}
	return nil
}

func (x *UpdateDeviceDefinitionRequest) GetDeviceIntegrations() []*UpdateDeviceDefinitionRequest_DeviceIntegrations {
	if x != nil {
		return x.DeviceIntegrations
	}
	return nil
}

// Deprecated: Do not use.
func (x *UpdateDeviceDefinitionRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest) GetDeviceTypeId() string {
	if x != nil {
		return x.DeviceTypeId
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest) GetDeviceAttributes() []*DeviceTypeAttributeRequest {
	if x != nil {
		return x.DeviceAttributes
	}
	return nil
}

func (x *UpdateDeviceDefinitionRequest) GetExternalIds() []*ExternalID {
	if x != nil {
		return x.ExternalIds
	}
	return nil
}

func (x *UpdateDeviceDefinitionRequest) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type UpdateDeviceDefinitionImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDefinitionId string `protobuf:"bytes,1,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	ImageUrl           string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *UpdateDeviceDefinitionImageRequest) Reset() {
	*x = UpdateDeviceDefinitionImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceDefinitionImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceDefinitionImageRequest) ProtoMessage() {}

func (x *UpdateDeviceDefinitionImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceDefinitionImageRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceDefinitionImageRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateDeviceDefinitionImageRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *UpdateDeviceDefinitionImageRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type GetDeviceDefinitionAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GetDeviceDefinitionAllItemResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetDeviceDefinitionAllResponse) Reset() {
	*x = GetDeviceDefinitionAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionAllResponse) ProtoMessage() {}

func (x *GetDeviceDefinitionAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionAllResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionAllResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{28}
}

func (x *GetDeviceDefinitionAllResponse) GetItems() []*GetDeviceDefinitionAllItemResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type GetDeviceDefinitionAllItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Make   string                                                `protobuf:"bytes,1,opt,name=make,proto3" json:"make,omitempty"`
	Models []*GetDeviceDefinitionAllItemResponse_GetDeviceModels `protobuf:"bytes,2,rep,name=models,proto3" json:"models,omitempty"`
}

func (x *GetDeviceDefinitionAllItemResponse) Reset() {
	*x = GetDeviceDefinitionAllItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionAllItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionAllItemResponse) ProtoMessage() {}

func (x *GetDeviceDefinitionAllItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionAllItemResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionAllItemResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{29}
}

func (x *GetDeviceDefinitionAllItemResponse) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *GetDeviceDefinitionAllItemResponse) GetModels() []*GetDeviceDefinitionAllItemResponse_GetDeviceModels {
	if x != nil {
		return x.Models
	}
	return nil
}

type FilterDeviceDefinitionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MakeId             string   `protobuf:"bytes,1,opt,name=make_id,json=makeId,proto3" json:"make_id,omitempty"`
	IntegrationId      string   `protobuf:"bytes,2,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	DeviceDefinitionId string   `protobuf:"bytes,3,opt,name=deviceDefinition_id,json=deviceDefinitionId,proto3" json:"deviceDefinition_id,omitempty"`
	Year               int32    `protobuf:"varint,4,opt,name=year,proto3" json:"year,omitempty"`
	Model              string   `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	VerifiedVinList    []string `protobuf:"bytes,6,rep,name=verified_vin_list,json=verifiedVinList,proto3" json:"verified_vin_list,omitempty"`
	PageIndex          int32    `protobuf:"varint,7,opt,name=page_index,json=pageIndex,proto3" json:"page_index,omitempty"`
	PageSize           int32    `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *FilterDeviceDefinitionRequest) Reset() {
	*x = FilterDeviceDefinitionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterDeviceDefinitionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterDeviceDefinitionRequest) ProtoMessage() {}

func (x *FilterDeviceDefinitionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterDeviceDefinitionRequest.ProtoReflect.Descriptor instead.
func (*FilterDeviceDefinitionRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{30}
}

func (x *FilterDeviceDefinitionRequest) GetMakeId() string {
	if x != nil {
		return x.MakeId
	}
	return ""
}

func (x *FilterDeviceDefinitionRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *FilterDeviceDefinitionRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *FilterDeviceDefinitionRequest) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *FilterDeviceDefinitionRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *FilterDeviceDefinitionRequest) GetVerifiedVinList() []string {
	if x != nil {
		return x.VerifiedVinList
	}
	return nil
}

func (x *FilterDeviceDefinitionRequest) GetPageIndex() int32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *FilterDeviceDefinitionRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetFilteredDeviceDefinitionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*FilterDeviceDefinitionsReponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GetFilteredDeviceDefinitionsResponse) Reset() {
	*x = GetFilteredDeviceDefinitionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilteredDeviceDefinitionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilteredDeviceDefinitionsResponse) ProtoMessage() {}

func (x *GetFilteredDeviceDefinitionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilteredDeviceDefinitionsResponse.ProtoReflect.Descriptor instead.
func (*GetFilteredDeviceDefinitionsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{31}
}

func (x *GetFilteredDeviceDefinitionsResponse) GetItems() []*FilterDeviceDefinitionsReponse {
	if x != nil {
		return x.Items
	}
	return nil
}

type FilterDeviceDefinitionsReponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Model     string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Year      int32  `protobuf:"varint,3,opt,name=year,proto3" json:"year,omitempty"`
	ImageUrl  string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Metadata  string `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// Deprecated: Do not use.
	Source   string `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	Verified bool   `protobuf:"varint,9,opt,name=verified,proto3" json:"verified,omitempty"`
	// Deprecated: Do not use.
	External     string        `protobuf:"bytes,10,opt,name=external,proto3" json:"external,omitempty"`
	DeviceMakeId string        `protobuf:"bytes,11,opt,name=device_make_id,json=deviceMakeId,proto3" json:"device_make_id,omitempty"`
	Make         string        `protobuf:"bytes,12,opt,name=make,proto3" json:"make,omitempty"`
	ExternalIds  []*ExternalID `protobuf:"bytes,13,rep,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
}

func (x *FilterDeviceDefinitionsReponse) Reset() {
	*x = FilterDeviceDefinitionsReponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterDeviceDefinitionsReponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterDeviceDefinitionsReponse) ProtoMessage() {}

func (x *FilterDeviceDefinitionsReponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterDeviceDefinitionsReponse.ProtoReflect.Descriptor instead.
func (*FilterDeviceDefinitionsReponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{32}
}

func (x *FilterDeviceDefinitionsReponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FilterDeviceDefinitionsReponse) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *FilterDeviceDefinitionsReponse) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *FilterDeviceDefinitionsReponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *FilterDeviceDefinitionsReponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FilterDeviceDefinitionsReponse) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *FilterDeviceDefinitionsReponse) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

// Deprecated: Do not use.
func (x *FilterDeviceDefinitionsReponse) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *FilterDeviceDefinitionsReponse) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

// Deprecated: Do not use.
func (x *FilterDeviceDefinitionsReponse) GetExternal() string {
	if x != nil {
		return x.External
	}
	return ""
}

func (x *FilterDeviceDefinitionsReponse) GetDeviceMakeId() string {
	if x != nil {
		return x.DeviceMakeId
	}
	return ""
}

func (x *FilterDeviceDefinitionsReponse) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *FilterDeviceDefinitionsReponse) GetExternalIds() []*ExternalID {
	if x != nil {
		return x.ExternalIds
	}
	return nil
}

type CreateDeviceStyleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDefinitionId string `protobuf:"bytes,1,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExternalStyleId    string `protobuf:"bytes,3,opt,name=external_style_id,json=externalStyleId,proto3" json:"external_style_id,omitempty"`
	Source             string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	SubModel           string `protobuf:"bytes,5,opt,name=sub_model,json=subModel,proto3" json:"sub_model,omitempty"`
	HardwareTemplateId string `protobuf:"bytes,6,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *CreateDeviceStyleRequest) Reset() {
	*x = CreateDeviceStyleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceStyleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceStyleRequest) ProtoMessage() {}

func (x *CreateDeviceStyleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceStyleRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceStyleRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{33}
}

func (x *CreateDeviceStyleRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *CreateDeviceStyleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDeviceStyleRequest) GetExternalStyleId() string {
	if x != nil {
		return x.ExternalStyleId
	}
	return ""
}

func (x *CreateDeviceStyleRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CreateDeviceStyleRequest) GetSubModel() string {
	if x != nil {
		return x.SubModel
	}
	return ""
}

func (x *CreateDeviceStyleRequest) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type GetIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *GetIntegrationRequest) Reset() {
	*x = GetIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationRequest) ProtoMessage() {}

func (x *GetIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationRequest.ProtoReflect.Descriptor instead.
func (*GetIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{34}
}

func (x *GetIntegrationRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetIntegrationByTokenIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId uint64 `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetIntegrationByTokenIDRequest) Reset() {
	*x = GetIntegrationByTokenIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntegrationByTokenIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntegrationByTokenIDRequest) ProtoMessage() {}

func (x *GetIntegrationByTokenIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntegrationByTokenIDRequest.ProtoReflect.Descriptor instead.
func (*GetIntegrationByTokenIDRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{35}
}

func (x *GetIntegrationByTokenIDRequest) GetTokenId() uint64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

type CreateDeviceMakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HardwareTemplateId string `protobuf:"bytes,2,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *CreateDeviceMakeRequest) Reset() {
	*x = CreateDeviceMakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceMakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceMakeRequest) ProtoMessage() {}

func (x *CreateDeviceMakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceMakeRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceMakeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{36}
}

func (x *CreateDeviceMakeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDeviceMakeRequest) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type GetDeviceStyleByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeviceStyleByIDRequest) Reset() {
	*x = GetDeviceStyleByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceStyleByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStyleByIDRequest) ProtoMessage() {}

func (x *GetDeviceStyleByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStyleByIDRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceStyleByIDRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{37}
}

func (x *GetDeviceStyleByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeviceStyleByDeviceDefinitionIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeviceStyleByDeviceDefinitionIDRequest) Reset() {
	*x = GetDeviceStyleByDeviceDefinitionIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceStyleByDeviceDefinitionIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStyleByDeviceDefinitionIDRequest) ProtoMessage() {}

func (x *GetDeviceStyleByDeviceDefinitionIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStyleByDeviceDefinitionIDRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceStyleByDeviceDefinitionIDRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{38}
}

func (x *GetDeviceStyleByDeviceDefinitionIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeviceStyleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceStyles []*DeviceStyle `protobuf:"bytes,1,rep,name=device_styles,json=deviceStyles,proto3" json:"device_styles,omitempty"`
}

func (x *GetDeviceStyleResponse) Reset() {
	*x = GetDeviceStyleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceStyleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStyleResponse) ProtoMessage() {}

func (x *GetDeviceStyleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStyleResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceStyleResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{39}
}

func (x *GetDeviceStyleResponse) GetDeviceStyles() []*DeviceStyle {
	if x != nil {
		return x.DeviceStyles
	}
	return nil
}

type CreateIntegrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vendor  string `protobuf:"bytes,1,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Style   string `protobuf:"bytes,3,opt,name=style,proto3" json:"style,omitempty"`
	TokenId uint64 `protobuf:"varint,4,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *CreateIntegrationRequest) Reset() {
	*x = CreateIntegrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateIntegrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateIntegrationRequest) ProtoMessage() {}

func (x *CreateIntegrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateIntegrationRequest.ProtoReflect.Descriptor instead.
func (*CreateIntegrationRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{40}
}

func (x *CreateIntegrationRequest) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *CreateIntegrationRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateIntegrationRequest) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

func (x *CreateIntegrationRequest) GetTokenId() uint64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

type GetDeviceMakeByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetDeviceMakeByNameRequest) Reset() {
	*x = GetDeviceMakeByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceMakeByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceMakeByNameRequest) ProtoMessage() {}

func (x *GetDeviceMakeByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceMakeByNameRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceMakeByNameRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{41}
}

func (x *GetDeviceMakeByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetDeviceMakeBySlugRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slug string `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
}

func (x *GetDeviceMakeBySlugRequest) Reset() {
	*x = GetDeviceMakeBySlugRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceMakeBySlugRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceMakeBySlugRequest) ProtoMessage() {}

func (x *GetDeviceMakeBySlugRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceMakeBySlugRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceMakeBySlugRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{42}
}

func (x *GetDeviceMakeBySlugRequest) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type GetDeviceMakeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceMakes []*DeviceMake `protobuf:"bytes,1,rep,name=device_makes,json=deviceMakes,proto3" json:"device_makes,omitempty"`
}

func (x *GetDeviceMakeResponse) Reset() {
	*x = GetDeviceMakeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceMakeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceMakeResponse) ProtoMessage() {}

func (x *GetDeviceMakeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceMakeResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceMakeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{43}
}

func (x *GetDeviceMakeResponse) GetDeviceMakes() []*DeviceMake {
	if x != nil {
		return x.DeviceMakes
	}
	return nil
}

type UpdateDeviceMakeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LogoUrl            string `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	OemPlatformName    string `protobuf:"bytes,4,opt,name=oem_platform_name,json=oemPlatformName,proto3" json:"oem_platform_name,omitempty"`
	TokenId            uint64 `protobuf:"varint,5,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	NameSlug           string `protobuf:"bytes,6,opt,name=name_slug,json=nameSlug,proto3" json:"name_slug,omitempty"`
	ExternalIds        string `protobuf:"bytes,7,opt,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
	Metadata           string `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	HardwareTemplateId string `protobuf:"bytes,9,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *UpdateDeviceMakeRequest) Reset() {
	*x = UpdateDeviceMakeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceMakeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceMakeRequest) ProtoMessage() {}

func (x *UpdateDeviceMakeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceMakeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceMakeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateDeviceMakeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDeviceMakeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDeviceMakeRequest) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *UpdateDeviceMakeRequest) GetOemPlatformName() string {
	if x != nil {
		return x.OemPlatformName
	}
	return ""
}

func (x *UpdateDeviceMakeRequest) GetTokenId() uint64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *UpdateDeviceMakeRequest) GetNameSlug() string {
	if x != nil {
		return x.NameSlug
	}
	return ""
}

func (x *UpdateDeviceMakeRequest) GetExternalIds() string {
	if x != nil {
		return x.ExternalIds
	}
	return ""
}

func (x *UpdateDeviceMakeRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *UpdateDeviceMakeRequest) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type UpdateDeviceStyleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DeviceDefinitionId string `protobuf:"bytes,3,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	ExternalStyleId    string `protobuf:"bytes,4,opt,name=external_style_id,json=externalStyleId,proto3" json:"external_style_id,omitempty"`
	Source             string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	SubModel           string `protobuf:"bytes,6,opt,name=sub_model,json=subModel,proto3" json:"sub_model,omitempty"`
	HardwareTemplateId string `protobuf:"bytes,7,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *UpdateDeviceStyleRequest) Reset() {
	*x = UpdateDeviceStyleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceStyleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceStyleRequest) ProtoMessage() {}

func (x *UpdateDeviceStyleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceStyleRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceStyleRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{45}
}

func (x *UpdateDeviceStyleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDeviceStyleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDeviceStyleRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *UpdateDeviceStyleRequest) GetExternalStyleId() string {
	if x != nil {
		return x.ExternalStyleId
	}
	return ""
}

func (x *UpdateDeviceStyleRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UpdateDeviceStyleRequest) GetSubModel() string {
	if x != nil {
		return x.SubModel
	}
	return ""
}

func (x *UpdateDeviceStyleRequest) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type GetDeviceStyleFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DeviceDefinitionId string `protobuf:"bytes,2,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	Source             string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	SubModel           string `protobuf:"bytes,4,opt,name=sub_model,json=subModel,proto3" json:"sub_model,omitempty"`
}

func (x *GetDeviceStyleFilterRequest) Reset() {
	*x = GetDeviceStyleFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceStyleFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceStyleFilterRequest) ProtoMessage() {}

func (x *GetDeviceStyleFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceStyleFilterRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceStyleFilterRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{46}
}

func (x *GetDeviceStyleFilterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDeviceStyleFilterRequest) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *GetDeviceStyleFilterRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GetDeviceStyleFilterRequest) GetSubModel() string {
	if x != nil {
		return x.SubModel
	}
	return ""
}

type GetDeviceTypeByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetDeviceTypeByIDRequest) Reset() {
	*x = GetDeviceTypeByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceTypeByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceTypeByIDRequest) ProtoMessage() {}

func (x *GetDeviceTypeByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceTypeByIDRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceTypeByIDRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{47}
}

func (x *GetDeviceTypeByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeviceTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Attributes  []*DeviceTypeAttribute `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty"`
	MetadataKey string                 `protobuf:"bytes,4,opt,name=metadata_key,json=metadataKey,proto3" json:"metadata_key,omitempty"`
}

func (x *GetDeviceTypeResponse) Reset() {
	*x = GetDeviceTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceTypeResponse) ProtoMessage() {}

func (x *GetDeviceTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceTypeResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceTypeResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{48}
}

func (x *GetDeviceTypeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDeviceTypeResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetDeviceTypeResponse) GetAttributes() []*DeviceTypeAttribute {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *GetDeviceTypeResponse) GetMetadataKey() string {
	if x != nil {
		return x.MetadataKey
	}
	return ""
}

type GetDeviceTypeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceTypes []*GetDeviceTypeResponse `protobuf:"bytes,2,rep,name=device_types,json=deviceTypes,proto3" json:"device_types,omitempty"`
}

func (x *GetDeviceTypeListResponse) Reset() {
	*x = GetDeviceTypeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceTypeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceTypeListResponse) ProtoMessage() {}

func (x *GetDeviceTypeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceTypeListResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceTypeListResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{49}
}

func (x *GetDeviceTypeListResponse) GetDeviceTypes() []*GetDeviceTypeResponse {
	if x != nil {
		return x.DeviceTypes
	}
	return nil
}

type CreateDeviceTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateDeviceTypeRequest) Reset() {
	*x = CreateDeviceTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceTypeRequest) ProtoMessage() {}

func (x *CreateDeviceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceTypeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{50}
}

func (x *CreateDeviceTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateDeviceTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateDeviceTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Attributes []*CreateDeviceTypeAttributeRequest `protobuf:"bytes,3,rep,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *UpdateDeviceTypeRequest) Reset() {
	*x = UpdateDeviceTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceTypeRequest) ProtoMessage() {}

func (x *UpdateDeviceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceTypeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateDeviceTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDeviceTypeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDeviceTypeRequest) GetAttributes() []*CreateDeviceTypeAttributeRequest {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type CreateDeviceTypeAttributeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Label        string   `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Type         string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Required     bool     `protobuf:"varint,4,opt,name=required,proto3" json:"required,omitempty"`
	DefaultValue string   `protobuf:"bytes,5,opt,name=defaultValue,proto3" json:"defaultValue,omitempty"`
	Options      []string `protobuf:"bytes,6,rep,name=options,proto3" json:"options,omitempty"`
	Description  string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateDeviceTypeAttributeRequest) Reset() {
	*x = CreateDeviceTypeAttributeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDeviceTypeAttributeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDeviceTypeAttributeRequest) ProtoMessage() {}

func (x *CreateDeviceTypeAttributeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDeviceTypeAttributeRequest.ProtoReflect.Descriptor instead.
func (*CreateDeviceTypeAttributeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{52}
}

func (x *CreateDeviceTypeAttributeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDeviceTypeAttributeRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CreateDeviceTypeAttributeRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateDeviceTypeAttributeRequest) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *CreateDeviceTypeAttributeRequest) GetDefaultValue() string {
	if x != nil {
		return x.DefaultValue
	}
	return ""
}

func (x *CreateDeviceTypeAttributeRequest) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *CreateDeviceTypeAttributeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeleteDeviceTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteDeviceTypeRequest) Reset() {
	*x = DeleteDeviceTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceTypeRequest) ProtoMessage() {}

func (x *DeleteDeviceTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceTypeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteDeviceTypeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetDeviceMakeByTokenIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *GetDeviceMakeByTokenIdRequest) Reset() {
	*x = GetDeviceMakeByTokenIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceMakeByTokenIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceMakeByTokenIdRequest) ProtoMessage() {}

func (x *GetDeviceMakeByTokenIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceMakeByTokenIdRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceMakeByTokenIdRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{54}
}

func (x *GetDeviceMakeByTokenIdRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type GetDeviceDefinitionHardwareTemplateByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IntegrationId string `protobuf:"bytes,2,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
}

func (x *GetDeviceDefinitionHardwareTemplateByIDRequest) Reset() {
	*x = GetDeviceDefinitionHardwareTemplateByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionHardwareTemplateByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionHardwareTemplateByIDRequest) ProtoMessage() {}

func (x *GetDeviceDefinitionHardwareTemplateByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionHardwareTemplateByIDRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionHardwareTemplateByIDRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{55}
}

func (x *GetDeviceDefinitionHardwareTemplateByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDeviceDefinitionHardwareTemplateByIDRequest) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

type GetDeviceDefinitionHardwareTemplateByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HardwareTemplateId string `protobuf:"bytes,1,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *GetDeviceDefinitionHardwareTemplateByIDResponse) Reset() {
	*x = GetDeviceDefinitionHardwareTemplateByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionHardwareTemplateByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionHardwareTemplateByIDResponse) ProtoMessage() {}

func (x *GetDeviceDefinitionHardwareTemplateByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionHardwareTemplateByIDResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionHardwareTemplateByIDResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{56}
}

func (x *GetDeviceDefinitionHardwareTemplateByIDResponse) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type DeviceImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceDefinitionId string `protobuf:"bytes,1,opt,name=device_definition_id,json=deviceDefinitionId,proto3" json:"device_definition_id,omitempty"`
	ImageUrl           string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Width              int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height             int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Color              string `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *DeviceImage) Reset() {
	*x = DeviceImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceImage) ProtoMessage() {}

func (x *DeviceImage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceImage.ProtoReflect.Descriptor instead.
func (*DeviceImage) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{57}
}

func (x *DeviceImage) GetDeviceDefinitionId() string {
	if x != nil {
		return x.DeviceDefinitionId
	}
	return ""
}

func (x *DeviceImage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *DeviceImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DeviceImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DeviceImage) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type GetDeviceImagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*DeviceImage `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *GetDeviceImagesResponse) Reset() {
	*x = GetDeviceImagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceImagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceImagesResponse) ProtoMessage() {}

func (x *GetDeviceImagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceImagesResponse.ProtoReflect.Descriptor instead.
func (*GetDeviceImagesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{58}
}

func (x *GetDeviceImagesResponse) GetImages() []*DeviceImage {
	if x != nil {
		return x.Images
	}
	return nil
}

type SyncStatusResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SyncStatusResult) Reset() {
	*x = SyncStatusResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStatusResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStatusResult) ProtoMessage() {}

func (x *SyncStatusResult) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStatusResult.ProtoReflect.Descriptor instead.
func (*SyncStatusResult) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{59}
}

func (x *SyncStatusResult) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetDeviceDefinitionByMakeAndYearRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Make      string `protobuf:"bytes,1,opt,name=make,proto3" json:"make,omitempty"`
	StartYear int32  `protobuf:"varint,2,opt,name=start_year,json=startYear,proto3" json:"start_year,omitempty"`
	EndYear   int32  `protobuf:"varint,3,opt,name=end_year,json=endYear,proto3" json:"end_year,omitempty"`
}

func (x *GetDeviceDefinitionByMakeAndYearRangeRequest) Reset() {
	*x = GetDeviceDefinitionByMakeAndYearRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionByMakeAndYearRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionByMakeAndYearRangeRequest) ProtoMessage() {}

func (x *GetDeviceDefinitionByMakeAndYearRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionByMakeAndYearRangeRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionByMakeAndYearRangeRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{60}
}

func (x *GetDeviceDefinitionByMakeAndYearRangeRequest) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *GetDeviceDefinitionByMakeAndYearRangeRequest) GetStartYear() int32 {
	if x != nil {
		return x.StartYear
	}
	return 0
}

func (x *GetDeviceDefinitionByMakeAndYearRangeRequest) GetEndYear() int32 {
	if x != nil {
		return x.EndYear
	}
	return 0
}

type Integration_AutoPiPowertrainTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BEV  int32 `protobuf:"varint,1,opt,name=BEV,proto3" json:"BEV,omitempty"`
	HEV  int32 `protobuf:"varint,2,opt,name=HEV,proto3" json:"HEV,omitempty"`
	ICE  int32 `protobuf:"varint,3,opt,name=ICE,proto3" json:"ICE,omitempty"`
	PHEV int32 `protobuf:"varint,4,opt,name=PHEV,proto3" json:"PHEV,omitempty"`
}

func (x *Integration_AutoPiPowertrainTemplate) Reset() {
	*x = Integration_AutoPiPowertrainTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Integration_AutoPiPowertrainTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Integration_AutoPiPowertrainTemplate) ProtoMessage() {}

func (x *Integration_AutoPiPowertrainTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Integration_AutoPiPowertrainTemplate.ProtoReflect.Descriptor instead.
func (*Integration_AutoPiPowertrainTemplate) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{17, 0}
}

func (x *Integration_AutoPiPowertrainTemplate) GetBEV() int32 {
	if x != nil {
		return x.BEV
	}
	return 0
}

func (x *Integration_AutoPiPowertrainTemplate) GetHEV() int32 {
	if x != nil {
		return x.HEV
	}
	return 0
}

func (x *Integration_AutoPiPowertrainTemplate) GetICE() int32 {
	if x != nil {
		return x.ICE
	}
	return 0
}

func (x *Integration_AutoPiPowertrainTemplate) GetPHEV() int32 {
	if x != nil {
		return x.PHEV
	}
	return 0
}

type UpdateDeviceDefinitionRequest_DeviceStyles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ExternalStyleId    string                 `protobuf:"bytes,3,opt,name=external_style_id,json=externalStyleId,proto3" json:"external_style_id,omitempty"`
	Source             string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	SubModel           string                 `protobuf:"bytes,7,opt,name=sub_model,json=subModel,proto3" json:"sub_model,omitempty"`
	HardwareTemplateId string                 `protobuf:"bytes,8,opt,name=hardware_template_id,json=hardwareTemplateId,proto3" json:"hardware_template_id,omitempty"`
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) Reset() {
	*x = UpdateDeviceDefinitionRequest_DeviceStyles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceDefinitionRequest_DeviceStyles) ProtoMessage() {}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceDefinitionRequest_DeviceStyles.ProtoReflect.Descriptor instead.
func (*UpdateDeviceDefinitionRequest_DeviceStyles) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{26, 0}
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) GetExternalStyleId() string {
	if x != nil {
		return x.ExternalStyleId
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) GetSubModel() string {
	if x != nil {
		return x.SubModel
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest_DeviceStyles) GetHardwareTemplateId() string {
	if x != nil {
		return x.HardwareTemplateId
	}
	return ""
}

type UpdateDeviceDefinitionRequest_DeviceIntegrations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IntegrationId string                 `protobuf:"bytes,1,opt,name=integration_id,json=integrationId,proto3" json:"integration_id,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Deprecated: Do not use.
	Capabilities string                      `protobuf:"bytes,5,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	Features     []*DeviceIntegrationFeature `protobuf:"bytes,6,rep,name=features,proto3" json:"features,omitempty"`
}

func (x *UpdateDeviceDefinitionRequest_DeviceIntegrations) Reset() {
	*x = UpdateDeviceDefinitionRequest_DeviceIntegrations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceDefinitionRequest_DeviceIntegrations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceDefinitionRequest_DeviceIntegrations) ProtoMessage() {}

func (x *UpdateDeviceDefinitionRequest_DeviceIntegrations) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceDefinitionRequest_DeviceIntegrations.ProtoReflect.Descriptor instead.
func (*UpdateDeviceDefinitionRequest_DeviceIntegrations) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{26, 1}
}

func (x *UpdateDeviceDefinitionRequest_DeviceIntegrations) GetIntegrationId() string {
	if x != nil {
		return x.IntegrationId
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest_DeviceIntegrations) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest_DeviceIntegrations) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UpdateDeviceDefinitionRequest_DeviceIntegrations) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Deprecated: Do not use.
func (x *UpdateDeviceDefinitionRequest_DeviceIntegrations) GetCapabilities() string {
	if x != nil {
		return x.Capabilities
	}
	return ""
}

func (x *UpdateDeviceDefinitionRequest_DeviceIntegrations) GetFeatures() []*DeviceIntegrationFeature {
	if x != nil {
		return x.Features
	}
	return nil
}

type GetDeviceDefinitionAllItemResponse_GetDeviceModels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model string                                                    `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Years []*GetDeviceDefinitionAllItemResponse_GetDeviceModelYears `protobuf:"bytes,2,rep,name=years,proto3" json:"years,omitempty"`
}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModels) Reset() {
	*x = GetDeviceDefinitionAllItemResponse_GetDeviceModels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionAllItemResponse_GetDeviceModels) ProtoMessage() {}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModels) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionAllItemResponse_GetDeviceModels.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionAllItemResponse_GetDeviceModels) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{29, 0}
}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModels) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModels) GetYears() []*GetDeviceDefinitionAllItemResponse_GetDeviceModelYears {
	if x != nil {
		return x.Years
	}
	return nil
}

type GetDeviceDefinitionAllItemResponse_GetDeviceModelYears struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year               int32  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	DeviceDefinitionID string `protobuf:"bytes,2,opt,name=DeviceDefinitionID,proto3" json:"DeviceDefinitionID,omitempty"`
}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModelYears) Reset() {
	*x = GetDeviceDefinitionAllItemResponse_GetDeviceModelYears{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_device_definition_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModelYears) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceDefinitionAllItemResponse_GetDeviceModelYears) ProtoMessage() {}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModelYears) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_device_definition_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceDefinitionAllItemResponse_GetDeviceModelYears.ProtoReflect.Descriptor instead.
func (*GetDeviceDefinitionAllItemResponse_GetDeviceModelYears) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_device_definition_proto_rawDescGZIP(), []int{29, 1}
}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModelYears) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *GetDeviceDefinitionAllItemResponse_GetDeviceModelYears) GetDeviceDefinitionID() string {
	if x != nil {
		return x.DeviceDefinitionID
	}
	return ""
}

var File_pkg_grpc_device_definition_proto protoreflect.FileDescriptor

var file_pkg_grpc_device_definition_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2e, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4a, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53,
	0x6c, 0x75, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65,
	0x61, 0x72, 0x22, 0x73, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x98, 0x05, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x24,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x02, 0x18,
	0x01, 0x52, 0x0b, 0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x48, 0x0a, 0x13, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4d, 0x61, 0x6b, 0x65, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x44, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x22, 0x50, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x4d, 0x4d, 0x59, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4d, 0x4d, 0x59,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x4d, 0x4d, 0x59, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x22, 0x34, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x69, 0x64, 0x65, 0x47, 0x75, 0x69, 0x64,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x52, 0x69, 0x64,
	0x65, 0x47, 0x75, 0x69, 0x64, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0xe5, 0x01, 0x0a, 0x13, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x46, 0x0a, 0x1a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x0a, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x75, 0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x6b, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x61, 0x6b, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x53, 0x6c, 0x75, 0x67, 0x22, 0xbe, 0x02, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x30, 0x0a,
	0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x46, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0xea, 0x03, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x65, 0x6d, 0x5f, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6f, 0x65, 0x6d, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x25, 0x0a, 0x0c, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x02, 0x18, 0x01, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73,
	0x12, 0x3e, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x64, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x10,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x64,
	0x12, 0x2a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x14,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xd7, 0x02, 0x0a, 0x0b, 0x56, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x6e, 0x5f, 0x77, 0x68, 0x65, 0x65,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x6e,
	0x57, 0x68, 0x65, 0x65, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x6f, 0x66, 0x5f, 0x64, 0x6f, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x44, 0x6f, 0x6f, 0x72, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x4d, 0x53, 0x52, 0x50, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x4d, 0x53, 0x52, 0x50, 0x12, 0x1b, 0x0a, 0x09, 0x45,
	0x50, 0x41, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x45, 0x50, 0x41, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x68, 0x69,
	0x63, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x76, 0x65, 0x68, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x4d,
	0x50, 0x47, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0a, 0x4d, 0x50, 0x47, 0x48, 0x69, 0x67, 0x68, 0x77, 0x61, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x4d, 0x50, 0x47, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x4d, 0x50, 0x47, 0x43, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x16, 0x66, 0x75, 0x65, 0x6c, 0x5f,
	0x74, 0x61, 0x6e, 0x6b, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x67, 0x61,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x61, 0x6e,
	0x6b, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x47, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x50, 0x47, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x4d, 0x50, 0x47, 0x22, 0x77,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x4d, 0x59, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x6b, 0x65, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x6b, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x22, 0x3c, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x4f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x35, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x83, 0x04, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x3c, 0x0a, 0x1b, 0x61, 0x75, 0x74, 0x6f,
	0x5f, 0x70, 0x69, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x61,
	0x75, 0x74, 0x6f, 0x50, 0x69, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x69, 0x0a, 0x1b, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70,
	0x69, 0x5f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41,
	0x75, 0x74, 0x6f, 0x50, 0x69, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x18, 0x61, 0x75, 0x74, 0x6f, 0x50, 0x69, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x53, 0x65, 0x63, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x13, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x1a, 0x64, 0x0a, 0x18, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x69,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x45, 0x56, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x42, 0x45, 0x56, 0x12, 0x10, 0x0a, 0x03, 0x48, 0x45, 0x56, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x48, 0x45, 0x56, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x43, 0x45, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x49, 0x43, 0x45, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x48, 0x45, 0x56,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x48, 0x45, 0x56, 0x22, 0xf4, 0x01, 0x0a,
	0x11, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x18, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x65, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3b, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x37, 0x0a, 0x25,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb8, 0x02, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x22, 0xdd, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x22, 0x70, 0x0a, 0x28, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x22, 0x1e, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xa9, 0x0a, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x49, 0x64, 0x12,
	0x55, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x12, 0x67, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x12, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x23, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x4d, 0x0a, 0x11, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0c, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x44, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x30,
	0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x1a, 0xbb, 0x02, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x14,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x1a, 0xad,
	0x02, 0x0a, 0x12, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x3a, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x73,
	0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x60, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe2, 0x02, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65,
	0x12, 0x50, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x1a, 0x7b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x52, 0x0a, 0x05, 0x79,
	0x65, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x59, 0x65, 0x61, 0x72, 0x73, 0x52, 0x05, 0x79, 0x65, 0x61, 0x72, 0x73, 0x1a,
	0x59, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x59, 0x65, 0x61, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0xa2, 0x02, 0x0a, 0x1d, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x61, 0x6b, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x5f, 0x76, 0x69, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x56, 0x69, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x62, 0x0a, 0x24, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x98, 0x03, 0x0a, 0x1e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12,
	0x1e, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x08, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x6b, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x44, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x22, 0xf3,
	0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x79, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x2b, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x29, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x36, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x22, 0x77, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64,
	0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b,
	0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x6b, 0x65, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x73, 0x6c, 0x75, 0x67, 0x22, 0x4c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x6b, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x4d, 0x61, 0x6b, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b,
	0x65, 0x73, 0x22, 0xad, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a,
	0x11, 0x6f, 0x65, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x65, 0x6d, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x53, 0x6c, 0x75,
	0x67, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x22, 0x83, 0x02, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75,
	0x62, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x22, 0x2a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x99, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4b, 0x65, 0x79, 0x22, 0x5b, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0x3d, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22,
	0xdc, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x29,
	0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x63,
	0x0a, 0x2f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x44, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x10,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7c, 0x0a, 0x2c, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x59, 0x65, 0x61, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x32, 0xdb, 0x1b, 0x0a, 0x17, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x20, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x12,
	0x26, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4d,
	0x4d, 0x59, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4d, 0x4d, 0x59, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x28, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x4d, 0x4d, 0x59,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x4d, 0x4d, 0x59, 0x12, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x79, 0x4d, 0x4d, 0x59, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x70, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x28, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x6f,
	0x75, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x24, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x20, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61,
	0x6b, 0x65, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b,
	0x65, 0x12, 0x4f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61,
	0x6b, 0x65, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65,
	0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61,
	0x6b, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x6b, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7b, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x20, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d,
	0x61, 0x6b, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x58, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x28,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x79, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x49, 0x44, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x74, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x2f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x79, 0x6c, 0x65, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x12, 0x1d,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x47, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x45, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01,
	0x0a, 0x27, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x34, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x35, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61,
	0x72, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x26, 0x53, 0x79, 0x6e, 0x63, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x45, 0x6c, 0x61, 0x73, 0x74, 0x69, 0x63, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x52, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7e, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6b,
	0x65, 0x41, 0x6e, 0x64, 0x59, 0x65, 0x61, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x32, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x4d, 0x61, 0x6b, 0x65, 0x41, 0x6e,
	0x64, 0x59, 0x65, 0x61, 0x72, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x44, 0x49, 0x4d, 0x4f, 0x2d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_grpc_device_definition_proto_rawDescOnce sync.Once
	file_pkg_grpc_device_definition_proto_rawDescData = file_pkg_grpc_device_definition_proto_rawDesc
)

func file_pkg_grpc_device_definition_proto_rawDescGZIP() []byte {
	file_pkg_grpc_device_definition_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_device_definition_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_grpc_device_definition_proto_rawDescData)
	})
	return file_pkg_grpc_device_definition_proto_rawDescData
}

var file_pkg_grpc_device_definition_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_pkg_grpc_device_definition_proto_goTypes = []interface{}{
	(*GetDeviceDefinitionRequest)(nil),                             // 0: grpc.GetDeviceDefinitionRequest
	(*GetDeviceDefinitionBySlugRequest)(nil),                       // 1: grpc.GetDeviceDefinitionBySlugRequest
	(*GetDeviceDefinitionResponse)(nil),                            // 2: grpc.GetDeviceDefinitionResponse
	(*GetDeviceDefinitionItemResponse)(nil),                        // 3: grpc.GetDeviceDefinitionItemResponse
	(*GetDevicesMMYResponse)(nil),                                  // 4: grpc.GetDevicesMMYResponse
	(*GetDevicesMMYItemResponse)(nil),                              // 5: grpc.GetDevicesMMYItemResponse
	(*ExternalID)(nil),                                             // 6: grpc.ExternalID
	(*Metadata)(nil),                                               // 7: grpc.Metadata
	(*DeviceTypeAttribute)(nil),                                    // 8: grpc.DeviceTypeAttribute
	(*DeviceTypeAttributeRequest)(nil),                             // 9: grpc.DeviceTypeAttributeRequest
	(*DeviceType)(nil),                                             // 10: grpc.DeviceType
	(*DeviceStyle)(nil),                                            // 11: grpc.DeviceStyle
	(*DeviceMake)(nil),                                             // 12: grpc.DeviceMake
	(*VehicleInfo)(nil),                                            // 13: grpc.VehicleInfo
	(*GetDeviceDefinitionByMMYRequest)(nil),                        // 14: grpc.GetDeviceDefinitionByMMYRequest
	(*GetDeviceDefinitionBySourceRequest)(nil),                     // 15: grpc.GetDeviceDefinitionBySourceRequest
	(*GetIntegrationResponse)(nil),                                 // 16: grpc.GetIntegrationResponse
	(*Integration)(nil),                                            // 17: grpc.Integration
	(*DeviceIntegration)(nil),                                      // 18: grpc.DeviceIntegration
	(*DeviceIntegrationFeature)(nil),                               // 19: grpc.DeviceIntegrationFeature
	(*GetDeviceDefinitionIntegrationResponse)(nil),                 // 20: grpc.GetDeviceDefinitionIntegrationResponse
	(*GetDeviceDefinitionIntegrationRequest)(nil),                  // 21: grpc.GetDeviceDefinitionIntegrationRequest
	(*CreateDeviceDefinitionRequest)(nil),                          // 22: grpc.CreateDeviceDefinitionRequest
	(*CreateDeviceIntegrationRequest)(nil),                         // 23: grpc.CreateDeviceIntegrationRequest
	(*DeviceIntegrationFeatureAttributeRequest)(nil),               // 24: grpc.DeviceIntegrationFeatureAttributeRequest
	(*BaseResponse)(nil),                                           // 25: grpc.BaseResponse
	(*UpdateDeviceDefinitionRequest)(nil),                          // 26: grpc.UpdateDeviceDefinitionRequest
	(*UpdateDeviceDefinitionImageRequest)(nil),                     // 27: grpc.UpdateDeviceDefinitionImageRequest
	(*GetDeviceDefinitionAllResponse)(nil),                         // 28: grpc.GetDeviceDefinitionAllResponse
	(*GetDeviceDefinitionAllItemResponse)(nil),                     // 29: grpc.GetDeviceDefinitionAllItemResponse
	(*FilterDeviceDefinitionRequest)(nil),                          // 30: grpc.FilterDeviceDefinitionRequest
	(*GetFilteredDeviceDefinitionsResponse)(nil),                   // 31: grpc.GetFilteredDeviceDefinitionsResponse
	(*FilterDeviceDefinitionsReponse)(nil),                         // 32: grpc.FilterDeviceDefinitionsReponse
	(*CreateDeviceStyleRequest)(nil),                               // 33: grpc.CreateDeviceStyleRequest
	(*GetIntegrationRequest)(nil),                                  // 34: grpc.GetIntegrationRequest
	(*GetIntegrationByTokenIDRequest)(nil),                         // 35: grpc.GetIntegrationByTokenIDRequest
	(*CreateDeviceMakeRequest)(nil),                                // 36: grpc.CreateDeviceMakeRequest
	(*GetDeviceStyleByIDRequest)(nil),                              // 37: grpc.GetDeviceStyleByIDRequest
	(*GetDeviceStyleByDeviceDefinitionIDRequest)(nil),              // 38: grpc.GetDeviceStyleByDeviceDefinitionIDRequest
	(*GetDeviceStyleResponse)(nil),                                 // 39: grpc.GetDeviceStyleResponse
	(*CreateIntegrationRequest)(nil),                               // 40: grpc.CreateIntegrationRequest
	(*GetDeviceMakeByNameRequest)(nil),                             // 41: grpc.GetDeviceMakeByNameRequest
	(*GetDeviceMakeBySlugRequest)(nil),                             // 42: grpc.GetDeviceMakeBySlugRequest
	(*GetDeviceMakeResponse)(nil),                                  // 43: grpc.GetDeviceMakeResponse
	(*UpdateDeviceMakeRequest)(nil),                                // 44: grpc.UpdateDeviceMakeRequest
	(*UpdateDeviceStyleRequest)(nil),                               // 45: grpc.UpdateDeviceStyleRequest
	(*GetDeviceStyleFilterRequest)(nil),                            // 46: grpc.GetDeviceStyleFilterRequest
	(*GetDeviceTypeByIDRequest)(nil),                               // 47: grpc.GetDeviceTypeByIDRequest
	(*GetDeviceTypeResponse)(nil),                                  // 48: grpc.GetDeviceTypeResponse
	(*GetDeviceTypeListResponse)(nil),                              // 49: grpc.GetDeviceTypeListResponse
	(*CreateDeviceTypeRequest)(nil),                                // 50: grpc.CreateDeviceTypeRequest
	(*UpdateDeviceTypeRequest)(nil),                                // 51: grpc.UpdateDeviceTypeRequest
	(*CreateDeviceTypeAttributeRequest)(nil),                       // 52: grpc.CreateDeviceTypeAttributeRequest
	(*DeleteDeviceTypeRequest)(nil),                                // 53: grpc.DeleteDeviceTypeRequest
	(*GetDeviceMakeByTokenIdRequest)(nil),                          // 54: grpc.GetDeviceMakeByTokenIdRequest
	(*GetDeviceDefinitionHardwareTemplateByIDRequest)(nil),         // 55: grpc.GetDeviceDefinitionHardwareTemplateByIDRequest
	(*GetDeviceDefinitionHardwareTemplateByIDResponse)(nil),        // 56: grpc.GetDeviceDefinitionHardwareTemplateByIDResponse
	(*DeviceImage)(nil),                                            // 57: grpc.DeviceImage
	(*GetDeviceImagesResponse)(nil),                                // 58: grpc.GetDeviceImagesResponse
	(*SyncStatusResult)(nil),                                       // 59: grpc.SyncStatusResult
	(*GetDeviceDefinitionByMakeAndYearRangeRequest)(nil),           // 60: grpc.GetDeviceDefinitionByMakeAndYearRangeRequest
	(*Integration_AutoPiPowertrainTemplate)(nil),                   // 61: grpc.Integration.AutoPiPowertrainTemplate
	(*UpdateDeviceDefinitionRequest_DeviceStyles)(nil),             // 62: grpc.UpdateDeviceDefinitionRequest.DeviceStyles
	(*UpdateDeviceDefinitionRequest_DeviceIntegrations)(nil),       // 63: grpc.UpdateDeviceDefinitionRequest.DeviceIntegrations
	(*GetDeviceDefinitionAllItemResponse_GetDeviceModels)(nil),     // 64: grpc.GetDeviceDefinitionAllItemResponse.GetDeviceModels
	(*GetDeviceDefinitionAllItemResponse_GetDeviceModelYears)(nil), // 65: grpc.GetDeviceDefinitionAllItemResponse.GetDeviceModelYears
	(*timestamppb.Timestamp)(nil),                                  // 66: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                                          // 67: google.protobuf.Empty
}
var file_pkg_grpc_device_definition_proto_depIdxs = []int32{
	3,  // 0: grpc.GetDeviceDefinitionResponse.device_definitions:type_name -> grpc.GetDeviceDefinitionItemResponse
	10, // 1: grpc.GetDeviceDefinitionItemResponse.type:type_name -> grpc.DeviceType
	13, // 2: grpc.GetDeviceDefinitionItemResponse.vehicle_data:type_name -> grpc.VehicleInfo
	18, // 3: grpc.GetDeviceDefinitionItemResponse.device_integrations:type_name -> grpc.DeviceIntegration
	12, // 4: grpc.GetDeviceDefinitionItemResponse.make:type_name -> grpc.DeviceMake
	11, // 5: grpc.GetDeviceDefinitionItemResponse.device_styles:type_name -> grpc.DeviceStyle
	8,  // 6: grpc.GetDeviceDefinitionItemResponse.device_attributes:type_name -> grpc.DeviceTypeAttribute
	6,  // 7: grpc.GetDeviceDefinitionItemResponse.external_ids:type_name -> grpc.ExternalID
	5,  // 8: grpc.GetDevicesMMYResponse.device:type_name -> grpc.GetDevicesMMYItemResponse
	8,  // 9: grpc.DeviceStyle.device_attributes:type_name -> grpc.DeviceTypeAttribute
	6,  // 10: grpc.DeviceMake.external_ids_typed:type_name -> grpc.ExternalID
	7,  // 11: grpc.DeviceMake.metadata:type_name -> grpc.Metadata
	66, // 12: grpc.DeviceMake.created_at:type_name -> google.protobuf.Timestamp
	66, // 13: grpc.DeviceMake.updated_at:type_name -> google.protobuf.Timestamp
	17, // 14: grpc.GetIntegrationResponse.integrations:type_name -> grpc.Integration
	61, // 15: grpc.Integration.auto_pi_powertrain_template:type_name -> grpc.Integration.AutoPiPowertrainTemplate
	17, // 16: grpc.DeviceIntegration.integration:type_name -> grpc.Integration
	19, // 17: grpc.DeviceIntegration.features:type_name -> grpc.DeviceIntegrationFeature
	18, // 18: grpc.GetDeviceDefinitionIntegrationResponse.integrations:type_name -> grpc.DeviceIntegration
	9,  // 19: grpc.CreateDeviceDefinitionRequest.device_attributes:type_name -> grpc.DeviceTypeAttributeRequest
	24, // 20: grpc.CreateDeviceIntegrationRequest.features:type_name -> grpc.DeviceIntegrationFeatureAttributeRequest
	62, // 21: grpc.UpdateDeviceDefinitionRequest.device_styles:type_name -> grpc.UpdateDeviceDefinitionRequest.DeviceStyles
	63, // 22: grpc.UpdateDeviceDefinitionRequest.device_integrations:type_name -> grpc.UpdateDeviceDefinitionRequest.DeviceIntegrations
	9,  // 23: grpc.UpdateDeviceDefinitionRequest.device_attributes:type_name -> grpc.DeviceTypeAttributeRequest
	6,  // 24: grpc.UpdateDeviceDefinitionRequest.external_ids:type_name -> grpc.ExternalID
	29, // 25: grpc.GetDeviceDefinitionAllResponse.items:type_name -> grpc.GetDeviceDefinitionAllItemResponse
	64, // 26: grpc.GetDeviceDefinitionAllItemResponse.models:type_name -> grpc.GetDeviceDefinitionAllItemResponse.GetDeviceModels
	32, // 27: grpc.GetFilteredDeviceDefinitionsResponse.items:type_name -> grpc.FilterDeviceDefinitionsReponse
	6,  // 28: grpc.FilterDeviceDefinitionsReponse.external_ids:type_name -> grpc.ExternalID
	11, // 29: grpc.GetDeviceStyleResponse.device_styles:type_name -> grpc.DeviceStyle
	12, // 30: grpc.GetDeviceMakeResponse.device_makes:type_name -> grpc.DeviceMake
	8,  // 31: grpc.GetDeviceTypeResponse.attributes:type_name -> grpc.DeviceTypeAttribute
	48, // 32: grpc.GetDeviceTypeListResponse.device_types:type_name -> grpc.GetDeviceTypeResponse
	52, // 33: grpc.UpdateDeviceTypeRequest.attributes:type_name -> grpc.CreateDeviceTypeAttributeRequest
	57, // 34: grpc.GetDeviceImagesResponse.images:type_name -> grpc.DeviceImage
	66, // 35: grpc.UpdateDeviceDefinitionRequest.DeviceStyles.created_at:type_name -> google.protobuf.Timestamp
	66, // 36: grpc.UpdateDeviceDefinitionRequest.DeviceStyles.updated_at:type_name -> google.protobuf.Timestamp
	66, // 37: grpc.UpdateDeviceDefinitionRequest.DeviceIntegrations.created_at:type_name -> google.protobuf.Timestamp
	66, // 38: grpc.UpdateDeviceDefinitionRequest.DeviceIntegrations.updated_at:type_name -> google.protobuf.Timestamp
	19, // 39: grpc.UpdateDeviceDefinitionRequest.DeviceIntegrations.features:type_name -> grpc.DeviceIntegrationFeature
	65, // 40: grpc.GetDeviceDefinitionAllItemResponse.GetDeviceModels.years:type_name -> grpc.GetDeviceDefinitionAllItemResponse.GetDeviceModelYears
	0,  // 41: grpc.DeviceDefinitionService.GetDeviceDefinitionByID:input_type -> grpc.GetDeviceDefinitionRequest
	1,  // 42: grpc.DeviceDefinitionService.GetDeviceDefinitionBySlug:input_type -> grpc.GetDeviceDefinitionBySlugRequest
	67, // 43: grpc.DeviceDefinitionService.GetDeviceDefinitions:input_type -> google.protobuf.Empty
	67, // 44: grpc.DeviceDefinitionService.GetDevicesMMY:input_type -> google.protobuf.Empty
	67, // 45: grpc.DeviceDefinitionService.GetDeviceDefinitionsWithHardwareTemplate:input_type -> google.protobuf.Empty
	14, // 46: grpc.DeviceDefinitionService.GetDeviceDefinitionByMMY:input_type -> grpc.GetDeviceDefinitionByMMYRequest
	15, // 47: grpc.DeviceDefinitionService.GetDeviceDefinitionBySource:input_type -> grpc.GetDeviceDefinitionBySourceRequest
	67, // 48: grpc.DeviceDefinitionService.GetDeviceDefinitionWithoutImages:input_type -> google.protobuf.Empty
	67, // 49: grpc.DeviceDefinitionService.GetDeviceDefinitionAll:input_type -> google.protobuf.Empty
	41, // 50: grpc.DeviceDefinitionService.GetDeviceMakeByName:input_type -> grpc.GetDeviceMakeByNameRequest
	42, // 51: grpc.DeviceDefinitionService.GetDeviceMakeBySlug:input_type -> grpc.GetDeviceMakeBySlugRequest
	54, // 52: grpc.DeviceDefinitionService.GetDeviceMakeByTokenID:input_type -> grpc.GetDeviceMakeByTokenIdRequest
	67, // 53: grpc.DeviceDefinitionService.GetDeviceMakes:input_type -> google.protobuf.Empty
	67, // 54: grpc.DeviceDefinitionService.GetIntegrations:input_type -> google.protobuf.Empty
	34, // 55: grpc.DeviceDefinitionService.GetIntegrationByID:input_type -> grpc.GetIntegrationRequest
	21, // 56: grpc.DeviceDefinitionService.GetDeviceDefinitionIntegration:input_type -> grpc.GetDeviceDefinitionIntegrationRequest
	0,  // 57: grpc.DeviceDefinitionService.GetDeviceImagesByIDs:input_type -> grpc.GetDeviceDefinitionRequest
	22, // 58: grpc.DeviceDefinitionService.CreateDeviceDefinition:input_type -> grpc.CreateDeviceDefinitionRequest
	23, // 59: grpc.DeviceDefinitionService.CreateDeviceIntegration:input_type -> grpc.CreateDeviceIntegrationRequest
	33, // 60: grpc.DeviceDefinitionService.CreateDeviceStyle:input_type -> grpc.CreateDeviceStyleRequest
	36, // 61: grpc.DeviceDefinitionService.CreateDeviceMake:input_type -> grpc.CreateDeviceMakeRequest
	40, // 62: grpc.DeviceDefinitionService.CreateIntegration:input_type -> grpc.CreateIntegrationRequest
	26, // 63: grpc.DeviceDefinitionService.UpdateDeviceDefinition:input_type -> grpc.UpdateDeviceDefinitionRequest
	27, // 64: grpc.DeviceDefinitionService.SetDeviceDefinitionImage:input_type -> grpc.UpdateDeviceDefinitionImageRequest
	30, // 65: grpc.DeviceDefinitionService.GetFilteredDeviceDefinition:input_type -> grpc.FilterDeviceDefinitionRequest
	37, // 66: grpc.DeviceDefinitionService.GetDeviceStyleByID:input_type -> grpc.GetDeviceStyleByIDRequest
	37, // 67: grpc.DeviceDefinitionService.GetDeviceStyleByExternalID:input_type -> grpc.GetDeviceStyleByIDRequest
	38, // 68: grpc.DeviceDefinitionService.GetDeviceStylesByDeviceDefinitionID:input_type -> grpc.GetDeviceStyleByDeviceDefinitionIDRequest
	46, // 69: grpc.DeviceDefinitionService.GetDeviceStylesByFilter:input_type -> grpc.GetDeviceStyleFilterRequest
	44, // 70: grpc.DeviceDefinitionService.UpdateDeviceMake:input_type -> grpc.UpdateDeviceMakeRequest
	45, // 71: grpc.DeviceDefinitionService.UpdateDeviceStyle:input_type -> grpc.UpdateDeviceStyleRequest
	47, // 72: grpc.DeviceDefinitionService.GetDeviceTypesByID:input_type -> grpc.GetDeviceTypeByIDRequest
	67, // 73: grpc.DeviceDefinitionService.GetDeviceTypes:input_type -> google.protobuf.Empty
	50, // 74: grpc.DeviceDefinitionService.CreateDeviceType:input_type -> grpc.CreateDeviceTypeRequest
	51, // 75: grpc.DeviceDefinitionService.UpdateDeviceType:input_type -> grpc.UpdateDeviceTypeRequest
	53, // 76: grpc.DeviceDefinitionService.DeleteDeviceType:input_type -> grpc.DeleteDeviceTypeRequest
	55, // 77: grpc.DeviceDefinitionService.GetDeviceDefinitionHardwareTemplateByID:input_type -> grpc.GetDeviceDefinitionHardwareTemplateByIDRequest
	67, // 78: grpc.DeviceDefinitionService.SyncDeviceDefinitionsWithElasticSearch:input_type -> google.protobuf.Empty
	35, // 79: grpc.DeviceDefinitionService.GetIntegrationByTokenID:input_type -> grpc.GetIntegrationByTokenIDRequest
	60, // 80: grpc.DeviceDefinitionService.GetDeviceDefinitionByMakeAndYearRange:input_type -> grpc.GetDeviceDefinitionByMakeAndYearRangeRequest
	2,  // 81: grpc.DeviceDefinitionService.GetDeviceDefinitionByID:output_type -> grpc.GetDeviceDefinitionResponse
	3,  // 82: grpc.DeviceDefinitionService.GetDeviceDefinitionBySlug:output_type -> grpc.GetDeviceDefinitionItemResponse
	2,  // 83: grpc.DeviceDefinitionService.GetDeviceDefinitions:output_type -> grpc.GetDeviceDefinitionResponse
	4,  // 84: grpc.DeviceDefinitionService.GetDevicesMMY:output_type -> grpc.GetDevicesMMYResponse
	4,  // 85: grpc.DeviceDefinitionService.GetDeviceDefinitionsWithHardwareTemplate:output_type -> grpc.GetDevicesMMYResponse
	3,  // 86: grpc.DeviceDefinitionService.GetDeviceDefinitionByMMY:output_type -> grpc.GetDeviceDefinitionItemResponse
	3,  // 87: grpc.DeviceDefinitionService.GetDeviceDefinitionBySource:output_type -> grpc.GetDeviceDefinitionItemResponse
	2,  // 88: grpc.DeviceDefinitionService.GetDeviceDefinitionWithoutImages:output_type -> grpc.GetDeviceDefinitionResponse
	28, // 89: grpc.DeviceDefinitionService.GetDeviceDefinitionAll:output_type -> grpc.GetDeviceDefinitionAllResponse
	12, // 90: grpc.DeviceDefinitionService.GetDeviceMakeByName:output_type -> grpc.DeviceMake
	12, // 91: grpc.DeviceDefinitionService.GetDeviceMakeBySlug:output_type -> grpc.DeviceMake
	12, // 92: grpc.DeviceDefinitionService.GetDeviceMakeByTokenID:output_type -> grpc.DeviceMake
	43, // 93: grpc.DeviceDefinitionService.GetDeviceMakes:output_type -> grpc.GetDeviceMakeResponse
	16, // 94: grpc.DeviceDefinitionService.GetIntegrations:output_type -> grpc.GetIntegrationResponse
	17, // 95: grpc.DeviceDefinitionService.GetIntegrationByID:output_type -> grpc.Integration
	20, // 96: grpc.DeviceDefinitionService.GetDeviceDefinitionIntegration:output_type -> grpc.GetDeviceDefinitionIntegrationResponse
	58, // 97: grpc.DeviceDefinitionService.GetDeviceImagesByIDs:output_type -> grpc.GetDeviceImagesResponse
	25, // 98: grpc.DeviceDefinitionService.CreateDeviceDefinition:output_type -> grpc.BaseResponse
	25, // 99: grpc.DeviceDefinitionService.CreateDeviceIntegration:output_type -> grpc.BaseResponse
	25, // 100: grpc.DeviceDefinitionService.CreateDeviceStyle:output_type -> grpc.BaseResponse
	25, // 101: grpc.DeviceDefinitionService.CreateDeviceMake:output_type -> grpc.BaseResponse
	25, // 102: grpc.DeviceDefinitionService.CreateIntegration:output_type -> grpc.BaseResponse
	25, // 103: grpc.DeviceDefinitionService.UpdateDeviceDefinition:output_type -> grpc.BaseResponse
	25, // 104: grpc.DeviceDefinitionService.SetDeviceDefinitionImage:output_type -> grpc.BaseResponse
	31, // 105: grpc.DeviceDefinitionService.GetFilteredDeviceDefinition:output_type -> grpc.GetFilteredDeviceDefinitionsResponse
	11, // 106: grpc.DeviceDefinitionService.GetDeviceStyleByID:output_type -> grpc.DeviceStyle
	11, // 107: grpc.DeviceDefinitionService.GetDeviceStyleByExternalID:output_type -> grpc.DeviceStyle
	39, // 108: grpc.DeviceDefinitionService.GetDeviceStylesByDeviceDefinitionID:output_type -> grpc.GetDeviceStyleResponse
	39, // 109: grpc.DeviceDefinitionService.GetDeviceStylesByFilter:output_type -> grpc.GetDeviceStyleResponse
	25, // 110: grpc.DeviceDefinitionService.UpdateDeviceMake:output_type -> grpc.BaseResponse
	25, // 111: grpc.DeviceDefinitionService.UpdateDeviceStyle:output_type -> grpc.BaseResponse
	48, // 112: grpc.DeviceDefinitionService.GetDeviceTypesByID:output_type -> grpc.GetDeviceTypeResponse
	49, // 113: grpc.DeviceDefinitionService.GetDeviceTypes:output_type -> grpc.GetDeviceTypeListResponse
	25, // 114: grpc.DeviceDefinitionService.CreateDeviceType:output_type -> grpc.BaseResponse
	25, // 115: grpc.DeviceDefinitionService.UpdateDeviceType:output_type -> grpc.BaseResponse
	25, // 116: grpc.DeviceDefinitionService.DeleteDeviceType:output_type -> grpc.BaseResponse
	56, // 117: grpc.DeviceDefinitionService.GetDeviceDefinitionHardwareTemplateByID:output_type -> grpc.GetDeviceDefinitionHardwareTemplateByIDResponse
	59, // 118: grpc.DeviceDefinitionService.SyncDeviceDefinitionsWithElasticSearch:output_type -> grpc.SyncStatusResult
	17, // 119: grpc.DeviceDefinitionService.GetIntegrationByTokenID:output_type -> grpc.Integration
	2,  // 120: grpc.DeviceDefinitionService.GetDeviceDefinitionByMakeAndYearRange:output_type -> grpc.GetDeviceDefinitionResponse
	81, // [81:121] is the sub-list for method output_type
	41, // [41:81] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_pkg_grpc_device_definition_proto_init() }
func file_pkg_grpc_device_definition_proto_init() {
	if File_pkg_grpc_device_definition_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_grpc_device_definition_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionBySlugRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesMMYResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesMMYItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceStyle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceMake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VehicleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionByMMYRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionBySourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceIntegration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceIntegrationFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionIntegrationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceIntegrationFeatureAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceDefinitionImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionAllItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterDeviceDefinitionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilteredDeviceDefinitionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterDeviceDefinitionsReponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceStyleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntegrationByTokenIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceMakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceStyleByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceStyleByDeviceDefinitionIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceStyleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateIntegrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceMakeByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceMakeBySlugRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceMakeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceMakeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceStyleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceStyleFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceTypeByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceTypeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDeviceTypeAttributeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceMakeByTokenIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionHardwareTemplateByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionHardwareTemplateByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceImagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStatusResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionByMakeAndYearRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Integration_AutoPiPowertrainTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceDefinitionRequest_DeviceStyles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceDefinitionRequest_DeviceIntegrations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionAllItemResponse_GetDeviceModels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_device_definition_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceDefinitionAllItemResponse_GetDeviceModelYears); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_grpc_device_definition_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_device_definition_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_device_definition_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_device_definition_proto_msgTypes,
	}.Build()
	File_pkg_grpc_device_definition_proto = out.File
	file_pkg_grpc_device_definition_proto_rawDesc = nil
	file_pkg_grpc_device_definition_proto_goTypes = nil
	file_pkg_grpc_device_definition_proto_depIdxs = nil
}
